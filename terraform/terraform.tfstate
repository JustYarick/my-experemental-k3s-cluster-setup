{
  "version": 4,
  "terraform_version": "1.13.4",
  "serial": 79,
  "lineage": "25dafca4-3c71-3aff-1d81-4b0f38c24506",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argo-cd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-cd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v3.1.9",
                "chart": "argo-cd",
                "first_deployed": 1761906731,
                "last_deployed": 1761906731,
                "name": "argo-cd",
                "namespace": "ci-cd",
                "notes": "\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argo-cd-argocd-server -n ci-cd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n ci-cd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"apiVersionOverrides\":{},\"applicationSet\":{\"affinity\":{},\"allowAnyNamespace\":false,\"automountServiceAccountToken\":true,\"certificate\":{\"additionalHosts\":[],\"annotations\":{},\"domain\":\"\",\"duration\":\"\",\"enabled\":false,\"issuer\":{\"group\":\"\",\"kind\":\"\",\"name\":\"\"},\"privateKey\":{\"algorithm\":\"RSA\",\"encoding\":\"PKCS1\",\"rotationPolicy\":\"Never\",\"size\":2048},\"renewBefore\":\"\"},\"containerPorts\":{\"metrics\":8080,\"probe\":8081,\"webhook\":7000},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"emptyDir\":{\"sizeLimit\":\"\"},\"extraArgs\":[],\"extraContainers\":[],\"extraEnv\":[],\"extraEnvFrom\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"enabled\":false,\"extraHosts\":[],\"extraPaths\":[],\"extraRules\":[],\"extraTls\":[],\"hostname\":\"\",\"ingressClassName\":\"\",\"labels\":{},\"path\":\"/api/webhook\",\"pathType\":\"Prefix\",\"tls\":false},\"initContainers\":[],\"livenessProbe\":{\"enabled\":false,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"labels\":{},\"portName\":\"http-metrics\",\"servicePort\":8080,\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scheme\":\"\",\"scrapeTimeout\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"applicationset-controller\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":false,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicas\":1,\"resources\":{},\"runtimeClassName\":\"\",\"service\":{\"annotations\":{},\"labels\":{},\"port\":7000,\"portName\":\"http-webhook\",\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"labels\":{},\"name\":\"argocd-applicationset-controller\"},\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[]},\"commitServer\":{\"affinity\":{},\"automountServiceAccountToken\":false,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"enabled\":false,\"extraArgs\":[],\"extraEnv\":[],\"extraEnvFrom\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":5},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"labels\":{},\"portName\":\"metrics\",\"servicePort\":8087,\"type\":\"ClusterIP\"}},\"name\":\"commit-server\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"timeoutSeconds\":1},\"resources\":{},\"runtimeClassName\":\"\",\"service\":{\"annotations\":{},\"labels\":{},\"port\":8086,\"portName\":\"server\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"labels\":{},\"name\":\"argocd-commit-server\"},\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[]},\"configs\":{\"clusterCredentials\":{},\"cm\":{\"admin.enabled\":true,\"annotations\":{},\"application.instanceLabelKey\":\"argocd.argoproj.io/instance\",\"application.sync.impersonation.enabled\":false,\"create\":true,\"exec.enabled\":false,\"resource.customizations.ignoreResourceUpdates.ConfigMap\":\"jqPathExpressions:\\n  # Ignore the cluster-autoscaler status\\n  - '.metadata.annotations.\\\"cluster-autoscaler.kubernetes.io/last-updated\\\"'\\n  # Ignore the annotation of the legacy Leases election\\n  - '.metadata.annotations.\\\"control-plane.alpha.kubernetes.io/leader\\\"'\\n\",\"resource.customizations.ignoreResourceUpdates.Endpoints\":\"jsonPointers:\\n  - /metadata\\n  - /subsets\\n\",\"resource.customizations.ignoreResourceUpdates.all\":\"jsonPointers:\\n  - /status\\n\",\"resource.customizations.ignoreResourceUpdates.apps_ReplicaSet\":\"jqPathExpressions:\\n  - '.metadata.annotations.\\\"deployment.kubernetes.io/desired-replicas\\\"'\\n  - '.metadata.annotations.\\\"deployment.kubernetes.io/max-replicas\\\"'\\n  - '.metadata.annotations.\\\"rollout.argoproj.io/desired-replicas\\\"'\\n\",\"resource.customizations.ignoreResourceUpdates.argoproj.io_Application\":\"jqPathExpressions:\\n  - '.metadata.annotations.\\\"notified.notifications.argoproj.io\\\"'\\n  - '.metadata.annotations.\\\"argocd.argoproj.io/refresh\\\"'\\n  - '.metadata.annotations.\\\"argocd.argoproj.io/hydrate\\\"'\\n  - '.operation'\\n\",\"resource.customizations.ignoreResourceUpdates.argoproj.io_Rollout\":\"jqPathExpressions:\\n  - '.metadata.annotations.\\\"notified.notifications.argoproj.io\\\"'\\n\",\"resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler\":\"jqPathExpressions:\\n  - '.metadata.annotations.\\\"autoscaling.alpha.kubernetes.io/behavior\\\"'\\n  - '.metadata.annotations.\\\"autoscaling.alpha.kubernetes.io/conditions\\\"'\\n  - '.metadata.annotations.\\\"autoscaling.alpha.kubernetes.io/metrics\\\"'\\n  - '.metadata.annotations.\\\"autoscaling.alpha.kubernetes.io/current-metrics\\\"'\\n\",\"resource.customizations.ignoreResourceUpdates.discovery.k8s.io_EndpointSlice\":\"jsonPointers:\\n  - /metadata\\n  - /endpoints\\n  - /ports\\n\",\"resource.exclusions\":\"### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter\\n- apiGroups:\\n  - ''\\n  - discovery.k8s.io\\n  kinds:\\n  - Endpoints\\n  - EndpointSlice\\n### Internal Kubernetes resources excluded reduce the number of watched events\\n- apiGroups:\\n  - coordination.k8s.io\\n  kinds:\\n  - Lease\\n### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events\\n- apiGroups:\\n  - authentication.k8s.io\\n  - authorization.k8s.io\\n  kinds:\\n  - SelfSubjectReview\\n  - TokenReview\\n  - LocalSubjectAccessReview\\n  - SelfSubjectAccessReview\\n  - SelfSubjectRulesReview\\n  - SubjectAccessReview\\n### Intermediate Certificate Request excluded reduce the number of watched events\\n- apiGroups:\\n  - certificates.k8s.io\\n  kinds:\\n  - CertificateSigningRequest\\n- apiGroups:\\n  - cert-manager.io\\n  kinds:\\n  - CertificateRequest\\n### Cilium internal resources excluded reduce the number of watched events and UI Clutter\\n- apiGroups:\\n  - cilium.io\\n  kinds:\\n  - CiliumIdentity\\n  - CiliumEndpoint\\n  - CiliumEndpointSlice\\n### Kyverno intermediate and reporting resources excluded reduce the number of watched events and improve performance\\n- apiGroups:\\n  - kyverno.io\\n  - reports.kyverno.io\\n  - wgpolicyk8s.io\\n  kinds:\\n  - PolicyReport\\n  - ClusterPolicyReport\\n  - EphemeralReport\\n  - ClusterEphemeralReport\\n  - AdmissionReport\\n  - ClusterAdmissionReport\\n  - BackgroundScanReport\\n  - ClusterBackgroundScanReport\\n  - UpdateRequest\\n\",\"server.rbac.log.enforce.enable\":false,\"statusbadge.enabled\":false,\"timeout.hard.reconciliation\":\"0s\",\"timeout.reconciliation\":\"180s\"},\"cmp\":{\"annotations\":{},\"create\":false,\"plugins\":{}},\"credentialTemplates\":{},\"credentialTemplatesAnnotations\":{},\"gpg\":{\"annotations\":{},\"keys\":{}},\"params\":{\"annotations\":{},\"create\":true},\"rbac\":{\"annotations\":{},\"create\":true,\"policy.csv\":\"\",\"policy.default\":\"\",\"policy.matchMode\":\"glob\",\"scopes\":\"[groups]\"},\"repositories\":{},\"repositoriesAnnotations\":{},\"secret\":{\"annotations\":{},\"argocdServerAdminPassword\":\"\",\"argocdServerAdminPasswordMtime\":\"\",\"azureDevops\":{\"password\":\"\",\"username\":\"\"},\"bitbucketServerSecret\":\"\",\"bitbucketUUID\":\"\",\"createSecret\":true,\"extra\":{},\"githubSecret\":\"\",\"gitlabSecret\":\"\",\"gogsSecret\":\"\",\"labels\":{}},\"ssh\":{\"annotations\":{},\"create\":true,\"extraHosts\":\"\",\"knownHosts\":\"[ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\\n[ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\\n[ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\\nbitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=\\nbitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO\\nbitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=\\ngithub.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\\ngithub.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\n\"},\"styles\":\"\",\"tls\":{\"annotations\":{},\"certificates\":{},\"create\":true}},\"controller\":{\"affinity\":{},\"automountServiceAccountToken\":true,\"clusterRoleRules\":{\"enabled\":false,\"rules\":[]},\"containerPorts\":{\"metrics\":8082},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"dynamicClusterDistribution\":false,\"emptyDir\":{\"sizeLimit\":\"\"},\"env\":[],\"envFrom\":[],\"extraArgs\":[],\"extraContainers\":[],\"heartbeatTime\":10,\"hostNetwork\":false,\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"imagePullSecrets\":[],\"initContainers\":[],\"metrics\":{\"applicationLabels\":{\"enabled\":false,\"labels\":[]},\"enabled\":false,\"rules\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"namespace\":\"\",\"selector\":{},\"spec\":[]},\"scrapeTimeout\":\"\",\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"labels\":{},\"portName\":\"http-metrics\",\"servicePort\":8082,\"type\":\"NodePort\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scheme\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"application-controller\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicas\":1,\"resources\":{},\"revisionHistoryLimit\":5,\"roleRules\":[],\"runtimeClassName\":\"\",\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"labels\":{},\"name\":\"argocd-application-controller\"},\"statefulsetAnnotations\":{},\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[],\"volumeMounts\":[],\"volumes\":[],\"vpa\":{\"annotations\":{},\"containerPolicy\":{},\"enabled\":false,\"labels\":{},\"updateMode\":\"Initial\"}},\"crds\":{\"additionalLabels\":{},\"annotations\":{},\"install\":true,\"keep\":true},\"createAggregateRoles\":false,\"createClusterRoles\":true,\"dex\":{\"affinity\":{},\"automountServiceAccountToken\":true,\"certificateSecret\":{\"annotations\":{},\"ca\":\"\",\"crt\":\"\",\"enabled\":false,\"key\":\"\",\"labels\":{}},\"containerPorts\":{\"grpc\":5557,\"http\":5556,\"metrics\":5558},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"emptyDir\":{\"sizeLimit\":\"\"},\"enabled\":false,\"env\":[],\"envFrom\":[],\"extraArgs\":[],\"extraContainers\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"ghcr.io/dexidp/dex\",\"tag\":\"v2.44.0\"},\"imagePullSecrets\":[],\"initContainers\":[],\"initImage\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"resources\":{},\"tag\":\"\"},\"livenessProbe\":{\"enabled\":false,\"failureThreshold\":3,\"httpPath\":\"/healthz/live\",\"httpPort\":\"metrics\",\"httpScheme\":\"HTTP\",\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{},\"labels\":{},\"portName\":\"http-metrics\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scheme\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"dex-server\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":false,\"failureThreshold\":3,\"httpPath\":\"/healthz/ready\",\"httpPort\":\"metrics\",\"httpScheme\":\"HTTP\",\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{},\"runtimeClassName\":\"\",\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"name\":\"argocd-dex-server\"},\"servicePortGrpc\":5557,\"servicePortGrpcName\":\"grpc\",\"servicePortHttp\":5556,\"servicePortHttpName\":\"http\",\"servicePortMetrics\":5558,\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[],\"volumeMounts\":[],\"volumes\":[]},\"externalRedis\":{\"existingSecret\":\"\",\"host\":\"\",\"password\":\"\",\"port\":6379,\"secretAnnotations\":{},\"username\":\"\"},\"extraObjects\":[],\"fullnameOverride\":\"\",\"global\":{\"addPrometheusAnnotations\":false,\"additionalLabels\":{},\"affinity\":{\"nodeAffinity\":{\"matchExpressions\":[],\"type\":\"hard\"},\"podAntiAffinity\":\"soft\"},\"certificateAnnotations\":{},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{},\"domain\":\"argocd.example.com\",\"dualStack\":{\"ipFamilies\":[],\"ipFamilyPolicy\":\"\"},\"env\":[],\"hostAliases\":[],\"image\":{\"imagePullPolicy\":\"IfNotPresent\",\"repository\":\"quay.io/argoproj/argocd\",\"tag\":\"\"},\"imagePullSecrets\":[],\"logging\":{\"format\":\"text\",\"level\":\"info\"},\"networkPolicy\":{\"create\":false,\"defaultDenyIngress\":false},\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"revisionHistoryLimit\":3,\"runtimeClassName\":\"\",\"securityContext\":{},\"statefulsetAnnotations\":{},\"tolerations\":[],\"topologySpreadConstraints\":[]},\"kubeVersionOverride\":\"\",\"nameOverride\":\"argocd\",\"namespaceOverride\":\"\",\"notifications\":{\"affinity\":{},\"argocdUrl\":\"\",\"automountServiceAccountToken\":true,\"clusterRoleRules\":{\"rules\":[]},\"cm\":{\"create\":true},\"containerPorts\":{\"metrics\":9001},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"context\":{},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{\"type\":\"Recreate\"},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"enabled\":false,\"extraArgs\":[],\"extraContainers\":[],\"extraEnv\":[],\"extraEnvFrom\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"imagePullSecrets\":[],\"initContainers\":[],\"livenessProbe\":{\"enabled\":false,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"port\":9001,\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"labels\":{},\"portName\":\"http-metrics\",\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"metricRelabelings\":[],\"relabelings\":[],\"scheme\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"notifications-controller\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"notifiers\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":false,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{},\"runtimeClassName\":\"\",\"secret\":{\"annotations\":{},\"create\":true,\"items\":{},\"labels\":{},\"name\":\"argocd-notifications-secret\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"labels\":{},\"name\":\"argocd-notifications-controller\"},\"subscriptions\":[],\"templates\":{},\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[],\"triggers\":{}},\"openshift\":{\"enabled\":false},\"redis\":{\"affinity\":{},\"automountServiceAccountToken\":true,\"containerPorts\":{\"metrics\":9121,\"redis\":6379},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"enabled\":true,\"env\":[],\"envFrom\":[],\"exporter\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":false,\"env\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"ghcr.io/oliver006/redis_exporter\",\"tag\":\"v1.79.0\"},\"livenessProbe\":{\"enabled\":false,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"readinessProbe\":{\"enabled\":false,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"resources\":{}},\"extraArgs\":[],\"extraContainers\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"ecr-public.aws.com/docker/library/redis\",\"tag\":\"7.2.11-alpine\"},\"imagePullSecrets\":[],\"initContainers\":[],\"livenessProbe\":{\"enabled\":false,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{},\"clusterIP\":\"None\",\"labels\":{},\"portName\":\"http-metrics\",\"servicePort\":9121,\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scheme\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"redis\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":false,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15},\"resources\":{},\"runtimeClassName\":\"\",\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":999,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"service\":{\"annotations\":{},\"labels\":{}},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":false,\"create\":false,\"name\":\"\"},\"servicePort\":6379,\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[],\"volumeMounts\":[],\"volumes\":[]},\"redis-ha\":{\"additionalAffinities\":{},\"affinity\":\"\",\"auth\":true,\"containerSecurityContext\":{\"readOnlyRootFilesystem\":true},\"enabled\":false,\"existingSecret\":\"argocd-redis\",\"exporter\":{\"enabled\":false,\"image\":\"ghcr.io/oliver006/redis_exporter\",\"tag\":\"v1.75.0\"},\"haproxy\":{\"additionalAffinities\":{},\"affinity\":\"\",\"containerSecurityContext\":{\"readOnlyRootFilesystem\":true},\"enabled\":true,\"hardAntiAffinity\":true,\"image\":{\"repository\":\"ecr-public.aws.com/docker/library/haproxy\"},\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis-ha-haproxy\"},\"metrics\":{\"enabled\":true},\"tolerations\":[]},\"hardAntiAffinity\":true,\"image\":{\"repository\":\"ecr-public.aws.com/docker/library/redis\",\"tag\":\"7.2.11-alpine\"},\"persistentVolume\":{\"enabled\":false},\"redis\":{\"config\":{\"save\":\"\\\"\\\"\"},\"masterGroupName\":\"argocd\"},\"tolerations\":[],\"topologySpreadConstraints\":{\"enabled\":false,\"maxSkew\":\"\",\"topologyKey\":\"\",\"whenUnsatisfiable\":\"\"}},\"redisSecretInit\":{\"affinity\":{},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":true,\"extraArgs\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"imagePullSecrets\":[],\"jobAnnotations\":{},\"name\":\"redis-secret-init\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"resources\":{},\"runtimeClassName\":\"\",\"securityContext\":{},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"name\":\"\"},\"tolerations\":[]},\"repoServer\":{\"affinity\":{},\"automountServiceAccountToken\":true,\"autoscaling\":{\"behavior\":{},\"enabled\":false,\"maxReplicas\":5,\"metrics\":[],\"minReplicas\":1,\"targetCPUUtilizationPercentage\":50,\"targetMemoryUtilizationPercentage\":50},\"certificateSecret\":{\"annotations\":{},\"ca\":\"\",\"crt\":\"\",\"enabled\":false,\"key\":\"\",\"labels\":{}},\"clusterRoleRules\":{\"enabled\":false,\"rules\":[]},\"containerPorts\":{\"metrics\":8084,\"server\":8081},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"copyutil\":{\"resources\":{}},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"emptyDir\":{\"sizeLimit\":\"\"},\"env\":[],\"envFrom\":[],\"existingVolumes\":{},\"extraArgs\":[],\"extraContainers\":[],\"hostNetwork\":false,\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"imagePullSecrets\":[],\"initContainers\":[],\"lifecycle\":{},\"livenessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"labels\":{},\"portName\":\"http-metrics\",\"servicePort\":8084,\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scheme\":\"\",\"scrapeTimeout\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"repo-server\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"rbac\":[],\"readinessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicas\":1,\"resources\":{},\"runtimeClassName\":\"\",\"service\":{\"annotations\":{},\"labels\":{},\"port\":8081,\"portName\":\"tcp-repo-server\",\"trafficDistribution\":\"\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"labels\":{},\"name\":\"\"},\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[],\"useEphemeralHelmWorkingDir\":true,\"volumeMounts\":[],\"volumes\":[]},\"server\":{\"affinity\":{},\"automountServiceAccountToken\":true,\"autoscaling\":{\"behavior\":{},\"enabled\":false,\"maxReplicas\":5,\"metrics\":[],\"minReplicas\":1,\"targetCPUUtilizationPercentage\":50,\"targetMemoryUtilizationPercentage\":50},\"backendTLSPolicy\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"targetRefs\":[],\"validation\":{}},\"certificate\":{\"additionalHosts\":[],\"annotations\":{},\"domain\":\"\",\"duration\":\"\",\"enabled\":false,\"issuer\":{\"group\":\"\",\"kind\":\"\",\"name\":\"\"},\"privateKey\":{\"algorithm\":\"RSA\",\"encoding\":\"PKCS1\",\"rotationPolicy\":\"Never\",\"size\":2048},\"renewBefore\":\"\",\"secretTemplateAnnotations\":{},\"usages\":[]},\"certificateSecret\":{\"annotations\":{},\"crt\":\"\",\"enabled\":false,\"key\":\"\",\"labels\":{}},\"clusterRoleRules\":{\"enabled\":false,\"rules\":[]},\"containerPorts\":{\"metrics\":8083,\"server\":8080},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"emptyDir\":{\"sizeLimit\":\"\"},\"env\":[],\"envFrom\":[],\"extensions\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":false,\"extensionList\":[],\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"quay.io/argoprojlabs/argocd-extension-installer\",\"tag\":\"v0.0.8\"},\"resources\":{}},\"extraArgs\":[],\"extraContainers\":[],\"grpcroute\":{\"annotations\":{},\"enabled\":false,\"hostnames\":[],\"labels\":{},\"parentRefs\":[],\"rules\":[{\"matches\":[{\"method\":{\"type\":\"Exact\"}}]}]},\"hostNetwork\":false,\"httproute\":{\"annotations\":{},\"enabled\":false,\"hostnames\":[],\"labels\":{},\"parentRefs\":[],\"rules\":[{\"matches\":[{\"path\":{\"type\":\"PathPrefix\",\"value\":\"/\"}}]}]},\"image\":{\"imagePullPolicy\":\"\",\"repository\":\"\",\"tag\":\"\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"aws\":{\"backendProtocolVersion\":\"GRPC\",\"serviceType\":\"NodePort\"},\"controller\":\"generic\",\"enabled\":false,\"extraHosts\":[],\"extraPaths\":[],\"extraRules\":[],\"extraTls\":[],\"gke\":{\"backendConfig\":{},\"frontendConfig\":{},\"managedCertificate\":{\"create\":true,\"extraDomains\":[]}},\"hostname\":\"\",\"ingressClassName\":\"\",\"labels\":{},\"path\":\"/\",\"pathType\":\"Prefix\",\"tls\":false},\"ingressGrpc\":{\"annotations\":{},\"enabled\":false,\"extraHosts\":[],\"extraPaths\":[],\"extraRules\":[],\"extraTls\":[],\"hostname\":\"\",\"ingressClassName\":\"\",\"labels\":{},\"path\":\"/\",\"pathType\":\"Prefix\",\"tls\":false},\"initContainers\":[],\"lifecycle\":{},\"livenessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"labels\":{},\"portName\":\"http-metrics\",\"servicePort\":8083,\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scheme\":\"\",\"scrapeTimeout\":\"\",\"selector\":{},\"tlsConfig\":{}}},\"name\":\"server\",\"networkPolicy\":{\"create\":false},\"nodeSelector\":{},\"pdb\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicas\":1,\"resources\":{},\"route\":{\"annotations\":{},\"enabled\":false,\"hostname\":\"\",\"termination_policy\":\"None\",\"termination_type\":\"passthrough\"},\"runtimeClassName\":\"\",\"service\":{\"annotations\":{},\"externalIPs\":[],\"externalTrafficPolicy\":\"Cluster\",\"labels\":{},\"loadBalancerClass\":\"\",\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nodePortHttp\":30080,\"nodePortHttps\":30443,\"servicePortHttp\":80,\"servicePortHttpName\":\"http\",\"servicePortHttps\":443,\"servicePortHttpsAppProtocol\":\"\",\"servicePortHttpsName\":\"https\",\"sessionAffinity\":\"None\",\"type\":\"NodePort\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"labels\":{},\"name\":\"argocd-server\"},\"terminationGracePeriodSeconds\":30,\"tolerations\":[],\"topologySpreadConstraints\":[],\"volumeMounts\":[],\"volumes\":[]}}",
                "version": "9.0.5"
              }
            ],
            "name": "argo-cd",
            "namespace": "ci-cd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "./charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "## Argo CD configuration\n## Ref: https://github.com/argoproj/argo-cd\n##\n\n# -- Provide a name in place of `argocd`\nnameOverride: argocd\n# -- String to fully override `\"argo-cd.fullname\"`\nfullnameOverride: \"\"\n# -- Override the namespace\n# @default -- `.Release.Namespace`\nnamespaceOverride: \"\"\n# -- Override the Kubernetes version, which is used to evaluate certain manifests\nkubeVersionOverride: \"\"\n# Override APIVersions\n# If you want to template helm charts but cannot access k8s API server\n# you can set api versions here\napiVersionOverrides: {}\n\n# -- Create aggregated roles that extend existing cluster roles to interact with argo-cd resources\n## Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#aggregated-clusterroles\ncreateAggregateRoles: false\n# -- Create cluster roles for cluster-wide installation.\n## Used when you manage applications in the same cluster where Argo CD runs\ncreateClusterRoles: true\n\nopenshift:\n  # -- enables using arbitrary uid for argo repo server\n  enabled: false\n\n## Custom resource configuration\ncrds:\n  # -- Install and upgrade CRDs\n  install: true\n  # -- Keep CRDs on chart uninstall\n  keep: true\n  # -- Annotations to be added to all CRDs\n  annotations: {}\n  # -- Additional labels to be added to all CRDs\n  additionalLabels: {}\n\n## Globally shared configuration\nglobal:\n  # -- Default domain used by all components\n  ## Used for ingresses, certificates, SSO, notifications, etc.\n  domain: argocd.example.com\n\n  # -- Runtime class name for all components\n  runtimeClassName: \"\"\n\n  # -- Common labels for the all resources\n  additionalLabels: {}\n    # app: argo-cd\n\n  # -- Number of old deployment ReplicaSets to retain. The rest will be garbage collected.\n  revisionHistoryLimit: 3\n\n  # Default image used by all components\n  image:\n    # -- If defined, a repository applied to all Argo CD deployments\n    repository: quay.io/argoproj/argocd\n    # -- Overrides the global Argo CD image tag whose default is the chart appVersion\n    tag: \"\"\n    # -- If defined, a imagePullPolicy applied to all Argo CD deployments\n    imagePullPolicy: IfNotPresent\n\n  # -- Secrets with credentials to pull images from a private registry\n  imagePullSecrets: []\n\n  # Default logging options used by all components\n  logging:\n    # -- Set the global logging format. Either: `text` or `json`\n    format: text\n    # -- Set the global logging level. One of: `debug`, `info`, `warn` or `error`\n    level: info\n\n  # -- Annotations for the all deployed Statefulsets\n  statefulsetAnnotations: {}\n\n  # -- Annotations for the all deployed Deployments\n  deploymentAnnotations: {}\n\n  # -- Labels for the all deployed Deployments\n  deploymentLabels: {}\n\n  # -- Annotations for the all deployed pods\n  podAnnotations: {}\n\n  # -- Labels for the all deployed pods\n  podLabels: {}\n\n  # -- Add Prometheus scrape annotations to all metrics services. This can be used as an alternative to the ServiceMonitors.\n  addPrometheusAnnotations: false\n\n  # -- Toggle and define pod-level security context.\n  # @default -- `{}` (See [values.yaml])\n  securityContext: {}\n  #  runAsUser: 999\n  #  runAsGroup: 999\n  #  fsGroup: 999\n\n  # -- Mapping between IP and hostnames that will be injected as entries in the pod's hosts files\n  hostAliases: []\n  # - ip: 10.20.30.40\n  #   hostnames:\n  #   - git.myhostname\n\n  # Configure dual-stack used by all component services\n  dualStack:\n    # -- IP family policy to configure dual-stack see [Configure dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services)\n    ipFamilyPolicy: \"\"\n    # -- IP families that should be supported and the order in which they should be applied to ClusterIP as well. Can be IPv4 and/or IPv6.\n    ipFamilies: []\n\n  # Default network policy rules used by all components\n  networkPolicy:\n    # -- Create NetworkPolicy objects for all components\n    create: false\n    # -- Default deny all ingress traffic\n    defaultDenyIngress: false\n\n  # -- Default priority class for all components\n  priorityClassName: \"\"\n\n  # -- Default node selector for all components\n  nodeSelector:\n    kubernetes.io/os: linux\n\n  # -- Default tolerations for all components\n  tolerations: []\n\n  # Default affinity preset for all components\n  affinity:\n    # -- Default pod anti-affinity rules. Either: `none`, `soft` or `hard`\n    podAntiAffinity: soft\n    # Node affinity rules\n    nodeAffinity:\n      # -- Default node affinity rules. Either: `none`, `soft` or `hard`\n      type: hard\n      # -- Default match expressions for node affinity\n      matchExpressions: []\n        # - key: topology.kubernetes.io/zone\n        #   operator: In\n        #   values:\n        #    - antarctica-east1\n        #    - antarctica-west1\n\n  # -- Default [TopologySpreadConstraints] rules for all components\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector of the component\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy for the all deployed Deployments\n  deploymentStrategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n  # -- Environment variables to pass to all deployed Deployments\n  env: []\n\n  # -- Annotations for the all deployed Certificates\n  certificateAnnotations: {}\n\n## Argo Configs\nconfigs:\n  # General Argo CD configuration. Any values you put under `.configs.cm` are passed to argocd-cm ConfigMap.\n  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml\n  cm:\n    # -- Create the argocd-cm configmap for [declarative setup]\n    create: true\n\n    # -- Annotations to be added to argocd-cm configmap\n    annotations: {}\n\n    # -- The name of tracking label used by Argo CD for resource pruning\n    application.instanceLabelKey: argocd.argoproj.io/instance\n\n    # -- Enable control of the service account used for the sync operation (alpha)\n    ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/app-sync-using-impersonation/\n    application.sync.impersonation.enabled: false\n\n    # -- Enable logs RBAC enforcement\n    ## Ref: https://argo-cd.readthedocs.io/en/latest/operator-manual/upgrading/2.3-2.4/#enable-logs-rbac-enforcement\n    server.rbac.log.enforce.enable: false\n\n    # -- Enable exec feature in Argo UI\n    ## Ref: https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/#exec-resource\n    exec.enabled: false\n\n    # -- Enable local admin user\n    ## Ref: https://argo-cd.readthedocs.io/en/latest/faq/#how-to-disable-admin-user\n    admin.enabled: true\n\n    # -- Timeout to discover if a new manifests version got published to the repository\n    timeout.reconciliation: 180s\n\n    # -- Timeout to refresh application data as well as target manifests cache\n    timeout.hard.reconciliation: 0s\n\n    # -- Enable Status Badge\n    ## Ref: https://argo-cd.readthedocs.io/en/stable/user-guide/status-badge/\n    statusbadge.enabled: false\n\n    # Dex configuration\n    # dex.config: |\n    #   connectors:\n    #     # GitHub example\n    #     - type: github\n    #       id: github\n    #       name: GitHub\n    #       config:\n    #         clientID: aabbccddeeff00112233\n    #         clientSecret: $dex.github.clientSecret # Alternatively $\u003csome_K8S_secret\u003e:dex.github.clientSecret\n    #         orgs:\n    #         - name: your-github-org\n\n    # OIDC configuration as an alternative to dex (optional).\n    # oidc.config: |\n    #   name: AzureAD\n    #   issuer: https://login.microsoftonline.com/TENANT_ID/v2.0\n    #   clientID: aaaabbbbccccddddeee\n    #   clientSecret: $oidc.azuread.clientSecret\n\n    # Some OIDC providers require a separate clientID for different callback URLs.\n    # For example, if configuring Argo CD with self-hosted Dex, you will need a separate client ID\n    # for the 'localhost' (CLI) client to Dex. This field is optional. If omitted, the CLI will\n    # use the same clientID as the Argo CD server\n    #   cliClientID: vvvvwwwwxxxxyyyyzzzz\n\n    #   rootCA: |\n    #     -----BEGIN CERTIFICATE-----\n    #     ... encoded certificate data here ...\n    #     -----END CERTIFICATE-----\n\n    # Optional list of allowed aud claims. If omitted or empty, defaults to the clientID value above (and the\n    # cliClientID, if that is also specified). If you specify a list and want the clientID to be allowed, you must\n    # explicitly include it in the list.\n    # Token verification will pass if any of the token's audiences matches any of the audiences in this list.\n    #   allowedAudiences:\n    #     - aaaabbbbccccddddeee\n    #     - qqqqwwwweeeerrrrttt\n\n    # Optional set of OIDC claims to request on the ID token.\n    #   requestedIDTokenClaims:\n    #     groups:\n    #       essential: true\n\n    # Optional set of OIDC scopes to request. If omitted, defaults to: [\"openid\", \"profile\", \"email\", \"groups\"]\n    #   requestedScopes:\n    #     - openid\n    #     - profile\n    #     - email\n\n    # PKCE authentication flow processes authorization flow from browser only - default false\n    # uses the clientID\n    # make sure the Identity Provider (IdP) is public and doesn't need clientSecret\n    # make sure the Identity Provider (IdP) has this redirect URI registered: https://argocd.example.com/pkce/verify\n    #   enablePKCEAuthentication: true\n\n    # Extension Configuration\n    ## Ref: https://argo-cd.readthedocs.io/en/latest/developer-guide/extensions/proxy-extensions/\n    # extension.config: |\n    #   extensions:\n    #   - name: httpbin\n    #     backend:\n    #       connectionTimeout: 2s\n    #       keepAlive: 15s\n    #       idleConnectionTimeout: 60s\n    #       maxIdleConnections: 30\n    #       services:\n    #       - url: http://httpbin.org\n    #         headers:\n    #         - name: some-header\n    #           value: '$some.argocd.secret.key'\n    #         cluster:\n    #           name: some-cluster\n    #           server: https://some-cluster\n\n    ## Default configuration for ignoreResourceUpdates.\n    ## The ignoreResourceUpdates list contains K8s resource's properties that are known to be frequently updated\n    ## by controllers and operators. These resources, when watched by argo, will cause many unnecessary updates.\n\n    # -- Ignoring status for all resources. An update will still be sent if the status update causes the health to change.\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.all: |\n      jsonPointers:\n        - /status\n    # -- Some Application fields are generated and not related to the application updates itself\n    ## The Application itself is already watched by the controller lister, but this configuration is applied for apps of apps\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.argoproj.io_Application: |\n      jqPathExpressions:\n        - '.metadata.annotations.\"notified.notifications.argoproj.io\"'\n        - '.metadata.annotations.\"argocd.argoproj.io/refresh\"'\n        - '.metadata.annotations.\"argocd.argoproj.io/hydrate\"'\n        - '.operation'\n    # -- Ignore Argo Rollouts generated fields\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.argoproj.io_Rollout: |\n      jqPathExpressions:\n        - '.metadata.annotations.\"notified.notifications.argoproj.io\"'\n    # -- Legacy annotations used on HPA autoscaling/v1\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler: |\n      jqPathExpressions:\n        - '.metadata.annotations.\"autoscaling.alpha.kubernetes.io/behavior\"'\n        - '.metadata.annotations.\"autoscaling.alpha.kubernetes.io/conditions\"'\n        - '.metadata.annotations.\"autoscaling.alpha.kubernetes.io/metrics\"'\n        - '.metadata.annotations.\"autoscaling.alpha.kubernetes.io/current-metrics\"'\n    # -- Ignore the cluster-autoscaler status\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.ConfigMap: |\n      jqPathExpressions:\n        # Ignore the cluster-autoscaler status\n        - '.metadata.annotations.\"cluster-autoscaler.kubernetes.io/last-updated\"'\n        # Ignore the annotation of the legacy Leases election\n        - '.metadata.annotations.\"control-plane.alpha.kubernetes.io/leader\"'\n    # -- Ignore the common scaling annotations\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.apps_ReplicaSet: |\n      jqPathExpressions:\n        - '.metadata.annotations.\"deployment.kubernetes.io/desired-replicas\"'\n        - '.metadata.annotations.\"deployment.kubernetes.io/max-replicas\"'\n        - '.metadata.annotations.\"rollout.argoproj.io/desired-replicas\"'\n    # -- Ignores update if EndpointSlice is not excluded globally\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.discovery.k8s.io_EndpointSlice: |\n      jsonPointers:\n        - /metadata\n        - /endpoints\n        - /ports\n    # -- Ignores update if Endpoints is not excluded globally\n    # @default -- See [values.yaml]\n    resource.customizations.ignoreResourceUpdates.Endpoints: |\n      jsonPointers:\n        - /metadata\n        - /subsets\n\n    ## Default configuration for exclusions.\n    ## The exclusion list are K8s resources that we assume will never be declared in Git,\n    ## and are never child objects of managed resources that need to be presented in the resource tree.\n    ## This list contains high volume and  high churn metadata objects which we exclude for performance\n    ## reasons, reducing connections and load to the K8s API servers of managed clusters.\n\n    # -- Resource Exclusion/Inclusion\n    # @default -- See [values.yaml]\n    resource.exclusions: |\n      ### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter\n      - apiGroups:\n        - ''\n        - discovery.k8s.io\n        kinds:\n        - Endpoints\n        - EndpointSlice\n      ### Internal Kubernetes resources excluded reduce the number of watched events\n      - apiGroups:\n        - coordination.k8s.io\n        kinds:\n        - Lease\n      ### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events\n      - apiGroups:\n        - authentication.k8s.io\n        - authorization.k8s.io\n        kinds:\n        - SelfSubjectReview\n        - TokenReview\n        - LocalSubjectAccessReview\n        - SelfSubjectAccessReview\n        - SelfSubjectRulesReview\n        - SubjectAccessReview\n      ### Intermediate Certificate Request excluded reduce the number of watched events\n      - apiGroups:\n        - certificates.k8s.io\n        kinds:\n        - CertificateSigningRequest\n      - apiGroups:\n        - cert-manager.io\n        kinds:\n        - CertificateRequest\n      ### Cilium internal resources excluded reduce the number of watched events and UI Clutter\n      - apiGroups:\n        - cilium.io\n        kinds:\n        - CiliumIdentity\n        - CiliumEndpoint\n        - CiliumEndpointSlice\n      ### Kyverno intermediate and reporting resources excluded reduce the number of watched events and improve performance\n      - apiGroups:\n        - kyverno.io\n        - reports.kyverno.io\n        - wgpolicyk8s.io\n        kinds:\n        - PolicyReport\n        - ClusterPolicyReport\n        - EphemeralReport\n        - ClusterEphemeralReport\n        - AdmissionReport\n        - ClusterAdmissionReport\n        - BackgroundScanReport\n        - ClusterBackgroundScanReport\n        - UpdateRequest\n\n\n  # Argo CD configuration parameters\n  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cmd-params-cm.yaml\n  params:\n    # -- Create the argocd-cmd-params-cm configmap\n    # If false, it is expected the configmap will be created by something else.\n    create: true\n\n    # -- Annotations to be added to the argocd-cmd-params-cm ConfigMap\n    annotations: {}\n\n    # You can customize parameters by adding parameters here.\n    # (e.g.)\n    # otlp.address: ''\n\n  # Argo CD RBAC policy configuration\n  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md\n  rbac:\n    # -- Create the argocd-rbac-cm configmap with ([Argo CD RBAC policy]) definitions.\n    # If false, it is expected the configmap will be created by something else.\n    # Argo CD will not work if there is no configmap created with the name above.\n    create: true\n\n    # -- Annotations to be added to argocd-rbac-cm configmap\n    annotations: {}\n\n    # -- The name of the default role which Argo CD will falls back to, when authorizing API requests (optional).\n    # If omitted or empty, users may be still be able to login, but will see no apps, projects, etc...\n    policy.default: ''\n\n    # -- File containing user-defined policies and role definitions.\n    # @default -- `''` (See [values.yaml])\n    policy.csv: ''\n    # Policy rules are in the form:\n    #  p, subject, resource, action, object, effect\n    # Role definitions and bindings are in the form:\n    #  g, subject, inherited-subject\n    # policy.csv: |\n    #   p, role:org-admin, applications, *, */*, allow\n    #   p, role:org-admin, clusters, get, *, allow\n    #   p, role:org-admin, repositories, *, *, allow\n    #   p, role:org-admin, logs, get, *, allow\n    #   p, role:org-admin, exec, create, */*, allow\n    #   g, your-github-org:your-team, role:org-admin\n\n    # -- OIDC scopes to examine during rbac enforcement (in addition to `sub` scope).\n    # The scope value can be a string, or a list of strings.\n    scopes: \"[groups]\"\n\n    # -- Matcher function for Casbin, `glob` for glob matcher and `regex` for regex matcher.\n    policy.matchMode: \"glob\"\n\n  # GnuPG public keys for commit verification\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/user-guide/gpg-verification/\n  gpg:\n    # -- Annotations to be added to argocd-gpg-keys-cm configmap\n    annotations: {}\n\n    # -- [GnuPG] public keys to add to the keyring\n    # @default -- `{}` (See [values.yaml])\n    ## Note: Public keys should be exported with `gpg --export --armor \u003cKEY\u003e`\n    keys: {}\n      # 4AEE18F83AFDEB23: |\n      #   -----BEGIN PGP PUBLIC KEY BLOCK-----\n      #   ...\n      #   -----END PGP PUBLIC KEY BLOCK-----\n\n  # SSH known hosts for Git repositories\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#ssh-known-host-public-keys\n  ssh:\n    # -- Specifies if the argocd-ssh-known-hosts-cm configmap should be created by Helm.\n    create: true\n\n    # -- Annotations to be added to argocd-ssh-known-hosts-cm configmap\n    annotations: {}\n\n    # -- Known hosts to be added to the known host list by default.\n    # @default -- See [values.yaml]\n    knownHosts: |\n      [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n      [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n      [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\n      bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=\n      bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO\n      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=\n      github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n      github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n      github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\n      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\n      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\n      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\n      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n\n    # -- Additional known hosts for private repositories\n    extraHosts: ''\n\n  # Repository TLS certificates\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#repositories-using-self-signed-tls-certificates-or-are-signed-by-custom-ca\n  tls:\n    # -- Annotations to be added to argocd-tls-certs-cm configmap\n    annotations: {}\n\n    # -- TLS certificates for Git repositories\n    # @default -- `{}` (See [values.yaml])\n    certificates: {}\n      # server.example.com: |\n      #   -----BEGIN CERTIFICATE-----\n      #   ...\n      #   -----END CERTIFICATE-----\n\n    # -- Specifies if the argocd-tls-certs-cm configmap should be created by Helm.\n    create: true\n\n  # ConfigMap for Config Management Plugins\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/config-management-plugins/\n  cmp:\n    # -- Create the argocd-cmp-cm configmap\n    create: false\n\n    # -- Annotations to be added to argocd-cmp-cm configmap\n    annotations: {}\n\n    # -- Plugin yaml files to be added to argocd-cmp-cm\n    plugins: {}\n      # --- First plugin\n      # my-plugin:\n      #   init:\n      #     command: [sh]\n      #     args: [-c, 'echo \"Initializing...\"']\n      #   generate:\n      #     command: [sh, -c]\n      #     args:\n      #       - |\n      #         echo \"{\\\"kind\\\": \\\"ConfigMap\\\", \\\"apiVersion\\\": \\\"v1\\\", \\\"metadata\\\": { \\\"name\\\": \\\"$ARGOCD_APP_NAME\\\", \\\"namespace\\\": \\\"$ARGOCD_APP_NAMESPACE\\\", \\\"annotations\\\": {\\\"Foo\\\": \\\"$ARGOCD_ENV_FOO\\\", \\\"KubeVersion\\\": \\\"$KUBE_VERSION\\\", \\\"KubeApiVersion\\\": \\\"$KUBE_API_VERSIONS\\\",\\\"Bar\\\": \\\"baz\\\"}}}\"\n      #   discover:\n      #     fileName: \"./subdir/s*.yaml\"\n      #     find:\n      #       glob: \"**/Chart.yaml\"\n      #       command: [sh, -c, find . -name env.yaml]\n\n      # --- Second plugin\n      # my-plugin2:\n      #   init:\n      #     command: [sh]\n      #     args: [-c, 'echo \"Initializing...\"']\n      #   generate:\n      #     command: [sh, -c]\n      #     args:\n      #       - |\n      #         echo \"{\\\"kind\\\": \\\"ConfigMap\\\", \\\"apiVersion\\\": \\\"v1\\\", \\\"metadata\\\": { \\\"name\\\": \\\"$ARGOCD_APP_NAME\\\", \\\"namespace\\\": \\\"$ARGOCD_APP_NAMESPACE\\\", \\\"annotations\\\": {\\\"Foo\\\": \\\"$ARGOCD_ENV_FOO\\\", \\\"KubeVersion\\\": \\\"$KUBE_VERSION\\\", \\\"KubeApiVersion\\\": \\\"$KUBE_API_VERSIONS\\\",\\\"Bar\\\": \\\"baz\\\"}}}\"\n      #   discover:\n      #     fileName: \"./subdir/s*.yaml\"\n      #     find:\n      #       glob: \"**/Chart.yaml\"\n      #       command: [sh, -c, find . -name env.yaml]\n\n  # -- Provide one or multiple [external cluster credentials]\n  # @default -- `{}` (See [values.yaml])\n  ## Ref:\n  ## - https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters\n  ## - https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#external-cluster-credentials\n  ## - https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\n  clusterCredentials: {}\n    # mycluster:\n    #   server: https://mycluster.example.com\n    #   labels: {}\n    #   annotations: {}\n    #   config:\n    #     bearerToken: \"\u003cauthentication token\u003e\"\n    #     tlsClientConfig:\n    #       insecure: false\n    #       caData: \"\u003cbase64 encoded certificate\u003e\"\n    # mycluster2:\n    #   server: https://mycluster2.example.com\n    #   labels: {}\n    #   annotations: {}\n    #   namespaces: namespace1,namespace2\n    #   clusterResources: true\n    #   config:\n    #     bearerToken: \"\u003cauthentication token\u003e\"\n    #     tlsClientConfig:\n    #       insecure: false\n    #       caData: \"\u003cbase64 encoded certificate\u003e\"\n    # mycluster3-project-scoped:\n    #   server: https://mycluster3.example.com\n    #   labels: {}\n    #   annotations: {}\n    #   project: my-project1\n    #   config:\n    #     bearerToken: \"\u003cauthentication token\u003e\"\n    #     tlsClientConfig:\n    #       insecure: false\n    #       caData: \"\u003cbase64 encoded certificate\u003e\"\n    # mycluster4-sharded:\n    #   shard: 1\n    #   server: https://mycluster4.example.com\n    #   labels: {}\n    #   annotations: {}\n    #   config:\n    #     bearerToken: \"\u003cauthentication token\u003e\"\n    #     tlsClientConfig:\n    #       insecure: false\n    #       caData: \"\u003cbase64 encoded certificate\u003e\"\n\n  # -- Repository credentials to be used as Templates for other repos\n  ## Creates a secret for each key/value specified below to create repository credentials\n  credentialTemplates: {}\n    # github-enterprise-creds-1:\n    #   url: https://github.com/argoproj\n    #   githubAppID: 1\n    #   githubAppInstallationID: 2\n    #   githubAppEnterpriseBaseUrl: https://ghe.example.com/api/v3\n    #   githubAppPrivateKey: |\n    #     -----BEGIN OPENSSH PRIVATE KEY-----\n    #     ...\n    #     -----END OPENSSH PRIVATE KEY-----\n    # https-creds:\n    #   url: https://github.com/argoproj\n    #   password: my-password\n    #   username: my-username\n    # ssh-creds:\n    #  url: git@github.com:argoproj-labs\n    #  sshPrivateKey: |\n    #    -----BEGIN OPENSSH PRIVATE KEY-----\n    #    ...\n    #    -----END OPENSSH PRIVATE KEY-----\n\n  # -- Annotations to be added to `configs.credentialTemplates` Secret\n  credentialTemplatesAnnotations: {}\n\n  # -- Repositories list to be used by applications\n  ## Creates a secret for each key/value specified below to create repositories\n  ## Note: the last example in the list would use a repository credential template, configured under \"configs.credentialTemplates\".\n  repositories: {}\n    # istio-helm-repo:\n    #   url: https://storage.googleapis.com/istio-prerelease/daily-build/master-latest-daily/charts\n    #   name: istio.io\n    #   type: helm\n    # private-helm-repo:\n    #   url: https://my-private-chart-repo.internal\n    #   name: private-repo\n    #   type: helm\n    #   password: my-password\n    #   username: my-username\n    # private-repo:\n    #   url: https://github.com/argoproj/private-repo\n\n  # -- Annotations to be added to `configs.repositories` Secret\n  repositoriesAnnotations: {}\n\n  # Argo CD sensitive data\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets\n  secret:\n    # -- Create the argocd-secret\n    createSecret: true\n    # -- Labels to be added to argocd-secret\n    labels: {}\n    # -- Annotations to be added to argocd-secret\n    annotations: {}\n\n    # -- Shared secret for authenticating GitHub webhook events\n    githubSecret: \"\"\n    # -- Shared secret for authenticating GitLab webhook events\n    gitlabSecret: \"\"\n    # -- Shared secret for authenticating BitbucketServer webhook events\n    bitbucketServerSecret: \"\"\n    # -- UUID for authenticating Bitbucket webhook events\n    bitbucketUUID: \"\"\n    # -- Shared secret for authenticating Gogs webhook events\n    gogsSecret: \"\"\n    ## Azure DevOps\n    azureDevops:\n      # -- Shared secret username for authenticating Azure DevOps webhook events\n      username: \"\"\n      # -- Shared secret password for authenticating Azure DevOps webhook events\n      password: \"\"\n\n    # -- add additional secrets to be added to argocd-secret\n    ## Custom secrets. Useful for injecting SSO secrets into environment variables.\n    ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets\n    ## Note that all values must be non-empty.\n    extra:\n      {}\n      # LDAP_PASSWORD: \"mypassword\"\n\n    # -- Bcrypt hashed admin password\n    ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with\n    ## `htpasswd -nbBC 10 \"\" $ARGO_PWD | tr -d ':\\n' | sed 's/$2y/$2a/'`\n    argocdServerAdminPassword: \"\"\n    # -- Admin password modification time. Eg. `\"2006-01-02T15:04:05Z\"`\n    # @default -- `\"\"` (defaults to current time)\n    argocdServerAdminPasswordMtime: \"\"\n\n  # -- Define custom [CSS styles] for your argo instance.\n  # This setting will automatically mount the provided CSS and reference it in the argo configuration.\n  # @default -- `\"\"` (See [values.yaml])\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/custom-styles/\n  styles: \"\"\n  # styles: |\n  #  .sidebar {\n  #    background: linear-gradient(to bottom, #999, #777, #333, #222, #111);\n  #  }\n\n# -- Array of extra K8s manifests to deploy\n## Note: Supports use of custom Helm templates\nextraObjects: []\n  # - apiVersion: secrets-store.csi.x-k8s.io/v1\n  #   kind: SecretProviderClass\n  #   metadata:\n  #     name: argocd-secrets-store\n  #   spec:\n  #     provider: aws\n  #     parameters:\n  #       objects: |\n  #         - objectName: \"argocd\"\n  #           objectType: \"secretsmanager\"\n  #           jmesPath:\n  #               - path: \"client_id\"\n  #                 objectAlias: \"client_id\"\n  #               - path: \"client_secret\"\n  #                 objectAlias: \"client_secret\"\n  #     secretObjects:\n  #     - data:\n  #       - key: client_id\n  #         objectName: client_id\n  #       - key: client_secret\n  #         objectName: client_secret\n  #       secretName: argocd-secrets-store\n  #       type: Opaque\n  #       labels:\n  #         app.kubernetes.io/part-of: argocd\n\n## Application controller\ncontroller:\n  # -- Application controller name string\n  name: application-controller\n\n  # -- The number of application controller pods to run.\n  # Additional replicas will cause sharding of managed clusters across number of replicas.\n  ## With dynamic cluster distribution turned on, sharding of the clusters will gracefully\n  ## rebalance if the number of replica's changes or one becomes unhealthy. (alpha)\n  replicas: 1\n\n  # -- Enable dynamic cluster distribution (alpha)\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/dynamic-cluster-distribution\n  ## This is done using a deployment instead of a statefulSet\n  ## When replicas are added or removed, the sharding algorithm is re-run to ensure that the\n  ## clusters are distributed according to the algorithm. If the algorithm is well-balanced,\n  ## like round-robin, then the shards will be well-balanced.\n  dynamicClusterDistribution: false\n\n  # -- Runtime class name for the application controller\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  # -- Application controller heartbeat time\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/dynamic-cluster-distribution/#working-of-dynamic-distribution\n  heartbeatTime: 10\n\n  # -- Maximum number of controller revisions that will be maintained in StatefulSet history\n  revisionHistoryLimit: 5\n\n  ## Application controller Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the application controller\n    enabled: false\n    # -- Labels to be added to application controller pdb\n    labels: {}\n    # -- Annotations to be added to application controller pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `controller.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## Application controller Vertical Pod Autoscaler\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/#scaling-workloads-vertically/\n  vpa:\n    # -- Deploy a [VerticalPodAutoscaler](https://kubernetes.io/docs/concepts/workloads/autoscaling/#scaling-workloads-vertically/) for the application controller\n    enabled: false\n    # -- Labels to be added to application controller vpa\n    labels: {}\n    # -- Annotations to be added to application controller vpa\n    annotations: {}\n    # -- One of the VPA operation modes\n    ## Ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/#scaling-workloads-vertically\n    ## Note: Recreate update mode requires more than one replica unless the min-replicas VPA controller flag is overridden\n    updateMode: Initial\n    # -- Controls how VPA computes the recommended resources for application controller container\n    ## Ref: https://github.com/kubernetes/autoscaler/blob/master/vertical-pod-autoscaler/examples/hamster.yaml\n    containerPolicy: {}\n      # controlledResources: [\"cpu\", \"memory\"]\n      # minAllowed:\n      #   cpu: 250m\n      #   memory: 256Mi\n      # maxAllowed:\n      #   cpu: 1\n      #   memory: 1Gi\n\n\n  ## Application controller image\n  image:\n    # -- Repository to use for the application controller\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\"\n    # -- Tag to use for the application controller\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\"\n    # -- Image pull policy for the application controller\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # -- Additional command line arguments to pass to application controller\n  extraArgs: []\n\n  # -- Environment variables to pass to application controller\n  env: []\n\n  # -- envFrom to pass to application controller\n  # @default -- `[]` (See [values.yaml])\n  envFrom: []\n  # - configMapRef:\n  #     name: config-map-name\n  # - secretRef:\n  #     name: secret-name\n\n  # -- Additional containers to be added to the application controller pod\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n\n  # -- Init containers to add to the application controller pod\n  ## If your target Kubernetes cluster(s) require a custom credential (exec) plugin\n  ## you could use this (and the same in the server pod) to provide such executable\n  ## Ref: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins\n  ## Note: Supports use of custom Helm templates\n  initContainers: []\n  #  - name: download-tools\n  #    image: alpine:3\n  #    command: [sh, -c]\n  #    args:\n  #      - wget -qO /custom-tools/kubelogin.zip https://github.com/Azure/kubelogin/releases/download/v0.2.7/kubelogin-linux-amd64.zip \u0026\u0026\n  #        mkdir /custom-tools/tmp \u0026\u0026 unzip -d /custom-tools/tmp /custom-tools/kubelogin.zip  \u0026\u0026\n  #        mv /custom-tools/tmp/bin/linux_amd64/kubelogin /custom-tools/ \u0026\u0026 rm -rf custom-tools/tmp \u0026\u0026 rm /custom-tools/kubelogin.zip\n  #    volumeMounts:\n  #      - mountPath: /custom-tools\n  #        name: custom-tools\n\n  # -- Additional volumeMounts to the application controller main container\n  volumeMounts: []\n  #  - mountPath: /usr/local/bin/kubelogin\n  #    name: custom-tools\n  #    subPath: kubelogin\n\n  # -- Additional volumes to the application controller pod\n  volumes: []\n  #  - name: custom-tools\n  #    emptyDir: {}\n\n  ## Application controller emptyDir volumes\n  emptyDir:\n    # -- EmptyDir size limit for application controller\n    # @default -- `\"\"` (defaults not set if not specified i.e. no size limit)\n    sizeLimit: \"\"\n    # sizeLimit: \"1Gi\"\n\n  # -- Annotations for the application controller StatefulSet\n  statefulsetAnnotations: {}\n\n  # -- Annotations for the application controller Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the application controller Deployment\n  deploymentLabels: {}\n\n  # -- Annotations to be added to application controller pods\n  podAnnotations: {}\n\n  # -- Labels to be added to application controller pods\n  podLabels: {}\n\n  # -- Resource limits and requests for the application controller pods\n  resources: {}\n  #  limits:\n  #    cpu: 500m\n  #    memory: 512Mi\n  #  requests:\n  #    cpu: 250m\n  #    memory: 256Mi\n\n  # Application controller container ports\n  containerPorts:\n    # -- Metrics container port\n    metrics: 8082\n\n  # -- Host Network for application controller pods\n  hostNetwork: false\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for application controller pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- Application controller container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n      - ALL\n\n  # Readiness probe for application controller\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- Priority class for the application controller pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules to the deployment\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the application controller\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  serviceAccount:\n    # -- Create a service account for the application controller\n    create: true\n    # -- Service account name\n    name: argocd-application-controller\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Labels applied to created service account\n    labels: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  ## Application controller metrics configuration\n  metrics:\n    # -- Deploy metrics service\n    enabled: false\n    # -- Prometheus ServiceMonitor scrapeTimeout. If empty, Prometheus uses the global scrape timeout unless it is less than the target's scrape interval value in which the latter is used.\n    scrapeTimeout: \"\"\n    applicationLabels:\n      # -- Enables additional labels in argocd_app_labels metric\n      enabled: false\n      # -- Additional labels\n      labels: []\n    service:\n      # -- Metrics service type\n      type: NodePort\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: \"\"\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port\n      servicePort: 8082\n      # -- Metrics service port name\n      portName: http-metrics\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Prometheus ServiceMonitor interval\n      interval: 30s\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- Prometheus ServiceMonitor namespace\n      namespace: \"\" # \"monitoring\"\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n    rules:\n      # -- Deploy a PrometheusRule for the application controller\n      enabled: false\n      # -- PrometheusRule namespace\n      namespace: \"\" # \"monitoring\"\n      # -- PrometheusRule selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- PrometheusRule labels\n      additionalLabels: {}\n      # -- PrometheusRule annotations\n      annotations: {}\n\n      # -- PrometheusRule.Spec for the application controller\n      spec: []\n      # - alert: ArgoAppMissing\n      #   expr: |\n      #     absent(argocd_app_info) == 1\n      #   for: 15m\n      #   labels:\n      #     severity: critical\n      #   annotations:\n      #     summary: \"[Argo CD] No reported applications\"\n      #     description: \u003e\n      #       Argo CD has not reported any applications data for the past 15 minutes which\n      #       means that it must be down or not functioning properly.  This needs to be\n      #       resolved for this cloud to continue to maintain state.\n      # - alert: ArgoAppNotSynced\n      #   expr: |\n      #     argocd_app_info{sync_status!=\"Synced\"} == 1\n      #   for: 12h\n      #   labels:\n      #     severity: warning\n      #   annotations:\n      #     summary: \"[{{`{{$labels.name}}`}}] Application not synchronized\"\n      #     description: \u003e\n      #       The application [{{`{{$labels.name}}`}} has not been synchronized for over\n      #       12 hours which means that the state of this cloud has drifted away from the\n      #       state inside Git.\n\n  ## Enable this and set the rules: to whatever custom rules you want for the Cluster Role resource.\n  ## Defaults to off\n  clusterRoleRules:\n    # -- Enable custom rules for the application controller's ClusterRole resource\n    enabled: false\n    # -- List of custom rules for the application controller's ClusterRole resource\n    rules: []\n\n  ## Enable this and set the rules: to whatever custom rules you want for the Role resource.\n  ## Defaults to off\n  # -- List of custom rules for the application controller's Role resource\n  roleRules: []\n\n  # Default application controller's network policy\n  networkPolicy:\n    # -- Default network policy rules used by application controller\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\n## Dex\ndex:\n  # -- Enable dex\n  enabled: false\n  # -- Dex name\n  name: dex-server\n\n  # -- Additional command line arguments to pass to the Dex server\n  extraArgs: []\n\n  # -- Runtime class name for Dex\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  metrics:\n    # -- Deploy metrics service\n    enabled: false\n    service:\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port name\n      portName: http-metrics\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Prometheus ServiceMonitor interval\n      interval: 30s\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- Prometheus ServiceMonitor namespace\n      namespace: \"\" # \"monitoring\"\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n\n  ## Dex Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the Dex server\n    enabled: false\n    # -- Labels to be added to Dex server pdb\n    labels: {}\n    # -- Annotations to be added to Dex server pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailble after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `dex.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## Dex image\n  image:\n    # -- Dex image repository\n    repository: ghcr.io/dexidp/dex\n    # -- Dex image tag\n    tag: v2.44.0\n    # -- Dex imagePullPolicy\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # Argo CD init image that creates Dex config\n  initImage:\n    # -- Argo CD init image repository\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\"\n    # -- Argo CD init image tag\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\"\n    # -- Argo CD init image imagePullPolicy\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n    # -- Argo CD init image resources\n    # @default -- `{}` (defaults to dex.resources)\n    resources: {}\n    #  requests:\n    #    cpu: 5m\n    #    memory: 96Mi\n    #  limits:\n    #    cpu: 10m\n    #    memory: 144Mi\n\n  # -- Environment variables to pass to the Dex server\n  env: []\n\n  # -- envFrom to pass to the Dex server\n  # @default -- `[]` (See [values.yaml])\n  envFrom: []\n  # - configMapRef:\n  #     name: config-map-name\n  # - secretRef:\n  #     name: secret-name\n\n  # -- Additional containers to be added to the dex pod\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n\n  # -- Init containers to add to the dex pod\n  ## Note: Supports use of custom Helm templates\n  initContainers: []\n\n  # -- Additional volumeMounts to the dex main container\n  volumeMounts: []\n\n  # -- Additional volumes to the dex pod\n  volumes: []\n\n  ## Dex server emptyDir volumes\n  emptyDir:\n    # -- EmptyDir size limit for Dex server\n    # @default -- `\"\"` (defaults not set if not specified i.e. no size limit)\n    sizeLimit: \"\"\n    # sizeLimit: \"1Gi\"\n\n  # TLS certificate configuration via Secret\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#configuring-tls-to-argocd-dex-server\n  ## Note: Issuing certificates via cert-manager in not supported right now because it's not possible to restart Dex automatically without extra controllers.\n  certificateSecret:\n    # -- Create argocd-dex-server-tls secret\n    enabled: false\n    # -- Labels to be added to argocd-dex-server-tls secret\n    labels: {}\n    # -- Annotations to be added to argocd-dex-server-tls secret\n    annotations: {}\n    # -- Certificate authority. Required for self-signed certificates.\n    ca: ''\n    # -- Certificate private key\n    key: ''\n    # -- Certificate data. Must contain SANs of Dex service (ie: argocd-dex-server, argocd-dex-server.argo-cd.svc)\n    crt: ''\n\n  # -- Annotations to be added to the Dex server Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the Dex server Deployment\n  deploymentLabels: {}\n\n  # -- Annotations to be added to the Dex server pods\n  podAnnotations: {}\n\n  # -- Labels to be added to the Dex server pods\n  podLabels: {}\n\n  # -- Resource limits and requests for dex\n  resources: {}\n  #  limits:\n  #    cpu: 50m\n  #    memory: 64Mi\n  #  requests:\n  #    cpu: 10m\n  #    memory: 32Mi\n\n  # Dex container ports\n  # NOTE: These ports are currently hardcoded and cannot be changed\n  containerPorts:\n    # -- HTTP container port\n    http: 5556\n    # -- gRPC container port\n    grpc: 5557\n    # -- Metrics container port\n    metrics: 5558\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for Dex server pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- Dex container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n      - ALL\n\n  ## Probes for Dex server\n  ## Supported from Dex \u003e= 2.28.0\n  livenessProbe:\n    # -- Enable Kubernetes liveness probe for Dex \u003e= 2.28.0\n    enabled: false\n    # -- Http path to use for the liveness probe\n    httpPath: /healthz/live\n    # -- Http port to use for the liveness probe\n    httpPort: metrics\n    # -- Scheme to use for for the liveness probe (can be HTTP or HTTPS)\n    httpScheme: HTTP\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  readinessProbe:\n    # -- Enable Kubernetes readiness probe for Dex \u003e= 2.28.0\n    enabled: false\n    # -- Http path to use for the readiness probe\n    httpPath: /healthz/ready\n    # -- Http port to use for the readiness probe\n    httpPort: metrics\n    # -- Scheme to use for for the liveness probe (can be HTTP or HTTPS)\n    httpScheme: HTTP\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  serviceAccount:\n    # -- Create dex service account\n    create: true\n    # -- Dex service account name\n    name: argocd-dex-server\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  # -- Service port for HTTP access\n  servicePortHttp: 5556\n  # -- Service port name for HTTP access\n  servicePortHttpName: http\n  # -- Service port for gRPC access\n  servicePortGrpc: 5557\n  # -- Service port name for gRPC access\n  servicePortGrpcName: grpc\n  # -- Service port for metrics access\n  servicePortMetrics: 5558\n\n  # -- Priority class for the dex pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules to the deployment\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to dex\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy to be added to the Dex server Deployment\n  deploymentStrategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n  # Default Dex server's network policy\n  networkPolicy:\n    # -- Default network policy rules used by Dex server\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\n  # DEPRECATED - Use configs.params to override\n  # -- Dex log format. Either `text` or `json`\n  # @default -- `\"\"` (defaults to global.logging.format)\n  # logFormat: \"\"\n  # -- Dex log level. One of: `debug`, `info`, `warn`, `error`\n  # @default -- `\"\"` (defaults to global.logging.level)\n  # logLevel: \"\"\n\n## Redis\nredis:\n  # -- Enable redis\n  enabled: true\n  # -- Redis name\n  name: redis\n\n  # -- Runtime class name for redis\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  ## Redis Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the Redis\n    enabled: false\n    # -- Labels to be added to Redis pdb\n    labels: {}\n    # -- Annotations to be added to Redis pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailble after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `redis.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## Redis image\n  image:\n    # -- Redis repository\n    repository: ecr-public.aws.com/docker/library/redis\n    # -- Redis tag\n    ## Do not upgrade to \u003e= 7.4.0, otherwise you are no longer using an open source version of Redis\n    tag: 7.2.11-alpine\n    # -- Redis image pull policy\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  ## Prometheus redis-exporter sidecar\n  exporter:\n    # -- Enable Prometheus redis-exporter sidecar\n    enabled: false\n    # -- Environment variables to pass to the Redis exporter\n    env: []\n    ## Prometheus redis-exporter image\n    image:\n      # -- Repository to use for the redis-exporter\n      repository: ghcr.io/oliver006/redis_exporter\n      # -- Tag to use for the redis-exporter\n      tag: v1.79.0\n      # -- Image pull policy for the redis-exporter\n      # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n      imagePullPolicy: \"\"\n\n    # -- Redis exporter security context\n    # @default -- See [values.yaml]\n    containerSecurityContext:\n      runAsNonRoot: true\n      readOnlyRootFilesystem: true\n      allowPrivilegeEscalation: false\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n        - ALL\n\n    ## Probes for Redis exporter (optional)\n    ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n    readinessProbe:\n      # -- Enable Kubernetes liveness probe for Redis exporter (optional)\n      enabled: false\n      # -- Number of seconds after the container has started before [probe] is initiated\n      initialDelaySeconds: 30\n      # -- How often (in seconds) to perform the [probe]\n      periodSeconds: 15\n      # -- Number of seconds after which the [probe] times out\n      timeoutSeconds: 15\n      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n      successThreshold: 1\n      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n      failureThreshold: 5\n    livenessProbe:\n      # -- Enable Kubernetes liveness probe for Redis exporter\n      enabled: false\n      # -- Number of seconds after the container has started before [probe] is initiated\n      initialDelaySeconds: 30\n      # -- How often (in seconds) to perform the [probe]\n      periodSeconds: 15\n      # -- Number of seconds after which the [probe] times out\n      timeoutSeconds: 15\n      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n      successThreshold: 1\n      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n      failureThreshold: 5\n\n    # -- Resource limits and requests for redis-exporter sidecar\n    resources: {}\n      # limits:\n      #   cpu: 50m\n      #   memory: 64Mi\n      # requests:\n      #   cpu: 10m\n      #   memory: 32Mi\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # -- Additional command line arguments to pass to redis-server\n  extraArgs: []\n  # - --bind\n  # - \"0.0.0.0\"\n\n  # -- Environment variables to pass to the Redis server\n  env: []\n\n  # -- envFrom to pass to the Redis server\n  # @default -- `[]` (See [values.yaml])\n  envFrom: []\n  # - configMapRef:\n  #     name: config-map-name\n  # - secretRef:\n  #     name: secret-name\n\n  ## Probes for Redis server (optional)\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Enable Kubernetes liveness probe for Redis server\n    enabled: false\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 30\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 15\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 15\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 5\n  livenessProbe:\n    # -- Enable Kubernetes liveness probe for Redis server\n    enabled: false\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 30\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 15\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 15\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 5\n\n  # -- Additional containers to be added to the redis pod\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n\n  # -- Init containers to add to the redis pod\n  ## Note: Supports use of custom Helm templates\n  initContainers: []\n\n  # -- Additional volumeMounts to the redis container\n  volumeMounts: []\n\n  # -- Additional volumes to the redis pod\n  volumes: []\n\n  # -- Annotations to be added to the Redis server Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the Redis server Deployment\n  deploymentLabels: {}\n\n  # -- Annotations to be added to the Redis server pods\n  podAnnotations: {}\n\n  # -- Labels to be added to the Redis server pods\n  podLabels: {}\n\n  # -- Resource limits and requests for redis\n  resources: {}\n  #  limits:\n  #    cpu: 200m\n  #    memory: 128Mi\n  #  requests:\n  #    cpu: 100m\n  #    memory: 64Mi\n\n  # -- Redis pod-level security context\n  # @default -- See [values.yaml]\n  securityContext:\n    runAsNonRoot: true\n    runAsUser: 999\n    seccompProfile:\n      type: RuntimeDefault\n\n  # Redis container ports\n  containerPorts:\n    # -- Redis container port\n    redis: 6379\n    # -- Metrics container port\n    metrics: 9121\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for Redis server pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- Redis container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n      - ALL\n\n  # -- Redis service port\n  servicePort: 6379\n\n  # -- Priority class for redis pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules to the deployment\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to redis\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  serviceAccount:\n    # -- Create a service account for the redis pod\n    create: false\n    # -- Service account name for redis pod\n    name: \"\"\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: false\n\n  service:\n    # -- Redis service annotations\n    annotations: {}\n    # -- Additional redis service labels\n    labels: {}\n\n  metrics:\n    # -- Deploy metrics service\n    enabled: false\n\n    # Redis metrics service configuration\n    service:\n      # -- Metrics service type\n      type: ClusterIP\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: None\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port\n      servicePort: 9121\n      # -- Metrics service port name\n      portName: http-metrics\n\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Interval at which metrics should be scraped\n      interval: 30s\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- Prometheus ServiceMonitor namespace\n      namespace: \"\" # \"monitoring\"\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n\n  # Default redis's network policy\n  networkPolicy:\n    # -- Default network policy rules used by redis\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\n## Redis-HA subchart replaces custom redis deployment when `redis-ha.enabled=true`\n# Ref: https://github.com/DandyDeveloper/charts/blob/master/charts/redis-ha/values.yaml\nredis-ha:\n  # -- Enables the Redis HA subchart and disables the custom Redis single node deployment\n  enabled: false\n  ## Redis image\n  image:\n    # -- Redis repository\n    repository: ecr-public.aws.com/docker/library/redis\n    # -- Redis tag\n    ## Do not upgrade to \u003e= 7.4.0, otherwise you are no longer using an open source version of Redis\n    tag: 7.2.11-alpine\n  ## Prometheus redis-exporter sidecar\n  exporter:\n    # -- Enable Prometheus redis-exporter sidecar\n    enabled: false\n    # -- Repository to use for the redis-exporter\n    image: ghcr.io/oliver006/redis_exporter\n    # -- Tag to use for the redis-exporter\n    tag: v1.75.0\n  persistentVolume:\n    # -- Configures persistence on Redis nodes\n    enabled: false\n  ## Redis specific configuration options\n  redis:\n    # -- Redis convention for naming the cluster group: must match `^[\\\\w-\\\\.]+$` and can be templated\n    masterGroupName: argocd\n    # -- Any valid redis config options in this section will be applied to each server (see `redis-ha` chart)\n    # @default -- See [values.yaml]\n    config:\n      # -- Will save the DB if both the given number of seconds and the given number of write operations against the DB occurred. `\"\"`  is disabled\n      # @default -- `'\"\"'`\n      save: '\"\"'\n  ## Enables a HA Proxy for better LoadBalancing / Sentinel Master support. Automatically proxies to Redis master.\n  haproxy:\n    # -- Enabled HAProxy LoadBalancing/Proxy\n    enabled: true\n    # --  Custom labels for the haproxy pod. This is relevant for Argo CD CLI.\n    labels:\n      app.kubernetes.io/name: argocd-redis-ha-haproxy\n    image:\n      # -- HAProxy Image Repository\n      repository: ecr-public.aws.com/docker/library/haproxy\n    metrics:\n      # -- HAProxy enable prometheus metric scraping\n      enabled: true\n    # -- Whether the haproxy pods should be forced to run on separate nodes.\n    hardAntiAffinity: true\n    # -- Additional affinities to add to the haproxy pods.\n    additionalAffinities: {}\n    # -- Assign custom [affinity] rules to the haproxy pods.\n    affinity: |\n\n    # -- [Tolerations] for use with node taints for haproxy pods.\n    tolerations: []\n    # -- HAProxy container-level security context\n    # @default -- See [values.yaml]\n    containerSecurityContext:\n      readOnlyRootFilesystem: true\n\n  # -- Configures redis-ha with AUTH\n  auth: true\n  # -- Existing Secret to use for redis-ha authentication.\n  # By default the redis-secret-init Job is generating this Secret.\n  existingSecret: argocd-redis\n\n  # -- Whether the Redis server pods should be forced to run on separate nodes.\n  hardAntiAffinity: true\n\n  # -- Additional affinities to add to the Redis server pods.\n  additionalAffinities: {}\n\n  # -- Assign custom [affinity] rules to the Redis pods.\n  affinity: |\n\n  # -- [Tolerations] for use with node taints for Redis pods.\n  tolerations: []\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the Redis pods.\n  ## https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  topologySpreadConstraints:\n    # -- Enable Redis HA topology spread constraints\n    enabled: false\n    # -- Max skew of pods tolerated\n    # @default -- `\"\"` (defaults to `1`)\n    maxSkew: \"\"\n    # -- Topology key for spread\n    # @default -- `\"\"` (defaults to `topology.kubernetes.io/zone`)\n    topologyKey: \"\"\n    # -- Enforcement policy, hard or soft\n    # @default -- `\"\"` (defaults to `ScheduleAnyway`)\n    whenUnsatisfiable: \"\"\n  # -- Redis HA statefulset container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    readOnlyRootFilesystem: true\n\n# External Redis parameters\nexternalRedis:\n  # -- External Redis server host\n  host: \"\"\n  # -- External Redis username\n  username: \"\"\n  # -- External Redis password\n  password: \"\"\n  # -- External Redis server port\n  port: 6379\n  # -- The name of an existing secret with Redis (must contain key `redis-password`. And should contain `redis-username` if username is not `default`) and Sentinel credentials.\n  # When it's set, the `externalRedis.username` and `externalRedis.password` parameters are ignored\n  existingSecret: \"\"\n  # -- External Redis Secret annotations\n  secretAnnotations: {}\n\nredisSecretInit:\n  # -- Enable Redis secret initialization. If disabled, secret must be provisioned by alternative methods\n  enabled: true\n  # -- Redis secret-init name\n  name: redis-secret-init\n\n  image:\n    # -- Repository to use for the Redis secret-init Job\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\" # defaults to global.image.repository\n    # -- Tag to use for the Redis secret-init Job\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\" # defaults to global.image.tag\n    # -- Image pull policy for the Redis secret-init Job\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\" # IfNotPresent\n\n  # -- Additional command line arguments for the Redis secret-init Job\n  extraArgs: []\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # -- Runtime class name for the Redis secret-init Job\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  # -- Annotations to be added to the Redis secret-init Job\n  jobAnnotations: {}\n\n  # -- Annotations to be added to the Redis secret-init Job\n  podAnnotations: {}\n\n  # -- Labels to be added to the Redis secret-init Job\n  podLabels: {}\n\n  # -- Resource limits and requests for Redis secret-init Job\n  resources: {}\n  #  limits:\n  #    cpu: 200m\n  #    memory: 128Mi\n  #  requests:\n  #    cpu: 100m\n  #    memory: 64Mi\n\n  # -- Application controller container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n        - ALL\n    readOnlyRootFilesystem: true\n    runAsNonRoot: true\n    seccompProfile:\n      type: RuntimeDefault\n\n  # -- Redis secret-init Job pod-level security context\n  securityContext: {}\n\n  serviceAccount:\n    # -- Create a service account for the redis pod\n    create: true\n    # -- Service account name for redis pod\n    name: \"\"\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  # -- Priority class for Redis secret-init Job\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # -- Assign custom [affinity] rules to the Redis secret-init Job\n  affinity: {}\n\n  # -- Node selector to be added to the Redis secret-init Job\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- Tolerations to be added to the Redis secret-init Job\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n## Server\nserver:\n  # -- Argo CD server name\n  name: server\n\n  # -- The number of server pods to run\n  replicas: 1\n\n  # -- Runtime class name for the Argo CD server\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  ## Argo CD server Horizontal Pod Autoscaler\n  autoscaling:\n    # -- Enable Horizontal Pod Autoscaler ([HPA]) for the Argo CD server\n    enabled: false\n    # -- Minimum number of replicas for the Argo CD server [HPA]\n    minReplicas: 1\n    # -- Maximum number of replicas for the Argo CD server [HPA]\n    maxReplicas: 5\n    # -- Average CPU utilization percentage for the Argo CD server [HPA]\n    targetCPUUtilizationPercentage: 50\n    # -- Average memory utilization percentage for the Argo CD server [HPA]\n    targetMemoryUtilizationPercentage: 50\n    # -- Configures the scaling behavior of the target in both Up and Down directions.\n    behavior: {}\n      # scaleDown:\n      #  stabilizationWindowSeconds: 300\n      #  policies:\n      #   - type: Pods\n      #     value: 1\n      #     periodSeconds: 180\n      # scaleUp:\n      #   stabilizationWindowSeconds: 300\n      #   policies:\n      #   - type: Pods\n      #     value: 2\n      #     periodSeconds: 60\n    # -- Configures custom HPA metrics for the Argo CD server\n    # Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/\n    metrics: []\n\n  ## Argo CD server Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the Argo CD server\n    enabled: false\n    # -- Labels to be added to Argo CD server pdb\n    labels: {}\n    # -- Annotations to be added to Argo CD server pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `server.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## Argo CD server image\n  image:\n    # -- Repository to use for the Argo CD server\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\" # defaults to global.image.repository\n    # -- Tag to use for the Argo CD server\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\" # defaults to global.image.tag\n    # -- Image pull policy for the Argo CD server\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\" # IfNotPresent\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # -- Additional command line arguments to pass to Argo CD server\n  extraArgs: []\n\n  # -- Environment variables to pass to Argo CD server\n  env: []\n\n  # -- envFrom to pass to Argo CD server\n  # @default -- `[]` (See [values.yaml])\n  envFrom: []\n  # - configMapRef:\n  #     name: config-map-name\n  # - secretRef:\n  #     name: secret-name\n\n  # -- Specify postStart and preStop lifecycle hooks for your argo-cd-server container\n  lifecycle: {}\n\n  ## Argo CD extensions\n  ## This function in tech preview stage, do expect instability or breaking changes in newer versions.\n  ## Ref: https://github.com/argoproj-labs/argocd-extension-installer\n  ## When you enable extensions, you need to configure RBAC of logged in Argo CD user.\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#the-extensions-resource\n  extensions:\n    # -- Enable support for Argo CD extensions\n    enabled: false\n\n    ## Argo CD extension installer image\n    image:\n      # -- Repository to use for extension installer image\n      repository: \"quay.io/argoprojlabs/argocd-extension-installer\"\n      # -- Tag to use for extension installer image\n      tag: \"v0.0.8\"\n      # -- Image pull policy for extensions\n      # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n      imagePullPolicy: \"\"\n\n    # -- Extensions for Argo CD\n    # @default -- `[]` (See [values.yaml])\n    ## Ref: https://github.com/argoproj-labs/argocd-extension-metrics#install-ui-extension\n    extensionList: []\n    #  - name: extension-metrics\n    #    env:\n    #      - name: EXTENSION_URL\n    #        value: https://github.com/argoproj-labs/argocd-extension-metrics/releases/download/v1.0.0/extension.tar.gz\n    #      - name: EXTENSION_CHECKSUM_URL\n    #        value: https://github.com/argoproj-labs/argocd-extension-metrics/releases/download/v1.0.0/extension_checksums.txt\n\n    # -- Server UI extensions container-level security context\n    # @default -- See [values.yaml]\n    containerSecurityContext:\n      runAsNonRoot: true\n      readOnlyRootFilesystem: true\n      allowPrivilegeEscalation: false\n      runAsUser: 1000\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n        - ALL\n\n    # -- Resource limits and requests for the argocd-extensions container\n    resources: {}\n    #  limits:\n    #    cpu: 50m\n    #    memory: 128Mi\n    #  requests:\n    #    cpu: 10m\n    #    memory: 64Mi\n\n  # -- Additional containers to be added to the server pod\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n  # - name: my-sidecar\n  #   image: nginx:latest\n  # - name: lemonldap-ng-controller\n  #   image: lemonldapng/lemonldap-ng-controller:0.2.0\n  #   args:\n  #     - /lemonldap-ng-controller\n  #     - --alsologtostderr\n  #     - --configmap=$(POD_NAMESPACE)/lemonldap-ng-configuration\n  #   env:\n  #     - name: POD_NAME\n  #       valueFrom:\n  #         fieldRef:\n  #           fieldPath: metadata.name\n  #     - name: POD_NAMESPACE\n  #       valueFrom:\n  #         fieldRef:\n  #           fieldPath: metadata.namespace\n  #   volumeMounts:\n  #   - name: copy-portal-skins\n  #     mountPath: /srv/var/lib/lemonldap-ng/portal/skins\n\n  # -- Init containers to add to the server pod\n  ## If your target Kubernetes cluster(s) require a custom credential (exec) plugin\n  ## you could use this (and the same in the application controller pod) to provide such executable\n  ## Ref: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins\n  initContainers: []\n  #  - name: download-tools\n  #    image: alpine:3\n  #    command: [sh, -c]\n  #    args:\n  #      - wget -qO /custom-tools/kubelogin.zip https://github.com/Azure/kubelogin/releases/download/v0.2.7/kubelogin-linux-amd64.zip \u0026\u0026\n  #        mkdir /custom-tools/tmp \u0026\u0026 unzip -d /custom-tools/tmp /custom-tools/kubelogin.zip  \u0026\u0026\n  #        mv /custom-tools/tmp/bin/linux_amd64/kubelogin /custom-tools/ \u0026\u0026 rm -rf custom-tools/tmp \u0026\u0026 rm /custom-tools/kubelogin.zip\n  #    volumeMounts:\n  #      - mountPath: /custom-tools\n  #        name: custom-tools\n\n  # -- Additional volumeMounts to the server main container\n  volumeMounts: []\n  #  - mountPath: /usr/local/bin/kubelogin\n  #    name: custom-tools\n  #    subPath: kubelogin\n\n  # -- Additional volumes to the server pod\n  volumes: []\n  #  - name: custom-tools\n  #    emptyDir: {}\n\n  ## Argo CD server emptyDir volumes\n  emptyDir:\n    # -- EmptyDir size limit for the Argo CD server\n    # @default -- `\"\"` (defaults not set if not specified i.e. no size limit)\n    sizeLimit: \"\"\n    # sizeLimit: \"1Gi\"\n\n  # -- Annotations to be added to server Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the server Deployment\n  deploymentLabels: {}\n\n  # -- Annotations to be added to server pods\n  podAnnotations: {}\n\n  # -- Labels to be added to server pods\n  podLabels: {}\n\n  # -- Resource limits and requests for the Argo CD server\n  resources: {}\n  #  limits:\n  #    cpu: 100m\n  #    memory: 128Mi\n  #  requests:\n  #    cpu: 50m\n  #    memory: 64Mi\n\n  # Server container ports\n  containerPorts:\n    # -- Server container port\n    server: 8080\n    # -- Metrics container port\n    metrics: 8083\n\n  # -- Host Network for Server pods\n  hostNetwork: false\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for Server pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- Server container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n      - ALL\n\n  ## Readiness and liveness probes for default backend\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  livenessProbe:\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- Priority class for the Argo CD server pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules to the deployment\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the Argo CD server\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy to be added to the server Deployment\n  deploymentStrategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n  # TLS certificate configuration via cert-manager\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#tls-certificates-used-by-argocd-server\n  certificate:\n    # -- Deploy a Certificate resource (requires cert-manager)\n    enabled: false\n    # -- Certificate primary domain (commonName)\n    # @default -- `\"\"` (defaults to global.domain)\n    domain: \"\"\n    # -- Certificate Subject Alternate Names (SANs)\n    additionalHosts: []\n    # -- The requested 'duration' (i.e. lifetime) of the certificate.\n    # @default -- `\"\"` (defaults to 2160h = 90d if not specified)\n    ## Ref: https://cert-manager.io/docs/usage/certificate/#renewal\n    duration: \"\"\n    # -- How long before the expiry a certificate should be renewed.\n    # @default -- `\"\"` (defaults to 360h = 15d if not specified)\n    ## Ref: https://cert-manager.io/docs/usage/certificate/#renewal\n    renewBefore: \"\"\n    # Certificate issuer\n    ## Ref: https://cert-manager.io/docs/concepts/issuer\n    issuer:\n      # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`\n      group: \"\"\n      # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`\n      kind: \"\"\n      # -- Certificate issuer name. Eg. `letsencrypt`\n      name: \"\"\n    # Private key of the certificate\n    privateKey:\n      # -- Rotation policy of private key when certificate is re-issued. Either: `Never` or `Always`\n      rotationPolicy: Never\n      # -- The private key cryptography standards (PKCS) encoding for private key. Either: `PCKS1` or `PKCS8`\n      encoding: PKCS1\n      # -- Algorithm used to generate certificate private key. One of: `RSA`, `Ed25519` or `ECDSA`\n      algorithm: RSA\n      # -- Key bit size of the private key. If algorithm is set to `Ed25519`, size is ignored.\n      size: 2048\n    # -- Annotations to be applied to the Server Certificate\n    annotations: {}\n    # -- Usages for the certificate\n    ### Ref: https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.KeyUsage\n    usages: []\n    # -- Annotations that allow the certificate to be composed from data residing in existing Kubernetes Resources\n    secretTemplateAnnotations: {}\n\n  # TLS certificate configuration via Secret\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#tls-certificates-used-by-argocd-server\n  certificateSecret:\n    # -- Create argocd-server-tls secret\n    enabled: false\n    # -- Annotations to be added to argocd-server-tls secret\n    annotations: {}\n    # -- Labels to be added to argocd-server-tls secret\n    labels: {}\n    # -- Private Key of the certificate\n    key: ''\n    # -- Certificate data\n    crt: ''\n\n  ## Server service configuration\n  service:\n    # -- Server service annotations\n    annotations: {}\n    # -- Server service labels\n    labels: {}\n    # -- Server service type\n    type: NodePort\n    # -- Server service http port for NodePort service type (only if `server.service.type` is set to \"NodePort\")\n    nodePortHttp: 30080\n    # -- Server service https port for NodePort service type (only if `server.service.type` is set to \"NodePort\")\n    nodePortHttps: 30443\n    # -- Server service http port\n    servicePortHttp: 80\n    # -- Server service https port\n    servicePortHttps: 443\n    # -- Server service http port name, can be used to route traffic via istio\n    servicePortHttpName: http\n    # -- Server service https port name, can be used to route traffic via istio\n    servicePortHttpsName: https\n    # -- Server service https port appProtocol\n    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol\n    servicePortHttpsAppProtocol: \"\"\n    # -- The class of the load balancer implementation\n    loadBalancerClass: \"\"\n    # -- LoadBalancer will get created with the IP specified in this field\n    loadBalancerIP: \"\"\n    # -- Source IP ranges to allow access to service from\n    ## EKS Ref: https://repost.aws/knowledge-center/eks-cidr-ip-address-loadbalancer\n    ## GKE Ref: https://cloud.google.com/kubernetes-engine/docs/concepts/network-overview#limit-connectivity-ext-lb\n    loadBalancerSourceRanges: []\n    # -- Server service external IPs\n    externalIPs: []\n    # -- Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ## Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n    externalTrafficPolicy: Cluster\n    # -- Used to maintain session affinity. Supports `ClientIP` and `None`\n    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n    sessionAffinity: None\n\n  ## Server metrics service configuration\n  metrics:\n    # -- Deploy metrics service\n    enabled: false\n    service:\n      # -- Metrics service type\n      type: ClusterIP\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: \"\"\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port\n      servicePort: 8083\n      # -- Metrics service port name\n      portName: http-metrics\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Prometheus ServiceMonitor interval\n      interval: 30s\n      # -- Prometheus ServiceMonitor scrapeTimeout. If empty, Prometheus uses the global scrape timeout unless it is less than the target's scrape interval value in which the latter is used.\n      scrapeTimeout: \"\"\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- Prometheus ServiceMonitor namespace\n      namespace: \"\"  # monitoring\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  serviceAccount:\n    # -- Create server service account\n    create: true\n    # -- Server service account name\n    name: argocd-server\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Labels applied to created service account\n    labels: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  # Argo CD server ingress configuration\n  ingress:\n    # -- Enable an ingress resource for the Argo CD server\n    enabled: false\n    # -- Specific implementation for ingress controller. One of `generic`, `aws` or `gke`\n    ## Additional configuration might be required in related configuration sections\n    controller: generic\n    # -- Additional ingress labels\n    labels: {}\n    # -- Additional ingress annotations\n    ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n    annotations: {}\n      # nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\n      # nginx.ingress.kubernetes.io/ssl-passthrough: \"true\"\n\n    # -- Defines which ingress controller will implement the resource\n    ingressClassName: \"\"\n\n    # -- Argo CD server hostname\n    # @default -- `\"\"` (defaults to global.domain)\n    hostname: \"\"\n\n    # -- The path to Argo CD server\n    path: /\n\n    # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`\n    pathType: Prefix\n\n    # -- Enable TLS configuration for the hostname defined at `server.ingress.hostname`\n    ## TLS certificate will be retrieved from a TLS secret `argocd-server-tls`\n    ## You can create this secret via `certificate` or `certificateSecret` option\n    tls: false\n\n    # -- The list of additional hostnames to be covered by ingress record\n    # @default -- `[]` (See [values.yaml])\n    extraHosts: []\n      # - name: argocd.example.com\n      #   path: /\n\n    # -- Additional ingress paths\n    # @default -- `[]` (See [values.yaml])\n    ## Note: Supports use of custom Helm templates\n    extraPaths: []\n      # - path: /*\n      #   pathType: Prefix\n      #   backend:\n      #     service:\n      #       name: ssl-redirect\n      #       port:\n      #         name: use-annotation\n\n    # -- Additional ingress rules\n    # @default -- `[]` (See [values.yaml])\n    ## Note: Supports use of custom Helm templates\n    extraRules: []\n      # - http:\n      #     paths:\n      #     - path: /\n      #       pathType: Prefix\n      #       backend:\n      #         service:\n      #           name: '{{ include \"argo-cd.server.fullname\" . }}'\n      #           port:\n      #             name: '{{ .Values.server.service.servicePortHttpsName }}'\n\n    # -- Additional TLS configuration\n    # @default -- `[]` (See [values.yaml])\n    extraTls: []\n      # - hosts:\n      #   - argocd.example.com\n      #   secretName: your-certificate-name\n\n    # AWS specific options for Application Load Balancer\n    # Applies only when `serv.ingress.controller` is set to `aws`\n    ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#aws-application-load-balancers-albs-and-classic-elb-http-mode\n    aws:\n      # -- Backend protocol version for the AWS ALB gRPC service\n      ## This tells AWS to send traffic from the ALB using gRPC.\n      ## For more information: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html#health-check-settings\n      backendProtocolVersion: GRPC\n      # -- Service type for the AWS ALB gRPC service\n      ## Can be of type NodePort or ClusterIP depending on which mode you are running.\n      ## Instance mode needs type NodePort, IP mode needs type ClusterIP\n      ## Ref: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/how-it-works/#ingress-traffic\n      serviceType: NodePort\n\n    # Google specific options for Google Application Load Balancer\n    # Applies only when `server.ingress.controller` is set to `gke`\n    ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#google-cloud-load-balancers-with-kubernetes-ingress\n    gke:\n      # -- Google [BackendConfig] resource, for use with the GKE Ingress Controller\n      # @default -- `{}` (See [values.yaml])\n      ## Ref: https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#configuring_ingress_features_through_frontendconfig_parameters\n      backendConfig: {}\n        # iap:\n        #  enabled: true\n        #  oauthclientCredentials:\n        #    secretName: argocd-secret\n\n      # -- Google [FrontendConfig] resource, for use with the GKE Ingress Controller\n      # @default -- `{}` (See [values.yaml])\n      ## Ref: https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#configuring_ingress_features_through_frontendconfig_parameters\n      frontendConfig: {}\n        # redirectToHttps:\n        #   enabled: true\n        #   responseCodeName: RESPONSE_CODE\n\n      # Managed GKE certificate for ingress hostname\n      managedCertificate:\n        # -- Create ManagedCertificate resource and annotations for Google Load balancer\n        ## Ref: https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs\n        create: true\n        # -- Additional domains for ManagedCertificate resource\n        extraDomains: []\n          # - argocd.example.com\n\n  # Dedicated gRPC ingress for ingress controllers that supports only single backend protocol per Ingress resource\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n  ingressGrpc:\n    # -- Enable an ingress resource for the Argo CD server for dedicated [gRPC-ingress]\n    enabled: false\n    # -- Additional ingress annotations for dedicated [gRPC-ingress]\n    annotations: {}\n    # -- Additional ingress labels for dedicated [gRPC-ingress]\n    labels: {}\n    # -- Defines which ingress controller will implement the resource [gRPC-ingress]\n    ingressClassName: \"\"\n\n    # -- Argo CD server hostname for dedicated [gRPC-ingress]\n    # @default -- `\"\"` (defaults to grpc.`server.ingress.hostname`)\n    hostname: \"\"\n\n    # -- Argo CD server ingress path for dedicated [gRPC-ingress]\n    path: /\n\n    # -- Ingress path type for dedicated [gRPC-ingress]. One of `Exact`, `Prefix` or `ImplementationSpecific`\n    pathType: Prefix\n\n    # -- Enable TLS configuration for the hostname defined at `server.ingressGrpc.hostname`\n    ## TLS certificate will be retrieved from a TLS secret with name: `argocd-server-grpc-tls`\n    tls: false\n\n    # -- The list of additional hostnames to be covered by ingress record\n    # @default -- `[]` (See [values.yaml])\n    extraHosts: []\n      # - name: grpc.argocd.example.com\n      #   path: /\n\n    # -- Additional ingress paths for dedicated [gRPC-ingress]\n    # @default -- `[]` (See [values.yaml])\n    ## Note: Supports use of custom Helm templates\n    extraPaths: []\n      # - path: /*\n      #   pathType: Prefix\n      #   backend:\n      #     service:\n      #       name: ssl-redirect\n      #       port:\n      #         name: use-annotation\n\n    # -- Additional ingress rules\n    # @default -- `[]` (See [values.yaml])\n    ## Note: Supports use of custom Helm templates\n    extraRules: []\n      # - http:\n      #     paths:\n      #     - path: /\n      #       pathType: Prefix\n      #       backend:\n      #         service:\n      #           name: '{{ include \"argo-cd.server.fullname\" . }}'\n      #           port:\n      #             name: '{{ .Values.server.service.servicePortHttpName }}'\n\n    # -- Additional TLS configuration for dedicated [gRPC-ingress]\n    # @default -- `[]` (See [values.yaml])\n    extraTls: []\n      # - secretName: your-certificate-name\n      #   hosts:\n      #     - argocd.example.com\n\n  # Create a OpenShift Route with SSL passthrough for UI and CLI\n  # Consider setting 'hostname' e.g. https://argocd.apps-crc.testing/ using your Default Ingress Controller Domain\n  # Find your domain with: kubectl describe --namespace=openshift-ingress-operator ingresscontroller/default | grep Domain:\n  # If 'hostname' is an empty string \"\" OpenShift will create a hostname for you.\n  route:\n    # -- Enable an OpenShift Route for the Argo CD server\n    enabled: false\n    # -- Openshift Route annotations\n    annotations: {}\n    # -- Hostname of OpenShift Route\n    hostname: \"\"\n    # -- Termination type of Openshift Route\n    termination_type: passthrough\n    # -- Termination policy of Openshift Route\n    termination_policy: None\n\n  # Gateway API HTTPRoute configuration\n  # NOTE: Gateway API support is in EXPERIMENTAL status\n  # Support depends on your Gateway controller implementation\n  # Some controllers may require additional configuration (e.g., BackendTLSPolicy for HTTPS backends)\n  # Refer to https://gateway-api.sigs.k8s.io/implementations/ for controller-specific details\n  httproute:\n    # -- Enable HTTPRoute resource for Argo CD server (Gateway API)\n    enabled: false\n    # -- Additional HTTPRoute labels\n    labels: {}\n    # -- Additional HTTPRoute annotations\n    annotations: {}\n    # -- Gateway API parentRefs for the HTTPRoute\n    ## Must reference an existing Gateway\n    # @default -- `[]` (See [values.yaml])\n    parentRefs: []\n      # - name: example-gateway\n      #   namespace: example-gateway-namespace\n      #   sectionName: https\n    # -- List of hostnames for the HTTPRoute\n    # @default -- `[]` (See [values.yaml])\n    hostnames: []\n      # - argocd.example.com\n    # -- HTTPRoute rules configuration\n    # @default -- `[]` (See [values.yaml])\n    rules:\n      - matches:\n          - path:\n              type: PathPrefix\n              value: /\n        # filters: []\n        #   - type: RequestHeaderModifier\n        #     requestHeaderModifier:\n        #       add:\n        #         - name: X-Custom-Header\n        #           value: custom-value\n\n  # Gateway API GRPCRoute configuration\n  # NOTE: Gateway API support is in EXPERIMENTAL status\n  # Support depends on your Gateway controller implementation\n  # Refer to https://gateway-api.sigs.k8s.io/implementations/ for controller-specific details\n  grpcroute:\n    # -- Enable GRPCRoute resource for Argo CD server (Gateway API)\n    enabled: false\n    # -- Additional GRPCRoute labels\n    labels: {}\n    # -- Additional GRPCRoute annotations\n    annotations: {}\n    # -- Gateway API parentRefs for the GRPCRoute\n    ## Must reference an existing Gateway\n    # @default -- `[]` (See [values.yaml])\n    parentRefs: []\n      # - name: example-gateway\n      #   namespace: example-gateway-namespace\n      #   sectionName: grpc\n    # -- List of hostnames for the GRPCRoute\n    # @default -- `[]` (See [values.yaml])\n    hostnames: []\n      # - grpc.argocd.example.com\n    # -- GRPCRoute rules configuration\n    # @default -- `[]` (See [values.yaml])\n    rules:\n      - matches:\n          - method:\n              type: Exact\n        # filters: []\n        #   - type: RequestHeaderModifier\n        #     requestHeaderModifier:\n        #       add:\n        #         - name: X-Custom-Header\n        #           value: custom-value\n\n  # Gateway API BackendTLSPolicy configuration\n  # NOTE: BackendTLSPolicy is in EXPERIMENTAL status (v1alpha3)\n  # Required for HTTPS backends when using Gateway API\n  # Not all Gateway controllers support this resource (e.g., Cilium does not support it yet)\n  backendTLSPolicy:\n    # -- Enable BackendTLSPolicy resource for Argo CD server (Gateway API)\n    enabled: false\n    # -- Additional BackendTLSPolicy labels\n    labels: {}\n    # -- Additional BackendTLSPolicy annotations\n    annotations: {}\n    # -- Target references for the BackendTLSPolicy\n    # @default -- `[]` (See [values.yaml])\n    targetRefs: []\n      # - group: \"\"\n      #   kind: Service\n      #   name: argocd-server\n      #   sectionName: https\n    # -- TLS validation configuration\n    # @default -- `{}` (See [values.yaml])\n    validation: {}\n      # hostname: argocd-server.argocd.svc.cluster.local\n      # caCertificateRefs:\n      #   - name: example-ca-cert\n      #     group: \"\"\n      #     kind: ConfigMap\n      # wellKnownCACertificates: System\n\n  ## Enable this and set the rules: to whatever custom rules you want for the Cluster Role resource.\n  ## Defaults to off\n  clusterRoleRules:\n    # -- Enable custom rules for the server's ClusterRole resource\n    enabled: false\n    # -- List of custom rules for the server's ClusterRole resource\n    rules: []\n\n  # Default ArgoCD Server's network policy\n  networkPolicy:\n    # -- Default network policy rules used by ArgoCD Server\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\n## Repo Server\nrepoServer:\n  # -- Repo server name\n  name: repo-server\n\n  # -- The number of repo server pods to run\n  replicas: 1\n\n  # -- Runtime class name for the repo server\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  ## Repo server Horizontal Pod Autoscaler\n  autoscaling:\n    # -- Enable Horizontal Pod Autoscaler ([HPA]) for the repo server\n    enabled: false\n    # -- Minimum number of replicas for the repo server [HPA]\n    minReplicas: 1\n    # -- Maximum number of replicas for the repo server [HPA]\n    maxReplicas: 5\n    # -- Average CPU utilization percentage for the repo server [HPA]\n    targetCPUUtilizationPercentage: 50\n    # -- Average memory utilization percentage for the repo server [HPA]\n    targetMemoryUtilizationPercentage: 50\n    # -- Configures the scaling behavior of the target in both Up and Down directions.\n    behavior: {}\n      # scaleDown:\n      #  stabilizationWindowSeconds: 300\n      #  policies:\n      #   - type: Pods\n      #     value: 1\n      #     periodSeconds: 180\n      # scaleUp:\n      #   stabilizationWindowSeconds: 300\n      #   policies:\n      #   - type: Pods\n      #     value: 2\n      #     periodSeconds: 60\n    # -- Configures custom HPA metrics for the Argo CD repo server\n    # Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/\n    metrics: []\n\n  ## Repo server Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the repo server\n    enabled: false\n    # -- Labels to be added to repo server pdb\n    labels: {}\n    # -- Annotations to be added to repo server pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `repoServer.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## Repo server image\n  image:\n    # -- Repository to use for the repo server\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\"\n    # -- Tag to use for the repo server\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\"\n    # -- Image pull policy for the repo server\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # -- Additional command line arguments to pass to repo server\n  extraArgs: []\n\n  # -- Environment variables to pass to repo server\n  env: []\n\n  # -- envFrom to pass to repo server\n  # @default -- `[]` (See [values.yaml])\n  envFrom: []\n  # - configMapRef:\n  #     name: config-map-name\n  # - secretRef:\n  #     name: secret-name\n\n  # -- Specify postStart and preStop lifecycle hooks for your argo-repo-server container\n  lifecycle: {}\n\n  # -- Additional containers to be added to the repo server pod\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/user-guide/config-management-plugins/\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n    # - name: cmp-my-plugin\n    #   command:\n    #     - \"/var/run/argocd/argocd-cmp-server\"\n    #   image: busybox\n    #   securityContext:\n    #     runAsNonRoot: true\n    #     runAsUser: 999\n    #   volumeMounts:\n    #     - mountPath: /var/run/argocd\n    #       name: var-files\n    #     - mountPath: /home/argocd/cmp-server/plugins\n    #       name: plugins\n    #     # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.\n    #     - mountPath: /home/argocd/cmp-server/config/plugin.yaml\n    #       subPath: my-plugin.yaml\n    #       name: argocd-cmp-cm\n    #     # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps\n    #     # mitigate path traversal attacks.\n    #     - mountPath: /tmp\n    #       name: cmp-tmp\n    # - name: cmp-my-plugin2\n    #   command:\n    #     - \"/var/run/argocd/argocd-cmp-server\"\n    #   image: busybox\n    #   securityContext:\n    #     runAsNonRoot: true\n    #     runAsUser: 999\n    #   volumeMounts:\n    #     - mountPath: /var/run/argocd\n    #       name: var-files\n    #     # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.\n    #     - mountPath: /home/argocd/cmp-server/plugins\n    #       name: plugins\n    #     - mountPath: /home/argocd/cmp-server/config/plugin.yaml\n    #       subPath: my-plugin2.yaml\n    #       name: argocd-cmp-cm\n    #     # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps\n    #     # mitigate path traversal attacks.\n    #     - mountPath: /tmp\n    #       name: cmp-tmp\n\n  # -- Init containers to add to the repo server pods\n  initContainers: []\n\n  copyutil:\n    # -- Resource limits and requests for the repo server copyutil initContainer\n    resources: {}\n    #  limits:\n    #    cpu: 100m\n    #    memory: 128Mi\n    #  requests:\n    #    cpu: 50m\n    #    memory: 64Mi\n\n  # -- Additional volumeMounts to the repo server main container\n  volumeMounts: []\n\n  # -- Additional volumes to the repo server pod\n  volumes: []\n  #  - name: argocd-cmp-cm\n  #    configMap:\n  #      name: argocd-cmp-cm\n  #  - name: cmp-tmp\n  #    emptyDir: {}\n\n  # -- Volumes to be used in replacement of emptydir on default volumes\n  existingVolumes: {}\n  #  gpgKeyring:\n  #    persistentVolumeClaim:\n  #      claimName: pvc-argocd-repo-server-keyring\n  #  helmWorkingDir:\n  #    persistentVolumeClaim:\n  #      claimName: pvc-argocd-repo-server-workdir\n  #  tmp:\n  #    persistentVolumeClaim:\n  #      claimName: pvc-argocd-repo-server-tmp\n  #  varFiles:\n  #    persistentVolumeClaim:\n  #      claimName: pvc-argocd-repo-server-varfiles\n  #  plugins:\n  #    persistentVolumeClaim:\n  #      claimName: pvc-argocd-repo-server-plugins\n\n  ## RepoServer emptyDir volumes\n  emptyDir:\n    # -- EmptyDir size limit for repo server\n    # @default -- `\"\"` (defaults not set if not specified i.e. no size limit)\n    sizeLimit: \"\"\n    # sizeLimit: \"1Gi\"\n\n  # -- Toggle the usage of a ephemeral Helm working directory\n  useEphemeralHelmWorkingDir: true\n\n  # -- Annotations to be added to repo server Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the repo server Deployment\n  deploymentLabels: {}\n\n  # -- Annotations to be added to repo server pods\n  podAnnotations: {}\n\n  # -- Labels to be added to repo server pods\n  podLabels: {}\n\n  # -- Resource limits and requests for the repo server pods\n  resources: {}\n  #  limits:\n  #    cpu: 50m\n  #    memory: 128Mi\n  #  requests:\n  #    cpu: 10m\n  #    memory: 64Mi\n\n  # Repo server container ports\n  containerPorts:\n    # -- Repo server container port\n    server: 8081\n    # -- Metrics container port\n    metrics: 8084\n\n  # -- Host Network for Repo server pods\n  hostNetwork: false\n\n    # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for Repo server pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- Repo server container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n      - ALL\n\n  ## Readiness and liveness probes for default backend\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  livenessProbe:\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules to the deployment\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the repo server\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy to be added to the repo server Deployment\n  deploymentStrategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n  # -- Priority class for the repo server pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # TLS certificate configuration via Secret\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#configuring-tls-to-argocd-repo-server\n  ## Note: Issuing certificates via cert-manager in not supported right now because it's not possible to restart repo server automatically without extra controllers.\n  certificateSecret:\n    # -- Create argocd-repo-server-tls secret\n    enabled: false\n    # -- Annotations to be added to argocd-repo-server-tls secret\n    annotations: {}\n    # -- Labels to be added to argocd-repo-server-tls secret\n    labels: {}\n    # -- Certificate authority. Required for self-signed certificates.\n    ca: ''\n    # -- Certificate private key\n    key: ''\n    # -- Certificate data. Must contain SANs of Repo service (ie: argocd-repo-server, argocd-repo-server.argo-cd.svc)\n    crt: ''\n\n  ## Repo server service configuration\n  service:\n    # -- Repo server service annotations\n    annotations: {}\n    # -- Repo server service labels\n    labels: {}\n    # -- Repo server service port\n    port: 8081\n    # -- Repo server service port name\n    portName: tcp-repo-server\n    # -- Traffic distribution preference for the repo server service. If the field is not set, the implementation will apply its default routing strategy.\n    trafficDistribution: \"\"\n\n  ## Repo server metrics service configuration\n  metrics:\n    # -- Deploy metrics service\n    enabled: false\n    service:\n      # -- Metrics service type\n      type: ClusterIP\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: \"\"\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port\n      servicePort: 8084\n      # -- Metrics service port name\n      portName: http-metrics\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Prometheus ServiceMonitor interval\n      interval: 30s\n      # -- Prometheus ServiceMonitor scrapeTimeout. If empty, Prometheus uses the global scrape timeout unless it is less than the target's scrape interval value in which the latter is used.\n      scrapeTimeout: \"\"\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- Prometheus ServiceMonitor namespace\n      namespace: \"\" # \"monitoring\"\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n\n  ## Enable Custom Rules for the Repo server's Cluster Role resource\n  ## Enable this and set the rules: to whatever custom rules you want for the Cluster Role resource.\n  ## Defaults to off\n  clusterRoleRules:\n    # -- Enable custom rules for the Repo server's Cluster Role resource\n    enabled: false\n    # -- List of custom rules for the Repo server's Cluster Role resource\n    rules: []\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  ## Repo server service account\n  ## If create is set to true, make sure to uncomment the name and update the rbac section below\n  serviceAccount:\n    # -- Create repo server service account\n    create: true\n    # -- Repo server service account name\n    name: \"\" # \"argocd-repo-server\"\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Labels applied to created service account\n    labels: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  # -- Repo server rbac rules\n  rbac: []\n  #   - apiGroups:\n  #     - argoproj.io\n  #     resources:\n  #     - applications\n  #     verbs:\n  #     - get\n  #     - list\n  #     - watch\n\n  # Default repo server's network policy\n  networkPolicy:\n    # -- Default network policy rules used by repo server\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\n## ApplicationSet controller\napplicationSet:\n  # -- ApplicationSet controller name string\n  name: applicationset-controller\n\n  # -- The number of ApplicationSet controller pods to run\n  replicas: 1\n\n  # -- Runtime class name for the ApplicationSet controller\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  ## ApplicationSet controller Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the ApplicationSet controller\n    enabled: false\n    # -- Labels to be added to ApplicationSet controller pdb\n    labels: {}\n    # -- Annotations to be added to ApplicationSet controller pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `applicationSet.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## ApplicationSet controller image\n  image:\n    # -- Repository to use for the ApplicationSet controller\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\"\n    # -- Tag to use for the ApplicationSet controller\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\"\n    # -- Image pull policy for the ApplicationSet controller\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  # -- If defined, uses a Secret to pull an image from a private Docker registry or repository.\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # -- ApplicationSet controller command line flags\n  extraArgs: []\n\n  # -- Environment variables to pass to the ApplicationSet controller\n  extraEnv: []\n    # - name: \"MY_VAR\"\n    #   value: \"value\"\n\n  # -- envFrom to pass to the ApplicationSet controller\n  # @default -- `[]` (See [values.yaml])\n  extraEnvFrom: []\n    # - configMapRef:\n    #     name: config-map-name\n    # - secretRef:\n    #     name: secret-name\n\n  # -- Additional containers to be added to the ApplicationSet controller pod\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n\n  # -- Init containers to add to the ApplicationSet controller pod\n  ## Note: Supports use of custom Helm templates\n  initContainers: []\n\n  # -- List of extra mounts to add (normally used with extraVolumes)\n  extraVolumeMounts: []\n\n  # -- List of extra volumes to add\n  extraVolumes: []\n\n  ## ApplicationSet controller emptyDir volumes\n  emptyDir:\n    # -- EmptyDir size limit for applicationSet controller\n    # @default -- `\"\"` (defaults not set if not specified i.e. no size limit)\n    sizeLimit: \"\"\n    # sizeLimit: \"1Gi\"\n\n  ## Metrics service configuration\n  metrics:\n    # -- Deploy metrics service\n    enabled: false\n    service:\n      # -- Metrics service type\n      type: ClusterIP\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: \"\"\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port\n      servicePort: 8080\n      # -- Metrics service port name\n      portName: http-metrics\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Prometheus ServiceMonitor interval\n      interval: 30s\n      # -- Prometheus ServiceMonitor scrapeTimeout. If empty, Prometheus uses the global scrape timeout unless it is less than the target's scrape interval value in which the latter is used.\n      scrapeTimeout: \"\"\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- Prometheus ServiceMonitor namespace\n      namespace: \"\"  # monitoring\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n\n  ## ApplicationSet service configuration\n  service:\n    # -- ApplicationSet service annotations\n    annotations: {}\n    # -- ApplicationSet service labels\n    labels: {}\n    # -- ApplicationSet service type\n    type: ClusterIP\n    # -- ApplicationSet service port\n    port: 7000\n    # -- ApplicationSet service port name\n    portName: http-webhook\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  serviceAccount:\n    # -- Create ApplicationSet controller service account\n    create: true\n    # -- ApplicationSet controller service account name\n    name: argocd-applicationset-controller\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Labels applied to created service account\n    labels: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  # -- Annotations to be added to ApplicationSet controller Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the ApplicationSet controller Deployment\n  deploymentLabels: {}\n\n  # -- Annotations for the ApplicationSet controller pods\n  podAnnotations: {}\n\n  # -- Labels for the ApplicationSet controller pods\n  podLabels: {}\n\n  # -- Resource limits and requests for the ApplicationSet controller pods.\n  resources: {}\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n    # requests:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # ApplicationSet controller container ports\n  containerPorts:\n    # -- Metrics container port\n    metrics: 8080\n    # -- Probe container port\n    probe: 8081\n    # -- Webhook container port\n    webhook: 7000\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for ApplicationSet controller pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- ApplicationSet controller container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n      - ALL\n\n  ## Probes for ApplicationSet controller (optional)\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Enable Kubernetes liveness probe for ApplicationSet controller\n    enabled: false\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n\n  livenessProbe:\n    # -- Enable Kubernetes liveness probe for ApplicationSet controller\n    enabled: false\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the ApplicationSet controller\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy to be added to the ApplicationSet controller Deployment\n  deploymentStrategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n  # -- Priority class for the ApplicationSet controller pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # TLS certificate configuration via cert-manager\n  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#tls-configuration\n  certificate:\n    # -- Deploy a Certificate resource (requires cert-manager)\n    enabled: false\n    # -- Certificate primary domain (commonName)\n    # @default -- `\"\"` (defaults to global.domain)\n    domain: \"\"\n    # -- Certificate Subject Alternate Names (SANs)\n    additionalHosts: []\n    # -- The requested 'duration' (i.e. lifetime) of the certificate.\n    # @default -- `\"\"` (defaults to 2160h = 90d if not specified)\n    ## Ref: https://cert-manager.io/docs/usage/certificate/#renewal\n    duration: \"\"\n    # -- How long before the expiry a certificate should be renewed.\n    # @default -- `\"\"` (defaults to 360h = 15d if not specified)\n    ## Ref: https://cert-manager.io/docs/usage/certificate/#renewal\n    renewBefore: \"\"\n    # Certificate issuer\n    ## Ref: https://cert-manager.io/docs/concepts/issuer\n    issuer:\n      # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`\n      group: \"\"\n      # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`\n      kind: \"\"\n      # -- Certificate issuer name. Eg. `letsencrypt`\n      name: \"\"\n    # Private key of the certificate\n    privateKey:\n      # -- Rotation policy of private key when certificate is re-issued. Either: `Never` or `Always`\n      rotationPolicy: Never\n      # -- The private key cryptography standards (PKCS) encoding for private key. Either: `PCKS1` or `PKCS8`\n      encoding: PKCS1\n      # -- Algorithm used to generate certificate private key. One of: `RSA`, `Ed25519` or `ECDSA`\n      algorithm: RSA\n      # -- Key bit size of the private key. If algorithm is set to `Ed25519`, size is ignored.\n      size: 2048\n    # -- Annotations to be applied to the ApplicationSet Certificate\n    annotations: {}\n\n  ## Ingress for the Git Generator webhook\n  ## Ref: https://argocd-applicationset.readthedocs.io/en/master/Generators-Git/#webhook-configuration)\n  ingress:\n    # -- Enable an ingress resource for ApplicationSet webhook\n    enabled: false\n    # -- Additional ingress labels\n    labels: {}\n    # -- Additional ingress annotations\n    annotations: {}\n\n    # -- Defines which ingress ApplicationSet controller will implement the resource\n    ingressClassName: \"\"\n\n    # -- Argo CD ApplicationSet hostname\n    # @default -- `\"\"` (defaults to global.domain)\n    hostname: \"\"\n\n    # -- List of ingress paths\n    path: /api/webhook\n\n    # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`\n    pathType: Prefix\n\n    # -- Enable TLS configuration for the hostname defined at `applicationSet.webhook.ingress.hostname`\n    ## TLS certificate will be retrieved from a TLS secret with name:`argocd-applicationset-controller-tls`\n    tls: false\n\n    # -- The list of additional hostnames to be covered by ingress record\n    # @default -- `[]` (See [values.yaml])\n    extraHosts: []\n      # - name: argocd.example.com\n      #   path: /\n\n    # -- Additional ingress paths\n    # @default -- `[]` (See [values.yaml])\n    extraPaths: []\n      # - path: /*\n      #   pathType: Prefix\n      #   backend:\n      #     service:\n      #       name: ssl-redirect\n      #       port:\n      #         name: use-annotation\n\n    # -- Additional ingress rules\n    # @default -- `[]` (See [values.yaml])\n    ## Note: Supports use of custom Helm templates\n    extraRules: []\n      # - http:\n      #    paths:\n      #    - path: /api/webhook\n      #      pathType: Prefix\n      #      backend:\n      #        service:\n      #          name: '{{ include \"argo-cd.applicationSet.fullname\" . }}'\n      #          port:\n      #            name: '{{ .Values.applicationSet.service.portName }}'\n\n    # -- Additional ingress TLS configuration\n    # @default -- `[]` (See [values.yaml])\n    extraTls: []\n      # - secretName: argocd-applicationset-tls\n      #   hosts:\n      #     - argocd-applicationset.example.com\n  # -- Enable ApplicationSet in any namespace feature\n  allowAnyNamespace: false\n\n  # Default ApplicationSet controller's network policy\n  networkPolicy:\n    # -- Default network policy rules used by ApplicationSet controller\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\n## Notifications controller\nnotifications:\n  # -- Enable notifications controller\n  enabled: false\n\n  # -- Notifications controller name string\n  name: notifications-controller\n\n  # -- Argo CD dashboard url; used in place of {{.context.argocdUrl}} in templates\n  # @default -- `\"\"` (defaults to https://`global.domain`)\n  argocdUrl: \"\"\n\n  # -- Runtime class name for the notifications controller\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  ## Notifications controller Pod Disruption Budget\n  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  pdb:\n    # -- Deploy a [PodDisruptionBudget] for the notifications controller\n    enabled: false\n    # -- Labels to be added to notifications controller pdb\n    labels: {}\n    # -- Annotations to be added to notifications controller pdb\n    annotations: {}\n    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)\n    # @default -- `\"\"` (defaults to 0 if not specified)\n    minAvailable: \"\"\n    # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).\n    ## Has higher precedence over `notifications.pdb.minAvailable`\n    maxUnavailable: \"\"\n\n  ## Notifications controller image\n  image:\n    # -- Repository to use for the notifications controller\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\"\n    # -- Tag to use for the notifications controller\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\"\n    # -- Image pull policy for the notifications controller\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  # -- Secrets with credentials to pull images from a private registry\n  # @default -- `[]` (defaults to global.imagePullSecrets)\n  imagePullSecrets: []\n\n  # DEPRECATED - Use configs.params to override\n  # -- Notifications controller log format. Either `text` or `json`\n  # @default -- `\"\"` (defaults to global.logging.format)\n  # logFormat: \"\"\n  # -- Notifications controller log level. One of: `debug`, `info`, `warn`, `error`\n  # @default -- `\"\"` (defaults to global.logging.level)\n  # logLevel: \"\"\n\n  # -- Extra arguments to provide to the notifications controller\n  extraArgs: []\n\n  # -- Additional container environment variables\n  extraEnv: []\n\n  # -- envFrom to pass to the notifications controller\n  # @default -- `[]` (See [values.yaml])\n  extraEnvFrom: []\n    # - configMapRef:\n    #     name: config-map-name\n    # - secretRef:\n    #     name: secret-name\n\n  # -- Additional containers to be added to the notifications controller pod\n  ## Note: Supports use of custom Helm templates\n  extraContainers: []\n\n  # -- Init containers to add to the notifications controller pod\n  ## Note: Supports use of custom Helm templates\n  initContainers: []\n\n  # -- List of extra mounts to add (normally used with extraVolumes)\n  extraVolumeMounts: []\n\n  # -- List of extra volumes to add\n  extraVolumes: []\n\n  # -- Define user-defined context\n  ## For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/templates/#defining-user-defined-context\n  context: {}\n    # region: east\n    # environmentName: staging\n\n  secret:\n    # -- Whether helm chart creates notifications controller secret\n    ## If true, will create a secret with the name below. Otherwise, will assume existence of a secret with that name.\n    create: true\n\n    # -- notifications controller Secret name\n    name: \"argocd-notifications-secret\"\n\n    # -- key:value pairs of annotations to be added to the secret\n    annotations: {}\n\n    # -- key:value pairs of labels to be added to the secret\n    labels: {}\n\n    # -- Generic key:value pairs to be inserted into the secret\n    ## Can be used for templates, notification services etc. Some examples given below.\n    ## For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/services/overview/\n    items: {}\n      # slack-token:\n      #   # For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/services/slack/\n\n      # grafana-apiKey:\n      #   # For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/services/grafana/\n\n      # webhooks-github-token:\n\n      # email-username:\n      # email-password:\n        # For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/services/email/\n\n  metrics:\n    # -- Enables prometheus metrics server\n    enabled: false\n    # -- Metrics port\n    port: 9001\n    service:\n      # -- Metrics service type\n      type: ClusterIP\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: \"\"\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port name\n      portName: http-metrics\n    serviceMonitor:\n      # -- Enable a prometheus ServiceMonitor\n      enabled: false\n      # -- Prometheus ServiceMonitor selector\n      selector: {}\n        # prometheus: kube-prometheus\n      # -- Prometheus ServiceMonitor labels\n      additionalLabels: {}\n      # -- Prometheus ServiceMonitor annotations\n      annotations: {}\n      # namespace: monitoring\n      # interval: 30s\n      # scrapeTimeout: 10s\n      # -- Prometheus ServiceMonitor scheme\n      scheme: \"\"\n      # -- Prometheus ServiceMonitor tlsConfig\n      tlsConfig: {}\n      # -- When true, honorLabels preserves the metric’s labels when they collide with the target’s labels.\n      honorLabels: false\n      # -- Prometheus [RelabelConfigs] to apply to samples before scraping\n      relabelings: []\n      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion\n      metricRelabelings: []\n\n  # -- Configures notification services such as slack, email or custom webhook\n  # @default -- See [values.yaml]\n  ## For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/services/overview/\n  notifiers: {}\n    # service.slack: |\n    #   token: $slack-token\n\n  # -- Annotations to be applied to the notifications controller Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the notifications controller Deployment\n  deploymentLabels: {}\n\n  # -- Annotations to be applied to the notifications controller Pods\n  podAnnotations: {}\n\n  # -- Labels to be applied to the notifications controller Pods\n  podLabels: {}\n\n  # -- Resource limits and requests for the notifications controller\n  resources: {}\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n    # requests:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # Notification controller container ports\n  containerPorts:\n    # -- Metrics container port\n    metrics: 9001\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for notifications controller Pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- Notification controller container-level security Context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n      - ALL\n\n  ## Probes for notifications controller Pods (optional)\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Enable Kubernetes liveness probe for notifications controller Pods\n    enabled: false\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n\n  livenessProbe:\n    # -- Enable Kubernetes liveness probe for notifications controller Pods\n    enabled: false\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 10\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed\n    successThreshold: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the application controller\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy to be added to the notifications controller Deployment\n  deploymentStrategy:\n    type: Recreate\n\n  # -- Priority class for the notifications controller pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: true\n\n  serviceAccount:\n    # -- Create notifications controller service account\n    create: true\n    # -- Notification controller service account name\n    name: argocd-notifications-controller\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Labels applied to created service account\n    labels: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  cm:\n    # -- Whether helm chart creates notifications controller config map\n    create: true\n\n  ## Enable this and set the rules: to whatever custom rules you want for the Cluster Role resource.\n  ## Defaults to off\n  clusterRoleRules:\n    # -- List of custom rules for the notifications controller's ClusterRole resource\n    rules: []\n\n  # -- Contains centrally managed global application subscriptions\n  ## For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/subscriptions/\n  subscriptions: []\n    # # subscription for on-sync-status-unknown trigger notifications\n    # - recipients:\n    #   - slack:test2\n    #   - email:test@gmail.com\n    #   triggers:\n    #   - on-sync-status-unknown\n    # # subscription restricted to applications with matching labels only\n    # - recipients:\n    #   - slack:test3\n    #   selector: test=true\n    #   triggers:\n    #   - on-sync-status-unknown\n\n  # -- The notification template is used to generate the notification content\n  ## For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/templates/\n  templates: {}\n    # template.app-deployed: |\n    #   email:\n    #     subject: New version of an application {{.app.metadata.name}} is up and running.\n    #   message: |\n    #     {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\n    #   slack:\n    #     attachments: |\n    #       [{\n    #         \"title\": \"{{ .app.metadata.name}}\",\n    #         \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n    #         \"color\": \"#18be52\",\n    #         \"fields\": [\n    #         {\n    #           \"title\": \"Sync Status\",\n    #           \"value\": \"{{.app.status.sync.status}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Repository\",\n    #           \"value\": \"{{.app.spec.source.repoURL}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Revision\",\n    #           \"value\": \"{{.app.status.sync.revision}}\",\n    #           \"short\": true\n    #         }\n    #         {{range $index, $c := .app.status.conditions}}\n    #         {{if not $index}},{{end}}\n    #         {{if $index}},{{end}}\n    #         {\n    #           \"title\": \"{{$c.type}}\",\n    #           \"value\": \"{{$c.message}}\",\n    #           \"short\": true\n    #         }\n    #         {{end}}\n    #         ]\n    #       }]\n    # template.app-health-degraded: |\n    #   email:\n    #     subject: Application {{.app.metadata.name}} has degraded.\n    #   message: |\n    #     {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n    #     Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n    #   slack:\n    #     attachments: |-\n    #       [{\n    #         \"title\": \"{{ .app.metadata.name}}\",\n    #         \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n    #         \"color\": \"#f4c030\",\n    #         \"fields\": [\n    #         {\n    #           \"title\": \"Sync Status\",\n    #           \"value\": \"{{.app.status.sync.status}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Repository\",\n    #           \"value\": \"{{.app.spec.source.repoURL}}\",\n    #           \"short\": true\n    #         }\n    #         {{range $index, $c := .app.status.conditions}}\n    #         {{if not $index}},{{end}}\n    #         {{if $index}},{{end}}\n    #         {\n    #           \"title\": \"{{$c.type}}\",\n    #           \"value\": \"{{$c.message}}\",\n    #           \"short\": true\n    #         }\n    #         {{end}}\n    #         ]\n    #       }]\n    # template.app-sync-failed: |\n    #   email:\n    #     subject: Failed to sync application {{.app.metadata.name}}.\n    #   message: |\n    #     {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n    #     Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\n    #   slack:\n    #     attachments: |-\n    #       [{\n    #         \"title\": \"{{ .app.metadata.name}}\",\n    #         \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n    #         \"color\": \"#E96D76\",\n    #         \"fields\": [\n    #         {\n    #           \"title\": \"Sync Status\",\n    #           \"value\": \"{{.app.status.sync.status}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Repository\",\n    #           \"value\": \"{{.app.spec.source.repoURL}}\",\n    #           \"short\": true\n    #         }\n    #         {{range $index, $c := .app.status.conditions}}\n    #         {{if not $index}},{{end}}\n    #         {{if $index}},{{end}}\n    #         {\n    #           \"title\": \"{{$c.type}}\",\n    #           \"value\": \"{{$c.message}}\",\n    #           \"short\": true\n    #         }\n    #         {{end}}\n    #         ]\n    #       }]\n    # template.app-sync-running: |\n    #   email:\n    #     subject: Start syncing application {{.app.metadata.name}}.\n    #   message: |\n    #     The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n    #     Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\n    #   slack:\n    #     attachments: |-\n    #       [{\n    #         \"title\": \"{{ .app.metadata.name}}\",\n    #         \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n    #         \"color\": \"#0DADEA\",\n    #         \"fields\": [\n    #         {\n    #           \"title\": \"Sync Status\",\n    #           \"value\": \"{{.app.status.sync.status}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Repository\",\n    #           \"value\": \"{{.app.spec.source.repoURL}}\",\n    #           \"short\": true\n    #         }\n    #         {{range $index, $c := .app.status.conditions}}\n    #         {{if not $index}},{{end}}\n    #         {{if $index}},{{end}}\n    #         {\n    #           \"title\": \"{{$c.type}}\",\n    #           \"value\": \"{{$c.message}}\",\n    #           \"short\": true\n    #         }\n    #         {{end}}\n    #         ]\n    #       }]\n    # template.app-sync-status-unknown: |\n    #   email:\n    #     subject: Application {{.app.metadata.name}} sync status is 'Unknown'\n    #   message: |\n    #     {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n    #     Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n    #     {{if ne .serviceType \"slack\"}}\n    #     {{range $c := .app.status.conditions}}\n    #         * {{$c.message}}\n    #     {{end}}\n    #     {{end}}\n    #   slack:\n    #     attachments: |-\n    #       [{\n    #         \"title\": \"{{ .app.metadata.name}}\",\n    #         \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n    #         \"color\": \"#E96D76\",\n    #         \"fields\": [\n    #         {\n    #           \"title\": \"Sync Status\",\n    #           \"value\": \"{{.app.status.sync.status}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Repository\",\n    #           \"value\": \"{{.app.spec.source.repoURL}}\",\n    #           \"short\": true\n    #         }\n    #         {{range $index, $c := .app.status.conditions}}\n    #         {{if not $index}},{{end}}\n    #         {{if $index}},{{end}}\n    #         {\n    #           \"title\": \"{{$c.type}}\",\n    #           \"value\": \"{{$c.message}}\",\n    #           \"short\": true\n    #         }\n    #         {{end}}\n    #         ]\n    #       }]\n    # template.app-sync-succeeded: |\n    #   email:\n    #     subject: Application {{.app.metadata.name}} has been successfully synced.\n    #   message: |\n    #     {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n    #     Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\n    #   slack:\n    #     attachments: |-\n    #       [{\n    #         \"title\": \"{{ .app.metadata.name}}\",\n    #         \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n    #         \"color\": \"#18be52\",\n    #         \"fields\": [\n    #         {\n    #           \"title\": \"Sync Status\",\n    #           \"value\": \"{{.app.status.sync.status}}\",\n    #           \"short\": true\n    #         },\n    #         {\n    #           \"title\": \"Repository\",\n    #           \"value\": \"{{.app.spec.source.repoURL}}\",\n    #           \"short\": true\n    #         }\n    #         {{range $index, $c := .app.status.conditions}}\n    #         {{if not $index}},{{end}}\n    #         {{if $index}},{{end}}\n    #         {\n    #           \"title\": \"{{$c.type}}\",\n    #           \"value\": \"{{$c.message}}\",\n    #           \"short\": true\n    #         }\n    #         {{end}}\n    #         ]\n    #       }]\n\n  # -- The trigger defines the condition when the notification should be sent\n  ## For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/triggers/\n  triggers: {}\n    # trigger.on-deployed: |\n    #   - description: Application is synced and healthy. Triggered once per commit.\n    #     oncePer: app.status.sync.revision\n    #     send:\n    #     - app-deployed\n    #     when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'\n    # trigger.on-health-degraded: |\n    #   - description: Application has degraded\n    #     send:\n    #     - app-health-degraded\n    #     when: app.status.health.status == 'Degraded'\n    # trigger.on-sync-failed: |\n    #   - description: Application syncing has failed\n    #     send:\n    #     - app-sync-failed\n    #     when: app.status.operationState.phase in ['Error', 'Failed']\n    # trigger.on-sync-running: |\n    #   - description: Application is being synced\n    #     send:\n    #     - app-sync-running\n    #     when: app.status.operationState.phase in ['Running']\n    # trigger.on-sync-status-unknown: |\n    #   - description: Application status is 'Unknown'\n    #     send:\n    #     - app-sync-status-unknown\n    #     when: app.status.sync.status == 'Unknown'\n    # trigger.on-sync-succeeded: |\n    #   - description: Application syncing has succeeded\n    #     send:\n    #     - app-sync-succeeded\n    #     when: app.status.operationState.phase in ['Succeeded']\n    #\n    # For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/triggers/#default-triggers\n    # defaultTriggers: |\n    #   - on-sync-status-unknown\n\n  # Default notifications controller's network policy\n  networkPolicy:\n    # -- Default network policy rules used by notifications controller\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n\ncommitServer:\n  # -- Enable commit server\n  enabled: false\n\n  # -- Commit server name\n  name: commit-server\n\n  # -- Runtime class name for the commit server\n  # @default -- `\"\"` (defaults to global.runtimeClassName)\n  runtimeClassName: \"\"\n\n  ## commit server controller image\n  image:\n    # -- Repository to use for the commit server\n    # @default -- `\"\"` (defaults to global.image.repository)\n    repository: \"\"\n    # -- Tag to use for the commit server\n    # @default -- `\"\"` (defaults to global.image.tag)\n    tag: \"\"\n    # -- Image pull policy for the commit server\n    # @default -- `\"\"` (defaults to global.image.imagePullPolicy)\n    imagePullPolicy: \"\"\n\n  # -- commit server command line flags\n  extraArgs: []\n\n  # -- Environment variables to pass to the commit server\n  extraEnv: []\n    # - name: \"MY_VAR\"\n    #   value: \"value\"\n\n  # -- envFrom to pass to the commit server\n  # @default -- `[]` (See [values.yaml])\n  extraEnvFrom: []\n    # - configMapRef:\n    #     name: config-map-name\n    # - secretRef:\n    #     name: secret-name\n\n  # -- List of extra mounts to add (normally used with extraVolumes)\n  extraVolumeMounts: []\n\n  # -- List of extra volumes to add\n  extraVolumes: []\n\n  metrics:\n    # -- Enables prometheus metrics server\n    enabled: false\n    service:\n      # -- Metrics service type\n      type: ClusterIP\n      # -- Metrics service clusterIP. `None` makes a \"headless service\" (no virtual IP)\n      clusterIP: \"\"\n      # -- Metrics service annotations\n      annotations: {}\n      # -- Metrics service labels\n      labels: {}\n      # -- Metrics service port\n      servicePort: 8087\n      # -- Metrics service port name\n      portName: metrics\n\n  ## commit server service configuration\n  service:\n    # -- commit server service annotations\n    annotations: {}\n    # -- commit server service labels\n    labels: {}\n    # -- commit server service port\n    port: 8086\n    # -- commit server service port name\n    portName: server\n\n  # -- Automount API credentials for the Service Account into the pod.\n  automountServiceAccountToken: false\n\n  serviceAccount:\n    # -- Create commit server service account\n    create: true\n    # -- commit server service account name\n    name: argocd-commit-server\n    # -- Annotations applied to created service account\n    annotations: {}\n    # -- Labels applied to created service account\n    labels: {}\n    # -- Automount API credentials for the Service Account\n    automountServiceAccountToken: true\n\n  # -- Annotations to be added to commit server Deployment\n  deploymentAnnotations: {}\n\n  # -- Labels for the commit server Deployment\n  deploymentLabels: {}\n\n  # -- Annotations for the commit server pods\n  podAnnotations: {}\n\n  # -- Labels for the commit server pods\n  podLabels: {}\n\n  # -- Resource limits and requests for the commit server pods.\n  resources: {}\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n    # requests:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # -- [DNS configuration]\n  dnsConfig: {}\n  # -- Alternative DNS policy for commit server pods\n  dnsPolicy: \"ClusterFirst\"\n\n  # -- commit server container-level security context\n  # @default -- See [values.yaml]\n  containerSecurityContext:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n      - ALL\n    seccompProfile:\n      type: RuntimeDefault\n\n  ## Probes for commit server (optional)\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n  readinessProbe:\n    # -- Enable Kubernetes liveness probe for commit server\n    enabled: true\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 5\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 10\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 1\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n\n  livenessProbe:\n    # -- Enable Kubernetes liveness probe for commit server\n    enabled: true\n    # -- Number of seconds after the container has started before [probe] is initiated\n    initialDelaySeconds: 30\n    # -- How often (in seconds) to perform the [probe]\n    periodSeconds: 30\n    # -- Number of seconds after which the [probe] times out\n    timeoutSeconds: 5\n    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded\n    failureThreshold: 3\n\n  # -- terminationGracePeriodSeconds for container lifecycle hook\n  terminationGracePeriodSeconds: 30\n\n  # -- [Node selector]\n  # @default -- `{}` (defaults to global.nodeSelector)\n  nodeSelector: {}\n\n  # -- [Tolerations] for use with node taints\n  # @default -- `[]` (defaults to global.tolerations)\n  tolerations: []\n\n  # -- Assign custom [affinity] rules\n  # @default -- `{}` (defaults to global.affinity preset)\n  affinity: {}\n\n  # -- Assign custom [TopologySpreadConstraints] rules to the commit server\n  # @default -- `[]` (defaults to global.topologySpreadConstraints)\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment\n  topologySpreadConstraints: []\n    # - maxSkew: 1\n    #   topologyKey: topology.kubernetes.io/zone\n    #   whenUnsatisfiable: DoNotSchedule\n\n  # -- Deployment strategy to be added to the commit server Deployment\n  deploymentStrategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n  # -- Priority class for the commit server pods\n  # @default -- `\"\"` (defaults to global.priorityClassName)\n  priorityClassName: \"\"\n\n  # Default commit server's network policy\n  networkPolicy:\n    # -- Default network policy rules used by commit server\n    # @default -- `false` (defaults to global.networkPolicy.create)\n    create: false\n"
            ],
            "verify": false,
            "version": "9.0.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "jenkins",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "jenkins",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.528.1",
                "chart": "jenkins",
                "first_deployed": 1761906731,
                "last_deployed": 1761906731,
                "name": "jenkins",
                "namespace": "ci-cd",
                "notes": "1. Get your 'admin' user password by running:\n  kubectl exec --namespace ci-cd -it svc/jenkins -c jenkins -- /bin/cat /run/secrets/additional/chart-admin-password \u0026\u0026 echo\n2. Get the Jenkins URL to visit by running these commands in the same shell:\n  export NODE_PORT=$(kubectl get --namespace ci-cd -o jsonpath=\"{.spec.ports[0].nodePort}\" services jenkins)\n  export NODE_IP=$(kubectl get nodes --namespace ci-cd -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n  echo http://$NODE_IP:$NODE_PORT\n\n3. Login with the password from step 1 and the username: admin\n4. Configure security realm and authorization strategy\n5. Use Jenkins Configuration as Code by specifying configScripts in your values.yaml file, see documentation: http://$NODE_IP:$NODE_PORT/configuration-as-code and examples: https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos\n\nFor more information on running Jenkins on Kubernetes, visit:\nhttps://cloud.google.com/solutions/jenkins-on-container-engine\n\nFor more information about Jenkins Configuration as Code, visit:\nhttps://jenkins.io/projects/jcasc/\n\n\nNOTE: Consider using a custom image with pre-installed plugins\n",
                "revision": 1,
                "values": "{\"additionalAgents\":{},\"additionalClouds\":{},\"agent\":{\"TTYEnabled\":false,\"additionalContainers\":[],\"alwaysPullImage\":false,\"annotations\":{},\"args\":\"${computer.jnlpmac} ${computer.name}\",\"command\":null,\"componentName\":\"jenkins-agent\",\"connectTimeout\":100,\"containerCap\":10,\"customJenkinsLabels\":[],\"defaultsProviderTemplate\":\"\",\"directConnection\":false,\"disableDefaultAgent\":false,\"enabled\":true,\"envVars\":[],\"garbageCollection\":{\"enabled\":false,\"namespaces\":\"\",\"timeout\":300},\"hostNetworking\":false,\"idleMinutes\":0,\"image\":{\"registry\":\"\",\"repository\":\"jenkins/inbound-agent\",\"tag\":\"3345.v03dee9b_f88fc-2\"},\"imagePullSecretName\":null,\"inheritYamlMergeStrategy\":false,\"instanceCap\":2147483647,\"jenkinsTunnel\":null,\"jenkinsUrl\":null,\"jnlpregistry\":null,\"kubernetesConnectTimeout\":5,\"kubernetesReadTimeout\":15,\"livenessProbe\":{},\"maxRequestsPerHostStr\":\"32\",\"namespace\":null,\"nodeSelector\":{},\"nodeUsageMode\":\"NORMAL\",\"podLabels\":{},\"podName\":\"default\",\"podRetention\":\"Never\",\"podTemplates\":{},\"privileged\":false,\"resources\":{\"limits\":{\"cpu\":\"512m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"512m\",\"memory\":\"512Mi\"}},\"restrictedPssSecurityContext\":false,\"retentionTimeout\":5,\"runAsGroup\":null,\"runAsUser\":null,\"secretEnvVars\":[],\"serviceAccount\":null,\"showRawYaml\":true,\"sideContainerName\":\"jnlp\",\"skipTlsVerify\":false,\"usageRestricted\":false,\"useDefaultServiceAccount\":true,\"volumes\":[],\"waitForPodSec\":600,\"websocket\":false,\"workingDir\":\"/home/jenkins/agent\",\"workspaceVolume\":{},\"yamlMergeStrategy\":\"override\",\"yamlTemplate\":\"\"},\"awsSecurityGroupPolicies\":{\"enabled\":false,\"policies\":[{\"name\":\"\",\"podSelector\":{},\"securityGroupIds\":[]}]},\"checkDeprecation\":true,\"clusterZone\":\"cluster.local\",\"controller\":{\"JCasC\":{\"authorizationStrategy\":\"loggedInUsersCanDoAnything:\\n  allowAnonymousRead: false\",\"configMapAnnotations\":{},\"configScripts\":{},\"configUrls\":[],\"defaultConfig\":true,\"overwriteConfiguration\":false,\"security\":{\"apiToken\":{\"creationOfLegacyTokenEnabled\":false,\"tokenGenerationOnCreationEnabled\":false,\"usageStatisticsEnabled\":true}},\"securityRealm\":\"local:\\n  allowsSignup: false\\n  enableCaptcha: false\\n  users:\\n  - id: \\\"${chart-admin-username}\\\"\\n    name: \\\"Jenkins Admin\\\"\\n    password: \\\"${chart-admin-password}\\\"\"},\"additionalExistingSecrets\":[],\"additionalPlugins\":[],\"additionalSecrets\":[],\"admin\":{\"createSecret\":true,\"existingSecret\":\"\",\"password\":\"admin\",\"passwordKey\":\"jenkins-admin-password\",\"userKey\":\"jenkins-admin-user\",\"username\":\"admin\"},\"affinity\":{},\"agentListenerEnabled\":true,\"agentListenerExternalTrafficPolicy\":null,\"agentListenerHostPort\":null,\"agentListenerLoadBalancerIP\":null,\"agentListenerLoadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"agentListenerNodePort\":null,\"agentListenerPort\":50000,\"agentListenerServiceAnnotations\":{},\"agentListenerServiceType\":\"ClusterIP\",\"backendconfig\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"labels\":{},\"name\":null,\"spec\":{}},\"cloudName\":\"kubernetes\",\"clusterIp\":null,\"componentName\":\"jenkins-controller\",\"containerEnv\":[],\"containerEnvFrom\":[],\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1000,\"runAsUser\":1000},\"csrf\":{\"defaultCrumbIssuer\":{\"enabled\":true,\"proxyCompatability\":true}},\"customInitContainers\":[],\"customJenkinsLabels\":[],\"disableRememberMe\":false,\"disabledAgentProtocols\":[\"JNLP-connect\",\"JNLP2-connect\"],\"dnsConfig\":{},\"enableRawHtmlMarkupFormatter\":false,\"enableServiceLinks\":false,\"executorMode\":\"NORMAL\",\"existingSecret\":null,\"extraPorts\":[],\"fsGroup\":1000,\"googlePodMonitor\":{\"enabled\":false,\"scrapeEndpoint\":\"/prometheus\",\"scrapeInterval\":\"60s\"},\"healthProbes\":true,\"hostAliases\":[],\"hostNetworking\":false,\"httpsKeyStore\":{\"disableSecretMount\":false,\"enable\":false,\"fileName\":\"keystore.jks\",\"httpPort\":8081,\"jenkinsHttpsJksPasswordSecretKey\":\"https-jks-password\",\"jenkinsHttpsJksPasswordSecretName\":\"\",\"jenkinsHttpsJksSecretKey\":\"jenkins-jks-file\",\"jenkinsHttpsJksSecretName\":\"\",\"jenkinsKeyStoreBase64Encoded\":null,\"password\":\"password\",\"path\":\"/var/jenkins_keystore\"},\"image\":{\"pullPolicy\":\"Always\",\"registry\":\"docker.io\",\"repository\":\"jenkins/jenkins\",\"tag\":null,\"tagLabel\":\"jdk21\"},\"imagePullSecretName\":null,\"ingress\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"hostName\":null,\"labels\":{},\"path\":null,\"paths\":[],\"resourceRootUrl\":null,\"tls\":[]},\"initConfigMap\":null,\"initContainerEnv\":[],\"initContainerEnvFrom\":[],\"initContainerResources\":{},\"initScripts\":{},\"initializeOnce\":false,\"installLatestPlugins\":true,\"installLatestSpecifiedPlugins\":false,\"installPlugins\":[\"kubernetes:4384.v1b_6367f393d9\",\"workflow-aggregator:608.v67378e9d3db_1\",\"git:5.8.0\",\"configuration-as-code:2006.v001a_2ca_6b_574\"],\"javaOpts\":null,\"jenkinsAdminEmail\":null,\"jenkinsHome\":\"/var/jenkins_home\",\"jenkinsOpts\":null,\"jenkinsRef\":\"/usr/share/jenkins/ref\",\"jenkinsUriPrefix\":null,\"jenkinsUrl\":null,\"jenkinsUrlProtocol\":null,\"jenkinsWar\":\"/usr/share/jenkins/jenkins.war\",\"jmxPort\":null,\"legacyRemotingSecurityEnabled\":false,\"lifecycle\":{},\"loadBalancerIP\":null,\"loadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"markupFormatter\":\"plainText\",\"nodePort\":null,\"nodeSelector\":{},\"numExecutors\":0,\"overwritePlugins\":false,\"overwritePluginsFromImage\":true,\"podAnnotations\":{},\"podDisruptionBudget\":{\"annotations\":{},\"apiVersion\":\"policy/v1beta1\",\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"0\"},\"podLabels\":{},\"podSecurityContextOverride\":null,\"priorityClassName\":null,\"probes\":{\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"initialDelaySeconds\":null,\"periodSeconds\":10,\"timeoutSeconds\":5},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"initialDelaySeconds\":null,\"periodSeconds\":10,\"timeoutSeconds\":5},\"startupProbe\":{\"failureThreshold\":12,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"periodSeconds\":10,\"timeoutSeconds\":5}},\"projectNamingStrategy\":\"standard\",\"prometheus\":{\"alertingRulesAdditionalLabels\":{},\"alertingrules\":[],\"enabled\":false,\"metricRelabelings\":[],\"prometheusRuleNamespace\":\"\",\"relabelings\":[],\"scrapeEndpoint\":\"/prometheus\",\"scrapeInterval\":\"60s\",\"serviceMonitorAdditionalLabels\":{},\"serviceMonitorNamespace\":null},\"publishNotReadyAddresses\":null,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"4096Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"256Mi\"}},\"route\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"path\":null},\"runAsUser\":1000,\"schedulerName\":\"\",\"scriptApproval\":[],\"secondaryingress\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"hostName\":null,\"labels\":{},\"paths\":[],\"tls\":null},\"secretClaims\":[],\"securityContextCapabilities\":{},\"serviceAnnotations\":{},\"serviceEnabled\":true,\"serviceExternalTrafficPolicy\":null,\"serviceLabels\":{},\"servicePort\":8080,\"serviceType\":\"NodePort\",\"shareProcessNamespace\":false,\"sidecars\":{\"additionalSidecarContainers\":[],\"configAutoReload\":{\"additionalVolumeMounts\":[],\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true},\"enabled\":true,\"env\":[],\"envFrom\":[],\"folder\":\"/var/jenkins_home/casc_configs\",\"image\":{\"registry\":\"docker.io\",\"repository\":\"kiwigrid/k8s-sidecar\",\"tag\":\"1.30.7\"},\"imagePullPolicy\":\"IfNotPresent\",\"logging\":{\"configuration\":{\"backupCount\":3,\"formatter\":\"JSON\",\"logLevel\":\"INFO\",\"logToConsole\":true,\"logToFile\":false,\"maxBytes\":1024,\"override\":false}},\"reqRetryConnect\":10,\"resources\":{},\"scheme\":\"http\",\"skipTlsVerify\":false,\"sleepTime\":null,\"sshTcpPort\":1044}},\"statefulSetAnnotations\":{},\"statefulSetLabels\":{},\"targetPort\":8080,\"terminationGracePeriodSeconds\":null,\"terminationMessagePath\":null,\"terminationMessagePolicy\":null,\"testEnabled\":true,\"tolerations\":[],\"topologySpreadConstraints\":{},\"updateStrategy\":{},\"usePodSecurityContext\":true},\"credentialsId\":null,\"extraLabels\":{},\"fullnameOverride\":null,\"helmtest\":{\"bats\":{\"image\":{\"registry\":\"docker.io\",\"repository\":\"bats/bats\",\"tag\":\"1.12.0\"}}},\"kubernetesURL\":\"https://kubernetes.default\",\"nameOverride\":null,\"namespaceOverride\":null,\"networkPolicy\":{\"apiVersion\":\"networking.k8s.io/v1\",\"enabled\":false,\"externalAgents\":{\"except\":[],\"ipCIDR\":null},\"internalAgents\":{\"allowed\":true,\"namespaceLabels\":{},\"podLabels\":{}}},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"dataSource\":{},\"enabled\":true,\"existingClaim\":null,\"labels\":{},\"mounts\":[],\"size\":\"8Gi\",\"storageClass\":null,\"subPath\":null,\"volumes\":[]},\"rbac\":{\"create\":true,\"readSecrets\":false,\"useOpenShiftNonRootSCC\":false},\"renderHelmLabels\":true,\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"extraLabels\":{},\"imagePullSecretName\":null,\"name\":null},\"serviceAccountAgent\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":false,\"extraLabels\":{},\"imagePullSecretName\":null,\"name\":null}}",
                "version": "5.8.104"
              }
            ],
            "name": "jenkins",
            "namespace": "ci-cd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "./charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# Default values for jenkins.\n# This is a YAML-formatted file.\n# Declare name/value pairs to be passed into your templates.\n# name: value\n\n## Overrides for generated resource names\n# See templates/_helpers.tpl\n# -- Override the resource name prefix\n# @default -- `Chart.Name`\nnameOverride:\n# -- Override the full resource names\n# @default -- `jenkins-(release-name)` or `jenkins` if the release-name is `jenkins`\nfullnameOverride:\n# -- Override the deployment namespace\n# @default -- `Release.Namespace`\nnamespaceOverride:\n\n# For FQDN resolving of the controller service. Change this value to match your existing configuration.\n# ref: https://github.com/kubernetes/dns/blob/master/docs/specification.md\n# -- Override the cluster name for FQDN resolving\nclusterZone: \"cluster.local\"\n\n# -- The URL of the Kubernetes API server\nkubernetesURL: \"https://kubernetes.default\"\n\n# -- The Jenkins credentials to access the Kubernetes API server. For the default cluster it is not needed.\ncredentialsId:\n\n# -- Enables rendering of the helm.sh/chart label to the annotations\nrenderHelmLabels: true\n\n# -- Configures extra labels for the agent all objects\nextraLabels: {}\n\ncontroller:\n  # -- Used for label app.kubernetes.io/component\n  componentName: \"jenkins-controller\"\n  image:\n    # -- Controller image registry\n    registry: \"docker.io\"\n    # -- Controller image repository\n    repository: \"jenkins/jenkins\"\n\n    # -- Controller image tag override; i.e., tag: \"2.440.1-jdk21\"\n    tag:\n\n    # -- Controller image tag label\n    tagLabel: jdk21\n    # -- Controller image pull policy\n    pullPolicy: \"Always\"\n  # -- Controller image pull secret\n  imagePullSecretName:\n  # -- Lifecycle specification for controller-container\n  lifecycle: {}\n  #  postStart:\n  #    exec:\n  #      command:\n  #      - \"uname\"\n  #      - \"-a\"\n\n  # -- Disable use of remember me\n  disableRememberMe: false\n\n  # -- Set Number of executors\n  numExecutors: 0\n\n  # -- Sets the executor mode of the Jenkins node. Possible values are \"NORMAL\" or \"EXCLUSIVE\"\n  executorMode: \"NORMAL\"\n\n  # -- Append Jenkins labels to the controller\n  customJenkinsLabels: []\n\n  hostNetworking: false\n\n  # When enabling LDAP or another non-Jenkins identity source, the built-in admin account will no longer exist.\n  # If you disable the non-Jenkins identity store and instead use the Jenkins internal one,\n  # you should revert controller.admin.username to your preferred admin user:\n  admin:\n    # -- Admin username created as a secret if `controller.admin.createSecret` is true\n    username: \"admin\"\n    # -- Admin password created as a secret if `controller.admin.createSecret` is true\n    # @default -- \u003crandom password\u003e\n    password: \"admin\"\n\n    # -- The key in the existing admin secret containing the username\n    userKey: jenkins-admin-user\n    # -- The key in the existing admin secret containing the password\n    passwordKey: jenkins-admin-password\n\n    # The default configuration uses this secret to configure an admin user\n    # If you don't need that user or use a different security realm, then you can disable it\n    # -- Create secret for admin user\n    createSecret: true\n\n    # -- The name of an existing secret containing the admin credentials\n    existingSecret: \"\"\n  # -- Email address for the administrator of the Jenkins instance\n  jenkinsAdminEmail:\n\n  # This value should not be changed unless you use your custom image of jenkins or any derived from.\n  # If you want to use Cloudbees Jenkins Distribution docker, you should set jenkinsHome: \"/var/cloudbees-jenkins-distribution\"\n  # -- Custom Jenkins home path\n  jenkinsHome: \"/var/jenkins_home\"\n\n  # This value should not be changed unless you use your custom image of jenkins or any derived from.\n  # If you want to use Cloudbees Jenkins Distribution docker, you should set jenkinsRef: \"/usr/share/cloudbees-jenkins-distribution/ref\"\n  # -- Custom Jenkins reference path\n  jenkinsRef: \"/usr/share/jenkins/ref\"\n\n  # Path to the jenkins war file which is used by jenkins-plugin-cli.\n  jenkinsWar: \"/usr/share/jenkins/jenkins.war\"\n  # Override the default arguments passed to the war\n  # overrideArgs:\n  #   - --httpPort=8080\n\n  # -- Resource allocation (Requests and Limits)\n  resources:\n    requests:\n      cpu: \"50m\"\n      memory: \"256Mi\"\n    limits:\n      cpu: \"2000m\"\n      memory: \"4096Mi\"\n\n  # Share process namespace to allow sidecar containers to interact with processes in other containers in the same pod\n  shareProcessNamespace: false\n\n  # Service links might cause issue if running in a namespace with a large amount of services\n  # that might cause a slow startup when plugins are copied from ref to volume\n  # Set to true to keep previous behavior\n  # See https://github.com/kubernetes/kubernetes/issues/121787\n  enableServiceLinks: false\n\n  # Overrides the init container default values\n  # -- Resources allocation (Requests and Limits) for Init Container\n  initContainerResources: {}\n  # initContainerResources:\n  #   requests:\n  #     cpu: \"50m\"\n  #     memory: \"256Mi\"\n  #   limits:\n  #     cpu: \"2000m\"\n  #     memory: \"4096Mi\"\n  # -- Environment variable sources for Init Container\n  initContainerEnvFrom: []\n\n  # useful for i.e., http_proxy\n  # -- Environment variables for Init Container\n  initContainerEnv: []\n  # initContainerEnv:\n  #   - name: http_proxy\n  #     value: \"http://192.168.64.1:3128\"\n\n  # -- Environment variable sources for Jenkins Container\n  containerEnvFrom: []\n\n  # -- Environment variables for Jenkins Container\n  containerEnv: []\n  #   - name: http_proxy\n  #     value: \"http://192.168.64.1:3128\"\n\n  # Set min/max heap here if needed with \"-Xms512m -Xmx512m\"\n  # -- Append to `JAVA_OPTS` env var\n  javaOpts:\n  # -- Append to `JENKINS_OPTS` env var\n  jenkinsOpts:\n\n  # If you are using the ingress definitions provided by this chart via the `controller.ingress` block,\n  # the configured hostname will be the ingress hostname starting with `https://`\n  # or `http://` depending on the `tls` configuration.\n  # The Protocol can be overwritten by specifying `controller.jenkinsUrlProtocol`.\n  # -- Set protocol for Jenkins URL; `https` if `controller.ingress.tls`, `http` otherwise\n  jenkinsUrlProtocol:\n\n  # -- Set Jenkins URL if you are not using the ingress definitions provided by the chart\n  jenkinsUrl:\n\n  # If you set this prefix and use ingress controller, then you might want to set the ingress path below\n  # I.e., \"/jenkins\"\n  # -- Root URI Jenkins will be served on\n  jenkinsUriPrefix:\n\n  # -- Enable pod security context (must be `true` if podSecurityContextOverride, runAsUser or fsGroup are set)\n  usePodSecurityContext: true\n\n  # Note that `runAsUser`, `fsGroup`, and `securityContextCapabilities` are\n  # being deprecated and replaced by `podSecurityContextOverride`.\n  # Set runAsUser to 1000 to let Jenkins run as non-root user 'jenkins', which exists in 'jenkins/jenkins' docker image.\n  # When configuring runAsUser to a different value than 0 also set fsGroup to the same value:\n  # -- Deprecated in favor of `controller.podSecurityContextOverride`. uid that jenkins runs with.\n  runAsUser: 1000\n\n  # -- Deprecated in favor of `controller.podSecurityContextOverride`. uid that will be used for persistent volume.\n  fsGroup: 1000\n\n  # If you have PodSecurityPolicies that require dropping of capabilities as suggested by CIS K8s benchmark, put them here\n  # securityContextCapabilities:\n  #  drop:\n  #    - NET_RAW\n  securityContextCapabilities: {}\n\n  # In the case of mounting an ext4 filesystem, it might be desirable to use `supplementalGroups` instead of `fsGroup` in\n  # the `securityContext` block: https://github.com/kubernetes/kubernetes/issues/67014#issuecomment-589915496\n  # podSecurityContextOverride:\n  #   runAsUser: 1000\n  #   runAsNonRoot: true\n  #   supplementalGroups: [1000]\n  #   capabilities: {}\n  # -- Completely overwrites the contents of the pod security context, ignoring the values provided for `runAsUser`, `fsGroup`, and `securityContextCapabilities`\n  podSecurityContextOverride: ~\n\n  # -- Allow controlling the securityContext for the jenkins container\n  containerSecurityContext:\n    runAsUser: 1000\n    runAsGroup: 1000\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n\n  # -- enable or disable the controller k8s service\n  serviceEnabled: true\n\n  # For minikube, set this to NodePort, elsewhere uses LoadBalancer\n  # Use ClusterIP if your setup includes ingress controller\n  # -- k8s service type\n  serviceType: NodePort\n\n  # -- k8s service clusterIP. Only used if serviceType is ClusterIP\n  clusterIp:\n  # -- k8s service port\n  servicePort: 8080\n  # -- k8s target port\n  targetPort: 8080\n  # -- k8s node port. Only used if serviceType is NodePort\n  nodePort:\n\n  # Use Local to preserve the client source IP and avoids a second hop for LoadBalancer and NodePort type services,\n  # but risks potentially imbalanced traffic spreading.\n  serviceExternalTrafficPolicy:\n\n  # If enabled, the controller is available through its service before its pods reports ready. Makes startup screen and\n  # auto-reload on restart feature possible.\n  publishNotReadyAddresses:\n\n  # -- Jenkins controller service annotations\n  serviceAnnotations: {}\n  # -- Jenkins controller custom labels for the StatefulSet\n  statefulSetLabels: {}\n  #   foo: bar\n  #   bar: foo\n  # -- Labels for the Jenkins controller-service\n  serviceLabels: {}\n  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https\n\n  # Put labels on Jenkins controller pod\n  # -- Custom Pod labels (an object with `label-key: label-value` pairs)\n  podLabels: {}\n\n  # Enable Kubernetes Startup, Liveness and Readiness Probes\n  # if Startup Probe is supported, enable it too\n  # ~ 2 minutes to allow Jenkins to restart when upgrading plugins. Set ReadinessTimeout to be shorter than LivenessTimeout.\n  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes\n  # -- Enable Kubernetes Probes configuration configured in `controller.probes`\n  healthProbes: true\n\n  probes:\n    startupProbe:\n      # -- Set the failure threshold for the startup probe\n      failureThreshold: 12\n      httpGet:\n        # -- Set the Pod's HTTP path for the startup probe\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        # -- Set the Pod's HTTP port to use for the startup probe\n        port: http\n      # -- Set the time interval between two startup probes executions in seconds\n      periodSeconds: 10\n      # -- Set the timeout for the startup probe in seconds\n      timeoutSeconds: 5\n\n    livenessProbe:\n      # -- Set the failure threshold for the liveness probe\n      failureThreshold: 5\n      httpGet:\n        # -- Set the Pod's HTTP path for the liveness probe\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        # -- Set the Pod's HTTP port to use for the liveness probe\n        port: http\n      # -- Set the time interval between two liveness probes executions in seconds\n      periodSeconds: 10\n      # -- Set the timeout for the liveness probe in seconds\n      timeoutSeconds: 5\n\n      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use \"initialDelaySeconds\" instead.\n      # It delays the initial liveness probe while Jenkins is starting\n      # -- Set the initial delay for the liveness probe in seconds\n      initialDelaySeconds:\n\n    readinessProbe:\n      # -- Set the failure threshold for the readiness probe\n      failureThreshold: 3\n      httpGet:\n        # -- Set the Pod's HTTP path for the liveness probe\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        # -- Set the Pod's HTTP port to use for the readiness probe\n        port: http\n      # -- Set the time interval between two readiness probes executions in seconds\n      periodSeconds: 10\n      # -- Set the timeout for the readiness probe in seconds\n      timeoutSeconds: 5\n\n      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use \"initialDelaySeconds\" instead.\n      # It delays the initial readiness probe while Jenkins is starting\n      # -- Set the initial delay for the readiness probe in seconds\n      initialDelaySeconds:\n\n  # PodDisruptionBudget config\n  podDisruptionBudget:\n    # ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n\n    # -- Enable Kubernetes Pod Disruption Budget configuration\n    enabled: false\n\n    # For Kubernetes v1.5+, use 'policy/v1beta1'\n    # For Kubernetes v1.21+, use 'policy/v1'\n    # -- Policy API version\n    apiVersion: \"policy/v1beta1\"\n\n    annotations: {}\n    labels: {}\n    # -- Number of pods that can be unavailable. Either an absolute number or a percentage\n    maxUnavailable: \"0\"\n\n  # -- Create Agent listener service\n  agentListenerEnabled: true\n  # -- Listening port for agents\n  agentListenerPort: 50000\n  # -- Host port to listen for agents\n  agentListenerHostPort:\n  # -- Node port to listen for agents\n  agentListenerNodePort:\n\n  # ref: https://kubernetes.io/docs/concepts/services-networking/service/#traffic-policies\n  # -- Traffic Policy of for the agentListener service\n  agentListenerExternalTrafficPolicy:\n  # -- Allowed inbound IP for the agentListener service\n  agentListenerLoadBalancerSourceRanges:\n    - 0.0.0.0/0\n  # -- Disabled agent protocols\n  disabledAgentProtocols:\n    - JNLP-connect\n    - JNLP2-connect\n  csrf:\n    defaultCrumbIssuer:\n      # -- Enable the default CSRF Crumb issuer\n      enabled: true\n      # -- Enable proxy compatibility\n      proxyCompatability: true\n\n  # Kubernetes service type for the JNLP agent service\n  # agentListenerServiceType is the Kubernetes Service type for the JNLP agent service,\n  # either 'LoadBalancer', 'NodePort', or 'ClusterIP'\n  # Note if you set this to 'LoadBalancer', you *must* define annotations to secure it. By default,\n  # this will be an external load balancer and allowing inbound 0.0.0.0/0, a HUGE\n  # security risk: https://github.com/kubernetes/charts/issues/1341\n  # -- Defines how to expose the agentListener service\n  agentListenerServiceType: \"ClusterIP\"\n\n  # -- Annotations for the agentListener service\n  agentListenerServiceAnnotations: {}\n\n  # Optionally, assign an IP to the LoadBalancer agentListenerService LoadBalancer\n  # GKE users: only regional static IPs will work for Service Load balancer.\n  # -- Static IP for the agentListener LoadBalancer\n  agentListenerLoadBalancerIP:\n\n  # -- Whether legacy remoting security should be enabled\n  legacyRemotingSecurityEnabled: false\n\n  # Example of a 'LoadBalancer'-type agent listener with annotations securing it\n  # agentListenerServiceType: LoadBalancer\n  # agentListenerServiceAnnotations:\n  #   service.beta.kubernetes.io/aws-load-balancer-internal: \"True\"\n  #   service.beta.kubernetes.io/load-balancer-source-ranges: \"172.0.0.0/8, 10.0.0.0/8\"\n\n  # LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to\n  # set allowed inbound rules on the security group assigned to the controller load balancer\n  # -- Allowed inbound IP addresses\n  loadBalancerSourceRanges:\n    - 0.0.0.0/0\n\n  # -- Optionally assign a known public LB IP\n  loadBalancerIP:\n\n  # Optionally configure a JMX port. This requires additional javaOpts, for example,\n  # javaOpts: \u003e\n  #   -Dcom.sun.management.jmxremote.port=4000\n  #   -Dcom.sun.management.jmxremote.authenticate=false\n  #   -Dcom.sun.management.jmxremote.ssl=false\n  # jmxPort: 4000\n  # -- Open a port, for JMX stats\n  jmxPort:\n\n  # -- Optionally configure other ports to expose in the controller container\n  extraPorts: []\n  # - name: BuildInfoProxy\n  #   port: 9000\n  #   targetPort: 9010 (Optional: Use to explicitly set targetPort if different from port)\n\n  # Plugins will be installed during Jenkins controller start\n  # -- List of Jenkins plugins to install. If you don't want to install plugins, set it to `false`\n  installPlugins:\n    - kubernetes:4384.v1b_6367f393d9\n    - workflow-aggregator:608.v67378e9d3db_1\n    - git:5.8.0\n    - configuration-as-code:2006.v001a_2ca_6b_574\n\n  # If set to false, Jenkins will download the minimum required version of all dependencies.\n  # -- Download the minimum required version or latest version of all dependencies\n  installLatestPlugins: true\n\n  # -- Set to true to download the latest version of any plugin that is requested to have the latest version\n  installLatestSpecifiedPlugins: false\n\n  # -- List of plugins to install in addition to those listed in controller.installPlugins\n  additionalPlugins: []\n\n  # Without this; whenever the controller gets restarted (Evicted, etc.) it will fetch plugin updates that have the potential to cause breakage.\n  # Note that for this to work, `persistence.enabled` needs to be set to `true`\n  # -- Initialize only on first installation. Ensures plugins do not get updated inadvertently. Requires `persistence.enabled` to be set to `true`\n  initializeOnce: false\n\n  # Enable to always override the installed plugins with the values of 'controller.installPlugins' on upgrade or redeployment.\n  # -- Overwrite installed plugins on start\n  overwritePlugins: false\n\n  # Configures if plugins bundled with `controller.image` should be overwritten with the values of 'controller.installPlugins' on upgrade or redeployment.\n  # -- Overwrite plugins that are already installed in the controller image\n  overwritePluginsFromImage: true\n\n  # Configures the restrictions for naming projects. Set this key to null or empty to skip it in the default config.\n  projectNamingStrategy: standard\n\n  # Useful with ghprb plugin. The OWASP plugin is not installed by default, please update controller.installPlugins.\n  # -- Enable HTML parsing using OWASP Markup Formatter Plugin (antisamy-markup-formatter)\n  enableRawHtmlMarkupFormatter: false\n\n  # This is ignored if enableRawHtmlMarkupFormatter is true\n  # -- Yaml of the markup formatter to use\n  markupFormatter: plainText\n\n  # Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval\n  # -- List of groovy functions to approve\n  scriptApproval: []\n  #  - \"method groovy.json.JsonSlurperClassic parseText java.lang.String\"\n  #  - \"new groovy.json.JsonSlurperClassic\"\n\n  # -- Map of groovy init scripts to be executed during Jenkins controller start\n  initScripts: {}\n  #  test: |-\n  #    print 'adding global pipeline libraries, register properties, bootstrap jobs...'\n  # -- Name of the existing ConfigMap that contains init scripts\n  initConfigMap:\n\n  # 'name' is a name of an existing secret in the same namespace as jenkins,\n  # 'keyName' is the name of one of the keys inside the current secret.\n  # the 'name' and 'keyName' are concatenated with a '-' in between, so for example:\n  # an existing secret \"secret-credentials\" and a key inside it named \"github-password\" should be used in JCasC as ${secret-credentials-github-password}\n  # 'name' and 'keyName' must be lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-',\n  # and must start and end with an alphanumeric character (e.g. 'my-name', or '123-abc')\n  # existingSecret existing secret \"secret-credentials\" and a key inside it named \"github-username\" should be used in JCasC as ${github-username}\n  # When using existingSecret no need to specify the keyName under additionalExistingSecrets.\n  existingSecret:\n\n  # -- List of additional existing secrets to mount\n  additionalExistingSecrets: []\n  # ref: https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/docs/features/secrets.adoc#kubernetes-secrets\n  # additionalExistingSecrets:\n  #  - name: secret-name-1\n  #    keyName: username\n  #  - name: secret-name-1\n  #    keyName: password\n\n  # -- List of additional secrets to create and mount\n  additionalSecrets: []\n  # ref: https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/docs/features/secrets.adoc#kubernetes-secrets\n  # additionalSecrets:\n  #  - name: nameOfSecret\n  #    value: secretText\n\n  # Generate SecretClaim resources to create Kubernetes secrets from HashiCorp Vault using kube-vault-controller.\n  # 'name' is the name of the secret that will be created in Kubernetes. The Jenkins fullname is prepended to this value.\n  # 'path' is the fully qualified path to the secret in Vault\n  # 'type' is an optional Kubernetes secret type. The default is 'Opaque'\n  # 'renew' is an optional secret renewal time in seconds\n  # -- List of `SecretClaim` resources to create\n  secretClaims: []\n  # - name: secretName        # required\n  #   path: testPath          # required\n  #   type: kubernetes.io/tls # optional\n  #   renew: 60               # optional\n\n  # -- Name of default cloud configuration.\n  cloudName: \"kubernetes\"\n\n  # Below is the implementation of Jenkins Configuration as Code. Add a key under configScripts for each configuration area,\n  # where each corresponds to a plugin or section of the UI. Each key (prior to | character) is just a label, and can be any value.\n  # Keys are only used to give the section a meaningful name. The only restriction is they may only contain RFC 1123 \\ DNS label\n  # characters: lowercase letters, numbers, and hyphens. The keys become the name of a configuration yaml file on the controller in\n  # /var/jenkins_home/casc_configs (by default) and will be processed by the Configuration as Code Plugin. The lines after each |\n  # become the content of the configuration yaml file. The first line after this is a JCasC root element, e.g., jenkins, credentials,\n  # etc. Best reference is https://\u003cjenkins_url\u003e/configuration-as-code/reference. The example below creates a welcome message:\n  JCasC:\n    # -- Enables default Jenkins configuration via configuration as code plugin\n    defaultConfig: true\n\n    # If true, the init container deletes all the plugin config files and Jenkins Config as Code overwrites any existing configuration\n    # -- Whether Jenkins Config as Code should overwrite any existing configuration\n    overwriteConfiguration: false\n    # -- Remote URLs for configuration files.\n    configUrls: []\n    # - https://acme.org/jenkins.yaml\n    # -- List of Jenkins Config as Code scripts\n    configScripts: {}\n    #  welcome-message: |\n    #    jenkins:\n    #      systemMessage: Welcome to our CI\\CD server. This Jenkins is configured and managed 'as code'.\n\n    # Allows adding to the top-level security JCasC section. For legacy purposes, by default, the chart includes apiToken configurations\n    # -- Jenkins Config as Code security-section\n    security:\n      apiToken:\n        creationOfLegacyTokenEnabled: false\n        tokenGenerationOnCreationEnabled: false\n        usageStatisticsEnabled: true\n\n    # Ignored if securityRealm is defined in controller.JCasC.configScripts\n    # -- Jenkins Config as Code Security Realm-section\n    securityRealm: |-\n      local:\n        allowsSignup: false\n        enableCaptcha: false\n        users:\n        - id: \"${chart-admin-username}\"\n          name: \"Jenkins Admin\"\n          password: \"${chart-admin-password}\"\n\n    # Ignored if authorizationStrategy is defined in controller.JCasC.configScripts\n    # -- Jenkins Config as Code Authorization Strategy-section\n    authorizationStrategy: |-\n      loggedInUsersCanDoAnything:\n        allowAnonymousRead: false\n\n    # -- Annotations for the JCasC ConfigMap\n    configMapAnnotations: {}\n\n  # -- Custom init-container specification in raw-yaml format\n  customInitContainers: []\n  # - name: custom-init\n  #   image: \"alpine:3\"\n  #   imagePullPolicy: Always\n  #   command: [ \"uname\", \"-a\" ]\n\n  sidecars:\n    configAutoReload:\n      # If enabled: true, Jenkins Configuration as Code will be reloaded on-the-fly without a reboot.\n      # If false or not-specified, JCasC changes will cause a reboot and will only be applied at the subsequent start-up.\n      # Auto-reload uses the http://\u003cjenkins_url\u003e/reload-configuration-as-code endpoint to reapply config when changes to\n      # the configScripts are detected.\n      # -- Enable Jenkins Config as Code auto-reload\n      enabled: true\n      image:\n        # -- Registry for the image that triggers the reload\n        registry: docker.io\n        # -- Repository of the image that triggers the reload\n        repository: kiwigrid/k8s-sidecar\n        # -- Tag for the image that triggers the reload\n        tag: 1.30.7\n      imagePullPolicy: IfNotPresent\n      resources:\n        {}\n        #   limits:\n        #     cpu: 100m\n        #     memory: 100Mi\n        #   requests:\n        #     cpu: 50m\n        #     memory: 50Mi\n      # -- Enables additional volume mounts for the config auto-reload container\n      additionalVolumeMounts:\n        []\n        #   - name: auto-reload-config\n        #     mountPath: /var/config/logger\n        #   - name: auto-reload-logs\n        #     mountPath: /var/log/auto_reload\n      # -- Config auto-reload logging settings\n      logging:\n        # See default settings https://github.com/kiwigrid/k8s-sidecar/blob/master/src/logger.py\n        configuration:\n          # -- Enables custom log config utilizing using the settings below.\n          override: false\n          logLevel: INFO\n          formatter: JSON\n          logToConsole: true\n          logToFile: false\n          maxBytes: 1024\n          backupCount: 3\n\n      # -- The scheme to use when connecting to the Jenkins configuration as code endpoint\n      scheme: http\n      # -- Skip TLS verification when connecting to the Jenkins configuration as code endpoint\n      skipTlsVerify: false\n\n      # -- How many connection-related errors to retry on\n      reqRetryConnect: 10\n      # -- How many seconds to wait before updating config-maps/secrets (sets METHOD=SLEEP on the sidecar)\n      sleepTime:\n\n      # -- Environment variable sources for the Jenkins Config as Code auto-reload container\n      envFrom: []\n      # -- Environment variables for the Jenkins Config as Code auto-reload container\n      env: []\n      #   - name: REQ_TIMEOUT\n      #     value: \"30\"\n\n      # SSH port value can be set to any unused TCP port. The default, 1044, is a non-standard SSH port that has been chosen at random.\n      # This is only used to reload JCasC config from the sidecar container running in the Jenkins controller pod.\n      # This TCP port will not be open in the pod (unless you specifically configure this), so Jenkins will not be\n      # accessible via SSH from outside the pod. Note if you use non-root pod privileges (runAsUser \u0026 fsGroup),\n      # this must be \u003e 1024:\n      sshTcpPort: 1044\n      # folder in the pod that should hold the collected dashboards:\n      folder: \"/var/jenkins_home/casc_configs\"\n\n      # If specified, the sidecar will search for JCasC config-maps inside this namespace.\n      # Otherwise, the namespace in which the sidecar is running will be used.\n      # It's also possible to specify ALL to search in all namespaces:\n      # searchNamespace:\n      # -- Enable container security context\n      containerSecurityContext:\n        readOnlyRootFilesystem: true\n        allowPrivilegeEscalation: false\n\n    # -- Configures additional sidecar container(s) for the Jenkins controller\n    additionalSidecarContainers: []\n    ## The example below runs the client for https://smee.io as sidecar container next to Jenkins,\n    ## that allows triggering build behind a secure firewall.\n    ## https://jenkins.io/blog/2019/01/07/webhook-firewalls/#triggering-builds-with-webhooks-behind-a-secure-firewall\n    ##\n    ## Note: To use it you should go to https://smee.io/new and update the url to the generated one.\n    # - name: smee\n    #   image: docker.io/twalter/smee-client:1.0.2\n    #   args: [\"--port\", \"{{ .Values.controller.servicePort }}\", \"--path\", \"/github-webhook/\", \"--url\", \"https://smee.io/new\"]\n    #   resources:\n    #     limits:\n    #       cpu: 50m\n    #       memory: 128Mi\n    #     requests:\n    #       cpu: 10m\n    #       memory: 32Mi\n\n  # -- Name of the Kubernetes scheduler to use\n  schedulerName: \"\"\n\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature\n  # -- Toleration labels for pod assignment\n  tolerations: []\n  # -- Set TerminationGracePeriodSeconds\n  terminationGracePeriodSeconds:\n  # -- Set the termination message path\n  terminationMessagePath:\n  # -- Set the termination message policy\n  terminationMessagePolicy:\n\n  # -- Affinity settings\n  affinity: {}\n\n  # Leverage a priorityClass to ensure your pods survive resource shortages\n  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  # -- The name of a `priorityClass` to apply to the controller pod\n  priorityClassName:\n\n  # -- Annotations for controller pod\n  podAnnotations: {}\n  # -- Annotations for controller StatefulSet\n  statefulSetAnnotations: {}\n\n  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  # -- Update strategy for StatefulSet\n  updateStrategy: {}\n\n  # -- Topology spread constraints\n  topologySpreadConstraints: {}\n\n  # -- DNS config for the pod\n  dnsConfig: {}\n\n  ingress:\n    # -- Enables ingress\n    enabled: false\n\n    # Override for the default paths that map requests to the backend\n    # -- Override for the default Ingress paths\n    paths: []\n    # - backend:\n    #     serviceName: ssl-redirect\n    #     servicePort: use-annotation\n    # - backend:\n    #     serviceName: \u003e-\n    #       {{ template \"jenkins.fullname\" . }}\n    #     # Don't use string here, use only integer value!\n    #     servicePort: 8080\n\n    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'\n    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'\n    # -- Ingress API version\n    apiVersion: \"extensions/v1beta1\"\n    # -- Ingress labels\n    labels: {}\n    # -- Ingress annotations\n    annotations:\n      {}\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\n    # ingressClassName: nginx\n\n    # Set this path to jenkinsUriPrefix above or use annotations to rewrite path\n    # -- Ingress path\n    path:\n\n    # configures the hostname e.g. jenkins.example.com\n    # -- Ingress hostname\n    hostName:\n    # -- Hostname to serve assets from\n    resourceRootUrl:\n    # -- Ingress TLS configuration\n    tls: []\n    # - secretName: jenkins.cluster.local\n    #   hosts:\n    #     - jenkins.cluster.local\n\n  # often you want to have your controller all locked down and private,\n  # but you still want to get webhooks from your SCM\n  # A secondary ingress will let you expose different urls\n  # with a different configuration\n  secondaryingress:\n    enabled: false\n    # paths you want forwarded to the backend\n    # ex /github-webhook\n    paths: []\n    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'\n    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'\n    apiVersion: \"extensions/v1beta1\"\n    labels: {}\n    annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\n    # ingressClassName: nginx\n    # configures the hostname e.g., jenkins-external.example.com\n    hostName:\n    tls:\n    # - secretName: jenkins-external.example.com\n    #   hosts:\n    #     - jenkins-external.example.com\n\n  # If you're running on GKE and need to configure a backendconfig\n  # to finish ingress setup, use the following values.\n  # Docs: https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig\n  backendconfig:\n    # -- Enables backendconfig\n    enabled: false\n    # -- backendconfig API version\n    apiVersion: \"extensions/v1beta1\"\n    # -- backendconfig name\n    name:\n    # -- backendconfig labels\n    labels: {}\n    # -- backendconfig annotations\n    annotations: {}\n    # -- backendconfig spec\n    spec: {}\n\n  # Openshift route\n  route:\n    # -- Enables openshift route\n    enabled: false\n    # -- Route labels\n    labels: {}\n    # -- Route annotations\n    annotations: {}\n    # -- Route path\n    path:\n\n  # -- Allows for adding entries to Pod /etc/hosts\n  hostAliases: []\n  # ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  # hostAliases:\n  # - ip: 192.168.50.50\n  #   hostnames:\n  #     - something.local\n  # - ip: 10.0.50.50\n  #   hostnames:\n  #     - other.local\n\n  # Expose Prometheus metrics\n  prometheus:\n    # If enabled, add the prometheus plugin to the list of plugins to install\n    # https://plugins.jenkins.io/prometheus\n\n    # -- Enables prometheus service monitor\n    enabled: false\n    # -- Additional labels to add to the service monitor object\n    serviceMonitorAdditionalLabels: {}\n    # -- Set a custom namespace where to deploy ServiceMonitor resource\n    serviceMonitorNamespace:\n    # -- How often prometheus should scrape metrics\n    scrapeInterval: 60s\n\n    # Defaults to the default endpoint used by the prometheus plugin\n    # -- The endpoint prometheus should get metrics from\n    scrapeEndpoint: /prometheus\n\n    # See here: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n    # The `groups` root object is added by default, add the rule entries\n    # -- Array of prometheus alerting rules\n    alertingrules: []\n    # -- Additional labels to add to the PrometheusRule object\n    alertingRulesAdditionalLabels: {}\n    # -- Set a custom namespace where to deploy PrometheusRule resource\n    prometheusRuleNamespace: \"\"\n\n    # RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds\n    # relabelings for a few standard Kubernetes fields. The original scrape job’s name\n    # is available via the __tmp_prometheus_job_name label.\n    # More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config\n    relabelings: []\n    # MetricRelabelConfigs to apply to samples before ingestion.\n    metricRelabelings: []\n\n  googlePodMonitor:\n    # If enabled, It creates Google Managed Prometheus scraping config\n    enabled: false\n    # Set a custom namespace where to deploy PodMonitoring resource\n    # serviceMonitorNamespace: \"\"\n    scrapeInterval: 60s\n    # This is the default endpoint used by the prometheus plugin\n    scrapeEndpoint: /prometheus\n\n  # -- Can be used to disable rendering controller test resources when using helm template\n  testEnabled: true\n\n  httpsKeyStore:\n    # -- Enables HTTPS keystore on jenkins controller\n    enable: false\n    # -- Name of the secret that already has SSL keystore\n    jenkinsHttpsJksSecretName: \"\"\n    # -- Name of the key in the secret that already has SSL keystore\n    jenkinsHttpsJksSecretKey: \"jenkins-jks-file\"\n    # -- Name of the secret that contains the JKS password, if it is not in the same secret as the JKS file\n    jenkinsHttpsJksPasswordSecretName: \"\"\n    # -- Name of the key in the secret that contains the JKS password\n    jenkinsHttpsJksPasswordSecretKey: \"https-jks-password\"\n    disableSecretMount: false\n\n    # When HTTPS keystore is enabled, servicePort and targetPort will be used as HTTPS port\n    # -- HTTP Port that Jenkins should listen to along with HTTPS, it also serves as the liveness and readiness probes port.\n    httpPort: 8081\n    # -- Path of HTTPS keystore file\n    path: \"/var/jenkins_keystore\"\n    # -- Jenkins keystore filename which will appear under controller.httpsKeyStore.path\n    fileName: \"keystore.jks\"\n    # -- Jenkins keystore password\n    password: \"password\"\n\n    # -- Base64 encoded Keystore content. Keystore must be converted to base64 then being pasted here\n    jenkinsKeyStoreBase64Encoded:\n    # Convert keystore.jks files content to base64 \u003e $ cat keystore.jks | base64\n#        /u3+7QAAAAIAAAABAAAAAQANamVua2luc2NpLmNvbQAAAW2r/b1ZAAAFATCCBP0wDgYKKwYBBAEq\n#        AhEBAQUABIIE6QbCqasvoHS0pSwYqSvdydMCB9t+VNfwhFIiiuAelJfO5sSe2SebJbtwHgLcRz1Z\n#        gMtWgOSFdl3bWSzA7vrW2LED52h+jXLYSWvZzuDuh8hYO85m10ikF6QR+dTi4jra0whIFDvq3pxe\n#        TnESxEsN+DvbZM3jA3qsjQJSeISNpDjO099dqQvHpnCn18lyk7J4TWJ8sOQQb1EM2zDAfAOSqA/x\n#        QuPEFl74DlY+5DIk6EBvpmWhaMSvXzWZACGA0sYqa157dq7O0AqmuLG/EI5EkHETO4CrtBW+yLcy\n#        2dUCXOMA+j+NjM1BjrQkYE5vtSfNO6lFZcISyKo5pTFlcA7ut0Fx2nZ8GhHTn32CpeWwNcZBn1gR\n#        pZVt6DxVVkhTAkMLhR4rL2wGIi/1WRs23ZOLGKtyDNvDHnQyDiQEoJGy9nAthA8aNHa3cfdF10vB\n#        Drb19vtpFHmpvKEEhpk2EBRF4fTi644Fuhu2Ied6118AlaPvEea+n6G4vBz+8RWuVCmZjLU+7h8l\n#        Hy3/WdUPoIL5eW7Kz+hS+sRTFzfu9C48dMkQH3a6f3wSY+mufizNF9U298r98TnYy+PfDJK0bstG\n#        Ph6yPWx8DGXKQBwrhWJWXI6JwZDeC5Ny+l8p1SypTmAjpIaSW3ge+KgcL6Wtt1R5hUV1ajVwVSUi\n#        HF/FachKqPqyLJFZTGjNrxnmNYpt8P1d5JTvJfmfr55Su/P9n7kcyWp7zMcb2Q5nlXt4tWogOHLI\n#        OzEWKCacbFfVHE+PpdrcvCVZMDzFogIq5EqGTOZe2poPpBVE+1y9mf5+TXBegy5HToLWvmfmJNTO\n#        NCDuBjgLs2tdw2yMPm4YEr57PnMX5gGTC3f2ZihXCIJDCRCdQ9sVBOjIQbOCzxFXkVITo0BAZhCi\n#        Yz61wt3Ud8e//zhXWCkCsSV+IZCxxPzhEFd+RFVjW0Nm9hsb2FgAhkXCjsGROgoleYgaZJWvQaAg\n#        UyBzMmKDPKTllBHyE3Gy1ehBNGPgEBChf17/9M+j8pcm1OmlM434ctWQ4qW7RU56//yq1soFY0Te\n#        fu2ei03a6m68fYuW6s7XEEK58QisJWRAvEbpwu/eyqfs7PsQ+zSgJHyk2rO95IxdMtEESb2GRuoi\n#        Bs+AHNdYFTAi+GBWw9dvEgqQ0Mpv0//6bBE/Fb4d7b7f56uUNnnE7mFnjGmGQN+MvC62pfwfvJTT\n#        EkT1iZ9kjM9FprTFWXT4UmO3XTvesGeE50sV9YPm71X4DCQwc4KE8vyuwj0s6oMNAUACW2ClU9QQ\n#        y0tRpaF1tzs4N42Q5zl0TzWxbCCjAtC3u6xf+c8MCGrr7DzNhm42LOQiHTa4MwX4x96q7235oiAU\n#        iQqSI/hyF5yLpWw4etyUvsx2/0/0wkuTU1FozbLoCWJEWcPS7QadMrRRISxHf0YobIeQyz34regl\n#        t1qSQ3dCU9D6AHLgX6kqllx4X0fnFq7LtfN7fA2itW26v+kAT2QFZ3qZhINGfofCja/pITC1uNAZ\n#        gsJaTMcQ600krj/ynoxnjT+n1gmeqThac6/Mi3YlVeRtaxI2InL82ZuD+w/dfY9OpPssQjy3xiQa\n#        jPuaMWXRxz/sS9syOoGVH7XBwKrWpQcpchozWJt40QV5DslJkclcr8aC2AGlzuJMTdEgz1eqV0+H\n#        bAXG9HRHN/0eJTn1/QAAAAEABVguNTA5AAADjzCCA4swggJzAhRGqVxH4HTLYPGO4rzHcCPeGDKn\n#        xTANBgkqhkiG9w0BAQsFADCBgTELMAkGA1UEBhMCY2ExEDAOBgNVBAgMB29udGFyaW8xEDAOBgNV\n#        BAcMB3Rvcm9udG8xFDASBgNVBAoMC2plbmtpbnN0ZXN0MRkwFwYDVQQDDBBqZW5raW5zdGVzdC5p\n#        bmZvMR0wGwYJKoZIhvcNAQkBFg50ZXN0QHRlc3QuaW5mbzAeFw0xOTEwMDgxNTI5NTVaFw0xOTEx\n#        MDcxNTI5NTVaMIGBMQswCQYDVQQGEwJjYTEQMA4GA1UECAwHb250YXJpbzEQMA4GA1UEBwwHdG9y\n#        b250bzEUMBIGA1UECgwLamVua2luc3Rlc3QxGTAXBgNVBAMMEGplbmtpbnN0ZXN0LmluZm8xHTAb\n#        BgkqhkiG9w0BCQEWDnRlc3RAdGVzdC5pbmZvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\n#        AQEA02q352JTHGvROMBhSHvSv+vnoOTDKSTz2aLQn0tYrIRqRo+8bfmMjXuhkwZPSnCpvUGNAJ+w\n#        Jrt/dqMoYUjCBkjylD/qHmnXN5EwS1cMg1Djh65gi5JJLFJ7eNcoSsr/0AJ+TweIal1jJSP3t3PF\n#        9Uv21gm6xdm7HnNK66WpUUXLDTKaIs/jtagVY1bLOo9oEVeLN4nT2CYWztpMvdCyEDUzgEdDbmrP\n#        F5nKUPK5hrFqo1Dc5rUI4ZshL3Lpv398aMxv6n2adQvuL++URMEbXXBhxOrT6rCtYzbcR5fkwS9i\n#        d3Br45CoWOQro02JAepoU0MQKY5+xQ4Bq9Q7tB9BAwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAe\n#        4xc+mSvKkrKBHg9/zpkWgZUiOp4ENJCi8H4tea/PCM439v6y/kfjT/okOokFvX8N5aa1OSz2Vsrl\n#        m8kjIc6hiA7bKzT6lb0EyjUShFFZ5jmGVP4S7/hviDvgB5yEQxOPpumkdRP513YnEGj/o9Pazi5h\n#        /MwpRxxazoda9r45kqQpyG+XoM4pB+Fd3JzMc4FUGxfVPxJU4jLawnJJiZ3vqiSyaB0YyUL+Er1Q\n#        6NnqtR4gEBF0ZVlQmkycFvD4EC2boP943dLqNUvop+4R3SM1QMM6P5u8iTXtHd/VN4MwMyy1wtog\n#        hYAzODo1Jt59pcqqKJEas0C/lFJEB3frw4ImNx5fNlJYOpx+ijfQs9m39CevDq0=\n\nagent:\n  # -- Enable Kubernetes plugin jnlp-agent podTemplate\n  enabled: true\n  # -- The name of the pod template to use for providing default values\n  defaultsProviderTemplate: \"\"\n\n  # Useful for not including a serviceAccount in the template if `false`\n  # -- Use `serviceAccountAgent.name` as the default value for defaults template `serviceAccount`\n  useDefaultServiceAccount: true\n\n  # -- Override the default service account\n  # @default -- `serviceAccountAgent.name` if `agent.useDefaultServiceAccount` is `true`\n  serviceAccount:\n\n  # For connecting to the Jenkins controller\n  # -- Overrides the Kubernetes Jenkins URL\n  jenkinsUrl:\n\n  # connects to the specified host and port, instead of connecting directly to the Jenkins controller\n  # -- Overrides the Kubernetes Jenkins tunnel\n  jenkinsTunnel:\n  # -- Disables the verification of the controller certificate on remote connection. This flag correspond to the \"Disable https certificate check\" flag in kubernetes plugin UI\n  skipTlsVerify: false\n  # -- Enable the possibility to restrict the usage of this agent to specific folder. This flag correspond to the \"Restrict pipeline support to authorized folders\" flag in kubernetes plugin UI\n  usageRestricted: false\n  # -- The connection timeout in seconds for connections to Kubernetes API. The minimum value is 5\n  kubernetesConnectTimeout: 5\n  # -- The read timeout in seconds for connections to Kubernetes API. The minimum value is 15\n  kubernetesReadTimeout: 15\n  # -- The maximum concurrent connections to Kubernetes API\n  maxRequestsPerHostStr: \"32\"\n  # -- Time in minutes after which the Kubernetes cloud plugin will clean up an idle worker that has not already terminated\n  retentionTimeout: 5\n  # -- Seconds to wait for pod to be running\n  waitForPodSec: 600\n  # -- Namespace in which the Kubernetes agents should be launched\n  namespace:\n  # -- Custom Pod labels (an object with `label-key: label-value` pairs)\n  podLabels: {}\n  # -- Custom registry used to pull the agent jnlp image from\n  jnlpregistry:\n  image:\n    # -- Registry to pull the agent jnlp image from\n    registry: \"\"\n    # -- Repository to pull the agent jnlp image from\n    repository: \"jenkins/inbound-agent\"\n    # -- Tag of the image to pull\n    tag: \"3345.v03dee9b_f88fc-2\"\n  # -- Configure working directory for default agent\n  workingDir: \"/home/jenkins/agent\"\n  nodeUsageMode: \"NORMAL\"\n  # -- Append Jenkins labels to the agent\n  customJenkinsLabels: []\n  # -- Name of the secret to be used to pull the image\n  imagePullSecretName:\n  componentName: \"jenkins-agent\"\n  # -- Enables agent communication via websockets\n  websocket: false\n  directConnection: false\n  # -- Agent privileged container\n  privileged: false\n  # -- Configure container user\n  runAsUser:\n  # -- Configure container group\n  runAsGroup:\n  # -- Enables the agent to use the host network\n  hostNetworking: false\n  # -- Resources allocation (Requests and Limits)\n  resources:\n    requests:\n      cpu: \"512m\"\n      memory: \"512Mi\"\n      # ephemeralStorage:\n    limits:\n      cpu: \"512m\"\n      memory: \"512Mi\"\n      # ephemeralStorage:\n  livenessProbe: {}\n  #  execArgs: \"cat /tmp/healthy\"\n  #  failureThreshold: 3\n  #  initialDelaySeconds: 0\n  #  periodSeconds: 10\n  #  successThreshold: 1\n  #  timeoutSeconds: 1\n\n  # You may want to change this to true while testing a new image\n  # -- Always pull agent container image before build\n  alwaysPullImage: false\n  # When using Pod Security Admission in the Agents namespace with the restricted Pod Security Standard,\n  # the jnlp container cannot be scheduled without overriding its container definition with a securityContext.\n  # This option allows to automatically inject in the jnlp container a securityContext\n  # that is suitable for the use of the restricted Pod Security Standard.\n  # -- Set a restricted securityContext on jnlp containers\n  restrictedPssSecurityContext: false\n  # Controls how agent pods are retained after the Jenkins build completes\n  # Possible values: Always, Never, OnFailure\n  podRetention: \"Never\"\n  # Disable if you do not want the Yaml the agent pod template to show up\n  # in the job Console Output. This can be helpful for either security reasons\n  # or simply to clean up the output to make it easier to read.\n  showRawYaml: true\n\n  # You can define the volumes that you want to mount for this container\n  # Allowed types are: ConfigMap, EmptyDir, EphemeralVolume, HostPath, Nfs, PVC, Secret\n  # Configure the attributes as they appear in the corresponding Java class for that type\n  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes\n  # -- Additional volumes\n  volumes: []\n  # - type: ConfigMap\n  #   configMapName: myconfigmap\n  #   mountPath: /var/myapp/myconfigmap\n  # - type: EmptyDir\n  #   mountPath: /var/myapp/myemptydir\n  #   memory: false\n  # - type: EphemeralVolume\n  #   mountPath: /var/myapp/myephemeralvolume\n  #   accessModes: ReadWriteOnce\n  #   requestsSize: 10Gi\n  #   storageClassName: mystorageclass\n  # - type: HostPath\n  #   hostPath: /var/lib/containers\n  #   mountPath: /var/myapp/myhostpath\n  # - type: Nfs\n  #   mountPath: /var/myapp/mynfs\n  #   readOnly: false\n  #   serverAddress: \"192.0.2.0\"\n  #   serverPath: /var/lib/containers\n  # - type: PVC\n  #   claimName: mypvc\n  #   mountPath: /var/myapp/mypvc\n  #   readOnly: false\n  # - type: Secret\n  #   defaultMode: \"600\"\n  #   mountPath: /var/myapp/mysecret\n  #   secretName: mysecret\n  # Pod-wide environment, these vars are visible to any container in the agent pod\n\n  # You can define the workspaceVolume that you want to mount for this container\n  # Allowed types are: DynamicPVC, EmptyDir, EphemeralVolume, HostPath, Nfs, PVC\n  # Configure the attributes as they appear in the corresponding Java class for that type\n  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace\n  # -- Workspace volume (defaults to EmptyDir)\n  workspaceVolume: {}\n  ## DynamicPVC example\n  # - type: DynamicPVC\n  #   configMapName: myconfigmap\n  ## EmptyDir example\n  # - type: EmptyDir\n  #   memory: false\n  ## EphemeralVolume example\n  # - type: EphemeralVolume\n  #   accessModes: ReadWriteOnce\n  #   requestsSize: 10Gi\n  #   storageClassName: mystorageclass\n  ## HostPath example\n  # - type: HostPath\n  #   hostPath: /var/lib/containers\n  ## NFS example\n  # - type: Nfs\n  #   readOnly: false\n  #   serverAddress: \"192.0.2.0\"\n  #   serverPath: /var/lib/containers\n  ## PVC example\n  # - type: PVC\n  #   claimName: mypvc\n  #   readOnly: false\n\n  # Pod-wide environment, these vars are visible to any container in the agent pod\n  # -- Environment variables for the agent Pod\n  envVars: []\n  # - name: PATH\n  #   value: /usr/local/bin\n  # -- Mount a secret as environment variable\n  secretEnvVars: []\n  # - key: PATH\n  #   optional: false # default: false\n  #   secretKey: MY-K8S-PATH\n  #   secretName: my-k8s-secret\n\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n  # Key Value selectors. Ex:\n  # nodeSelector\n  #   jenkins-agent: v1\n\n  # -- Command to execute when side container starts\n  command:\n  # -- Arguments passed to command to execute\n  args: \"${computer.jnlpmac} ${computer.name}\"\n  # -- Side container name\n  sideContainerName: \"jnlp\"\n\n  # Doesn't allocate pseudo TTY by default\n  # -- Allocate pseudo tty to the side container\n  TTYEnabled: false\n  # -- Max number of agents to launch for a whole cluster.\n  containerCap: 10\n  # -- Max number of agents to launch for this type of agent\n  instanceCap: 2147483647\n  # -- Agent Pod base name\n  podName: \"default\"\n\n  # Enables garbage collection of orphan pods for this Kubernetes cloud. (beta)\n  garbageCollection:\n    # -- When enabled, Jenkins will periodically check for orphan pods that have not been touched for the given timeout period and delete them.\n    enabled: false\n    # -- Namespaces to look at for garbage collection, in addition to the default namespace defined for the cloud. One namespace per line.\n    namespaces: \"\"\n    # namespaces: |-\n    #   namespaceOne\n    #   namespaceTwo\n    # -- Timeout value for orphaned pods\n    timeout: 300\n\n  # -- Allows the Pod to remain active for reuse until the configured number of minutes has passed since the last step was executed on it\n  idleMinutes: 0\n\n  # The raw yaml of a Pod API Object, for example, this allows usage of toleration for agent pods.\n  # https://github.com/jenkinsci/kubernetes-plugin#using-yaml-to-define-pod-templates\n  # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  # -- The raw yaml of a Pod API Object to merge into the agent spec\n  yamlTemplate: \"\"\n  # yamlTemplate: |-\n  #   apiVersion: v1\n  #   kind: Pod\n  #   spec:\n  #     tolerations:\n  #     - key: \"key\"\n  #       operator: \"Equal\"\n  #       value: \"value\"\n\n  # -- Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates. Possible values: \"merge\" or \"override\"\n  yamlMergeStrategy: \"override\"\n  # -- Controls whether the defined yaml merge strategy will be inherited if another defined pod template is configured to inherit from the current one\n  inheritYamlMergeStrategy: false\n  # -- Timeout in seconds for an agent to be online\n  connectTimeout: 100\n  # -- Annotations to apply to the pod\n  annotations: {}\n\n  # Containers specified here are added to all agents. Set key empty to remove container from additional agents.\n  # -- Add additional containers to the agents\n  additionalContainers: []\n  #  - sideContainerName: dind\n  #    image:\n  #      repository: docker\n  #      tag: dind\n  #    command: dockerd-entrypoint.sh\n  #    args: \"\"\n  #    privileged: true\n  #    resources:\n  #      requests:\n  #        cpu: 500m\n  #        memory: 1Gi\n  #      limits:\n  #        cpu: 1\n  #        memory: 2Gi\n\n  # Useful when configuring agents only with the podTemplates value, since the default podTemplate populated by values mentioned above will be excluded in the rendered template.\n  # -- Disable the default Jenkins Agent configuration\n  disableDefaultAgent: false\n\n  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.\n  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.\n  # Keys are only used to give the pod template a meaningful name. The only restriction is they may only contain RFC 1123 \\ DNS label\n  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.\n  # For this pod templates configuration to be loaded, the following values must be set:\n  # controller.JCasC.defaultConfig: true\n  # Best reference is https://\u003cjenkins_url\u003e/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.\n  # -- Configures extra pod templates for the default kubernetes cloud\n  podTemplates: {}\n  #  python: |\n  #    - name: python\n  #      label: jenkins-python\n  #      serviceAccount: jenkins\n  #      containers:\n  #        - name: python\n  #          image: python:3\n  #          command: \"/bin/sh -c\"\n  #          args: \"cat\"\n  #          ttyEnabled: true\n  #          privileged: true\n  #          resourceRequestCpu: \"400m\"\n  #          resourceRequestMemory: \"512Mi\"\n  #          resourceLimitCpu: \"1\"\n  #          resourceLimitMemory: \"1024Mi\"\n\n# Inherits all values from `agent` so you only need to specify values which differ\n# -- Configure additional\nadditionalAgents: {}\n#  maven:\n#    podName: maven\n#    customJenkinsLabels: maven\n#    # An example of overriding the jnlp container\n#    # sideContainerName: jnlp\n#    image:\n#      repository: jenkins/jnlp-agent-maven\n#      tag: latest\n#  python:\n#    podName: python\n#    customJenkinsLabels: python\n#    sideContainerName: python\n#    image:\n#      repository: python\n#      tag: \"3\"\n#    command: \"/bin/sh -c\"\n#    args: \"cat\"\n#    TTYEnabled: true\n\n# Here you can add additional clouds\n# They inherit all values from the default cloud (including the main agent), so\n# you only need to specify values which differ. If you want to override\n# default additionalAgents with the additionalClouds.additionalAgents set\n# additionalAgentsOverride to `true`.\nadditionalClouds: {}\n#  remote-cloud-1:\n#    kubernetesURL: https://api.remote-cloud.com\n#    additionalAgentsOverride: true\n#    additionalAgents:\n#      maven-2:\n#        podName: maven-2\n#        customJenkinsLabels: maven\n#        # An example of overriding the jnlp container\n#        # sideContainerName: jnlp\n#        image:\n#          repository: jenkins/jnlp-agent-maven\n#          tag: latest\n#        namespace: my-other-maven-namespace\n#  remote-cloud-2:\n#    kubernetesURL: https://api.remote-cloud.com\n\npersistence:\n  # -- Enable the use of a Jenkins PVC\n  enabled: true\n\n  # A manually managed Persistent Volume and Claim\n  # Requires persistence.enabled: true\n  # If defined, PVC must be created manually before volume will be bound\n  # -- Provide the name of a PVC\n  existingClaim:\n\n  # jenkins data Persistent Volume Storage Class\n  # If defined, storageClassName: \u003cstorageClass\u003e\n  # If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  # If undefined (the default) or set to null, no storageClassName spec is\n  #   set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS \u0026 OpenStack)\n  # -- Storage class for the PVC\n  storageClass:\n  # -- Annotations for the PVC\n  annotations: {}\n  # -- Labels for the PVC\n  labels: {}\n  # -- The PVC access mode\n  accessMode: \"ReadWriteOnce\"\n  # -- The size of the PVC\n  size: \"8Gi\"\n\n  # ref: https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/\n  # -- Existing data source to clone PVC from\n  dataSource: {}\n  #   name: PVC-NAME\n  #   kind: PersistentVolumeClaim\n\n  # -- SubPath for jenkins-home mount\n  subPath:\n  # -- Additional volumes\n  volumes: []\n  #  - name: nothing\n  #    emptyDir: {}\n\n  # -- Additional mounts\n  mounts: []\n  #  - mountPath: /var/nothing\n  #    name: nothing\n  #    readOnly: true\n\nnetworkPolicy:\n  # -- Enable the creation of NetworkPolicy resources\n  enabled: false\n\n  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'\n  # For Kubernetes v1.7, use 'networking.k8s.io/v1'\n  # -- NetworkPolicy ApiVersion\n  apiVersion: networking.k8s.io/v1\n  # You can allow agents to connect from both within the cluster (from within specific/all namespaces) AND/OR from a given external IP range\n  internalAgents:\n    # -- Allow internal agents (from the same cluster) to connect to controller. Agent pods will be filtered based on PodLabels\n    allowed: true\n    # -- A map of labels (keys/values) that agent pods must have to be able to connect to controller\n    podLabels: {}\n    # -- A map of labels (keys/values) that agents namespaces must have to be able to connect to controller\n    namespaceLabels:\n      {}\n      # project: myproject\n  externalAgents:\n    # -- The IP range from which external agents are allowed to connect to controller, i.e., 172.17.0.0/16\n    ipCIDR:\n    # -- A list of IP sub-ranges to be excluded from the allowlisted IP range\n    except:\n      []\n      # - 172.17.1.0/24\n\n## Install Default RBAC roles and bindings\nrbac:\n  # -- Whether RBAC resources are created\n  create: true\n  # -- Whether the Jenkins service account should be able to read Kubernetes secrets\n  readSecrets: false\n  # -- Whether the Jenkins service account should be able to use the OpenShift \"nonroot\" Security Context Constraints\n  useOpenShiftNonRootSCC: false\n\nserviceAccount:\n  # -- Configures if a ServiceAccount with this name should be created\n  create: true\n\n  # The name of the ServiceAccount is autogenerated by default\n  #  -- The name of the ServiceAccount to be used by access-controlled resources\n  name:\n  # -- Configures annotations for the ServiceAccount\n  annotations: {}\n  # -- Configures extra labels for the ServiceAccount\n  extraLabels: {}\n  # -- Controller ServiceAccount image pull secret\n  imagePullSecretName:\n  # -- Auto-mount ServiceAccount token\n  automountServiceAccountToken: true\n\nserviceAccountAgent:\n  # -- Configures if an agent ServiceAccount should be created\n  create: false\n\n  # If not set and create is true, a name is generated using the fullname template\n  # -- The name of the agent ServiceAccount to be used by access-controlled resources\n  name:\n  # -- Configures annotations for the agent ServiceAccount\n  annotations: {}\n  # -- Configures extra labels for the agent ServiceAccount\n  extraLabels: {}\n  # -- Agent ServiceAccount image pull secret\n  imagePullSecretName:\n  # -- Auto-mount ServiceAccount token\n  automountServiceAccountToken: true\n\n# -- Checks if any deprecated values are used\ncheckDeprecation: true\n\nawsSecurityGroupPolicies:\n  enabled: false\n  policies:\n    - name: \"\"\n      securityGroupIds: []\n      podSelector: {}\n\n# Here you can configure unit tests values when executing the helm unittest in the CONTRIBUTING.md\nhelmtest:\n  # A testing framework for bash\n  bats:\n    # Bash Automated Testing System (BATS)\n    image:\n      # -- Registry of the image used to test the framework\n      registry: \"docker.io\"\n      # -- Repository of the image used to test the framework\n      repository: \"bats/bats\"\n      # -- Tag of the image to test the framework\n      tag: \"1.12.0\"\n"
            ],
            "verify": false,
            "version": "5.8.104",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
